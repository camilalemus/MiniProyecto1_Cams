

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 21:38:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001E                     _ADRESH	set	30
   285  000C                     _PIR1bits	set	12
   286  0008                     _PORTD	set	8
   287  0001                     _TMR0	set	1
   288  000B                     _INTCONbits	set	11
   289  001F                     _ADCON0bits	set	31
   290  0007                     _PORTC	set	7
   291  009F                     _ADCON1bits	set	159
   292  008C                     _PIE1bits	set	140
   293  0096                     _IOCBbits	set	150
   294  0086                     _TRISBbits	set	134
   295  0086                     _TRISB	set	134
   296  0088                     _TRISD	set	136
   297  0087                     _TRISC	set	135
   298  0085                     _TRISAbits	set	133
   299  0085                     _TRISA	set	133
   300  0188                     _ANSELbits	set	392
   301  0189                     _ANSELH	set	393
   302  0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308  000F                     __initialization:
   309                           
   310                           ; Clear objects allocated to COMMON
   311  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   312  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   313  0011                     end_of_initialization:	
   314                           ;End of C runtime variable initialization code
   315                           
   316  0011                     __end_of__initialization:
   317  0011  0183               	clrf	3
   318  0012  120A  118A  291C   	ljmp	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMMON
   321  0079                     __pbssCOMMON:
   322  0079                     _ADC_analogvalue:
   323  0079                     	ds	1
   324  007A                     _ADC_cflag:
   325  007A                     	ds	1
   326                           
   327                           	psect	cstackCOMMON
   328  0070                     __pcstackCOMMON:
   329  0070                     ?_setup:
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_isr:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ??_isr:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           ; 1 bytes @ 0x0
   341  0070                     	ds	3
   342  0073                     ??_setup:
   343  0073                     ?_ADC_init:	
   344                           ; 1 bytes @ 0x3
   345                           
   346  0073                     ADC_init@Channel:	
   347                           ; 1 bytes @ 0x3
   348                           
   349                           
   350                           ; 1 bytes @ 0x3
   351  0073                     	ds	1
   352  0074                     ADC_init@Justified:
   353                           
   354                           ; 1 bytes @ 0x4
   355  0074                     	ds	1
   356  0075                     ADC_init@Vref:
   357                           
   358                           ; 1 bytes @ 0x5
   359  0075                     	ds	1
   360  0076                     ??_ADC_init:
   361                           
   362                           ; 1 bytes @ 0x6
   363  0076                     	ds	2
   364  0078                     ADC_init@ADCSbit:
   365                           
   366                           ; 1 bytes @ 0x8
   367  0078                     	ds	1
   368                           
   369                           	psect	cstackBANK0
   370  0020                     __pcstackBANK0:
   371  0020                     ??_main:
   372                           
   373                           ; 1 bytes @ 0x0
   374  0020                     	ds	1
   375                           
   376                           	psect	maintext
   377  011C                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 54 in file "mains3.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B00/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          0       1       0       0       0
   400 ;;      Totals:         0       1       0       0       0
   401 ;;Total ram usage:        1 bytes
   402 ;; Hardware stack levels required when called:    2
   403 ;; This function calls:
   404 ;;		_ADC_init
   405 ;;		_setup
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _main
   413  011C                     _main:
   414  011C                     l1069:	
   415                           ;incstack = 0
   416                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   417                           
   418                           
   419                           ;mains3.c: 55:     setup();
   420  011C  120A  118A  214B  120A  118A  	fcall	_setup
   421  0121                     l1071:
   422                           
   423                           ;mains3.c: 56:     ADC_init(1, 2, 0, 1);
   424  0121  3002               	movlw	2
   425  0122  1283               	bcf	3,5	;RP0=0, select bank0
   426  0123  1303               	bcf	3,6	;RP1=0, select bank0
   427  0124  00A0               	movwf	??_main
   428  0125  0820               	movf	??_main,w
   429  0126  00F3               	movwf	ADC_init@Channel
   430  0127  01F4               	clrf	ADC_init@Justified
   431  0128  01F5               	clrf	ADC_init@Vref
   432  0129  0AF5               	incf	ADC_init@Vref,f
   433  012A  3001               	movlw	1
   434  012B  120A  118A  2015  120A  118A  	fcall	_ADC_init
   435  0130                     l1073:
   436                           
   437                           ;mains3.c: 58:     ADC_cflag = 1;
   438  0130  01FA               	clrf	_ADC_cflag
   439  0131  0AFA               	incf	_ADC_cflag,f
   440  0132                     l1075:
   441                           
   442                           ;mains3.c: 60:         PORTC = ADC_analogvalue;
   443  0132  0879               	movf	_ADC_analogvalue,w
   444  0133  1283               	bcf	3,5	;RP0=0, select bank0
   445  0134  1303               	bcf	3,6	;RP1=0, select bank0
   446  0135  0087               	movwf	7	;volatile
   447  0136                     l1077:
   448                           
   449                           ;mains3.c: 61:         if (ADC_cflag == 1) {
   450  0136  037A               	decf	_ADC_cflag,w
   451  0137  1D03               	btfss	3,2
   452  0138  293A               	goto	u41
   453  0139  293B               	goto	u40
   454  013A                     u41:
   455  013A  2932               	goto	l1075
   456  013B                     u40:
   457  013B                     l1079:
   458                           
   459                           ;mains3.c: 62:             _delay((unsigned long)((500)*((8000000)/4000000.0)));
   460  013B  30C7               	movlw	199
   461  013C  1283               	bcf	3,5	;RP0=0, select bank0
   462  013D  1303               	bcf	3,6	;RP1=0, select bank0
   463  013E  00A0               	movwf	??_main
   464  013F                     u57:
   465  013F  2940               	nop2
   466  0140  0BA0               	decfsz	??_main,f
   467  0141  293F               	goto	u57
   468  0142  2943               	nop2
   469  0143                     l1081:
   470                           
   471                           ;mains3.c: 63:             ADC_cflag = 0;
   472  0143  01FA               	clrf	_ADC_cflag
   473  0144                     l1083:
   474                           
   475                           ;mains3.c: 64:             ADCON0bits.GO = 1;
   476  0144  1283               	bcf	3,5	;RP0=0, select bank0
   477  0145  1303               	bcf	3,6	;RP1=0, select bank0
   478  0146  149F               	bsf	31,1	;volatile
   479  0147  2932               	goto	l1075
   480  0148  120A  118A  280C   	ljmp	start
   481  014B                     __end_of_main:
   482                           
   483                           	psect	text1
   484  014B                     __ptext1:	
   485 ;; *************** function _setup *****************
   486 ;; Defined at:
   487 ;;		line 73 in file "mains3.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		status,2
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   501 ;;      Params:         0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0
   504 ;;      Totals:         0       0       0       0       0
   505 ;;Total ram usage:        0 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; Hardware stack levels required when called:    1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           
   516                           ;psect for function _setup
   517  014B                     _setup:
   518  014B                     l705:	
   519                           ;incstack = 0
   520                           ; Regs used in _setup: [status,2]
   521                           
   522                           
   523                           ;mains3.c: 75:     ANSEL = 0;
   524  014B  1683               	bsf	3,5	;RP0=1, select bank3
   525  014C  1703               	bsf	3,6	;RP1=1, select bank3
   526  014D  0188               	clrf	8	;volatile
   527                           
   528                           ;mains3.c: 76:     ANSELH = 0;
   529  014E  0189               	clrf	9	;volatile
   530  014F                     l707:
   531                           
   532                           ;mains3.c: 77:     ANSELbits.ANS2 = 1;
   533  014F  1508               	bsf	8,2	;volatile
   534  0150                     l709:
   535                           
   536                           ;mains3.c: 79:     INTCONbits.GIE = 1;
   537  0150  178B               	bsf	11,7	;volatile
   538                           
   539                           ;mains3.c: 80:     TMR0 = 0;
   540  0151  1283               	bcf	3,5	;RP0=0, select bank0
   541  0152  1303               	bcf	3,6	;RP1=0, select bank0
   542  0153  0181               	clrf	1	;volatile
   543                           
   544                           ;mains3.c: 81:     TRISA = 0;
   545  0154  1683               	bsf	3,5	;RP0=1, select bank1
   546  0155  1303               	bcf	3,6	;RP1=0, select bank1
   547  0156  0185               	clrf	5	;volatile
   548  0157                     l711:
   549                           
   550                           ;mains3.c: 82:     TRISAbits.TRISA2 = 1;
   551  0157  1505               	bsf	5,2	;volatile
   552                           
   553                           ;mains3.c: 83:     TRISC = 0;
   554  0158  0187               	clrf	7	;volatile
   555                           
   556                           ;mains3.c: 84:     TRISD = 0;
   557  0159  0188               	clrf	8	;volatile
   558                           
   559                           ;mains3.c: 85:     TRISB = 0;
   560  015A  0186               	clrf	6	;volatile
   561                           
   562                           ;mains3.c: 86:     PORTC = 0;
   563  015B  1283               	bcf	3,5	;RP0=0, select bank0
   564  015C  1303               	bcf	3,6	;RP1=0, select bank0
   565  015D  0187               	clrf	7	;volatile
   566                           
   567                           ;mains3.c: 87:     PORTD = 0;
   568  015E  0188               	clrf	8	;volatile
   569  015F                     l713:
   570                           
   571                           ;mains3.c: 88:     TRISBbits.TRISB1 = 1;
   572  015F  1683               	bsf	3,5	;RP0=1, select bank1
   573  0160  1303               	bcf	3,6	;RP1=0, select bank1
   574  0161  1486               	bsf	6,1	;volatile
   575  0162                     l715:
   576                           
   577                           ;mains3.c: 89:     TRISBbits.TRISB0 = 1;
   578  0162  1406               	bsf	6,0	;volatile
   579  0163                     l717:
   580                           
   581                           ;mains3.c: 90:     INTCONbits.PEIE = 1;
   582  0163  170B               	bsf	11,6	;volatile
   583  0164                     l719:
   584                           
   585                           ;mains3.c: 91:     INTCONbits.RBIE = 1;
   586  0164  158B               	bsf	11,3	;volatile
   587  0165                     l721:
   588                           
   589                           ;mains3.c: 92:     IOCBbits.IOCB0 = 1;
   590  0165  1416               	bsf	22,0	;volatile
   591  0166                     l723:
   592                           
   593                           ;mains3.c: 93:     IOCBbits.IOCB1 = 1;
   594  0166  1496               	bsf	22,1	;volatile
   595  0167                     l725:
   596                           
   597                           ;mains3.c: 94:     INTCONbits.RBIF = 0;
   598  0167  100B               	bcf	11,0	;volatile
   599  0168                     l727:
   600                           
   601                           ;mains3.c: 96:     PIR1bits.ADIF = 0;
   602  0168  1283               	bcf	3,5	;RP0=0, select bank0
   603  0169  1303               	bcf	3,6	;RP1=0, select bank0
   604  016A  130C               	bcf	12,6	;volatile
   605  016B                     l729:
   606                           
   607                           ;mains3.c: 97:     PIE1bits.ADIE = 1;
   608  016B  1683               	bsf	3,5	;RP0=1, select bank1
   609  016C  1303               	bcf	3,6	;RP1=0, select bank1
   610  016D  170C               	bsf	12,6	;volatile
   611  016E                     l731:
   612                           
   613                           ;mains3.c: 98:     ADCON0bits.ADON = 1;
   614  016E  1283               	bcf	3,5	;RP0=0, select bank0
   615  016F  1303               	bcf	3,6	;RP1=0, select bank0
   616  0170  141F               	bsf	31,0	;volatile
   617  0171                     l58:
   618  0171  0008               	return
   619  0172                     __end_of_setup:
   620                           
   621                           	psect	text2
   622  0015                     __ptext2:	
   623 ;; *************** function _ADC_init *****************
   624 ;; Defined at:
   625 ;;		line 3 in file "ADC.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  ADCSbit         1    wreg     unsigned char 
   628 ;;  Channel         1    3[COMMON] unsigned char 
   629 ;;  Justified       1    4[COMMON] unsigned char 
   630 ;;  Vref            1    5[COMMON] unsigned char 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  ADCSbit         1    8[COMMON] unsigned char 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         3       0       0       0       0
   643 ;;      Locals:         1       0       0       0       0
   644 ;;      Temps:          2       0       0       0       0
   645 ;;      Totals:         6       0       0       0       0
   646 ;;Total ram usage:        6 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _ADC_init
   658  0015                     _ADC_init:
   659                           
   660                           ;incstack = 0
   661                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
   662                           ;ADC_init@ADCSbit stored from wreg
   663  0015  00F8               	movwf	ADC_init@ADCSbit
   664  0016                     l905:
   665                           
   666                           ;ADC.c: 5:     switch (ADCSbit){
   667  0016  2830               	goto	l909
   668  0017                     l76:	
   669                           ;ADC.c: 6:         case 0:
   670                           
   671                           
   672                           ;ADC.c: 7:             ADCON0bits.ADCS1 = 0;
   673  0017  1283               	bcf	3,5	;RP0=0, select bank0
   674  0018  1303               	bcf	3,6	;RP1=0, select bank0
   675  0019  139F               	bcf	31,7	;volatile
   676                           
   677                           ;ADC.c: 8:             ADCON0bits.ADCS0 = 0;
   678  001A  131F               	bcf	31,6	;volatile
   679                           
   680                           ;ADC.c: 9:             break;
   681  001B  2897               	goto	l947
   682  001C                     l78:	
   683                           ;ADC.c: 10:         case 1:
   684                           
   685                           
   686                           ;ADC.c: 11:             ADCON0bits.ADCS1 = 0;
   687  001C  1283               	bcf	3,5	;RP0=0, select bank0
   688  001D  1303               	bcf	3,6	;RP1=0, select bank0
   689  001E  139F               	bcf	31,7	;volatile
   690                           
   691                           ;ADC.c: 12:             ADCON0bits.ADCS0 = 1;
   692  001F  171F               	bsf	31,6	;volatile
   693                           
   694                           ;ADC.c: 13:             break;
   695  0020  2897               	goto	l947
   696  0021                     l79:	
   697                           ;ADC.c: 14:         case 2:
   698                           
   699                           
   700                           ;ADC.c: 15:             ADCON0bits.ADCS1 = 1;
   701  0021  1283               	bcf	3,5	;RP0=0, select bank0
   702  0022  1303               	bcf	3,6	;RP1=0, select bank0
   703  0023  179F               	bsf	31,7	;volatile
   704                           
   705                           ;ADC.c: 16:             ADCON0bits.ADCS0 = 0;
   706  0024  131F               	bcf	31,6	;volatile
   707                           
   708                           ;ADC.c: 17:             break;
   709  0025  2897               	goto	l947
   710  0026                     l80:	
   711                           ;ADC.c: 18:         case 3:
   712                           
   713                           
   714                           ;ADC.c: 19:             ADCON0bits.ADCS1 = 1;
   715  0026  1283               	bcf	3,5	;RP0=0, select bank0
   716  0027  1303               	bcf	3,6	;RP1=0, select bank0
   717  0028  179F               	bsf	31,7	;volatile
   718                           
   719                           ;ADC.c: 20:             ADCON0bits.ADCS0 = 1;
   720  0029  171F               	bsf	31,6	;volatile
   721                           
   722                           ;ADC.c: 21:             break;
   723  002A  2897               	goto	l947
   724  002B                     l81:	
   725                           ;ADC.c: 22:         default:
   726                           
   727                           
   728                           ;ADC.c: 23:             ADCON0bits.ADCS1 = 0;
   729  002B  1283               	bcf	3,5	;RP0=0, select bank0
   730  002C  1303               	bcf	3,6	;RP1=0, select bank0
   731  002D  139F               	bcf	31,7	;volatile
   732                           
   733                           ;ADC.c: 24:             ADCON0bits.ADCS0 = 1;
   734  002E  171F               	bsf	31,6	;volatile
   735                           
   736                           ;ADC.c: 25:             break;
   737  002F  2897               	goto	l947
   738  0030                     l909:
   739  0030  0878               	movf	ADC_init@ADCSbit,w
   740  0031  00F6               	movwf	??_ADC_init
   741  0032  01F7               	clrf	??_ADC_init+1
   742                           
   743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   744                           ; Switch size 1, requested type "simple"
   745                           ; Number of cases is 1, Range of values is 0 to 0
   746                           ; switch strategies available:
   747                           ; Name         Instructions Cycles
   748                           ; simple_byte            4     3 (average)
   749                           ; direct_byte           11     8 (fixed)
   750                           ; jumptable            260     6 (fixed)
   751                           ;	Chosen strategy is simple_byte
   752  0033  0877               	movf	??_ADC_init+1,w
   753  0034  3A00               	xorlw	0	; case 0
   754  0035  1903               	skipnz
   755  0036  2838               	goto	l1165
   756  0037  282B               	goto	l81
   757  0038                     l1165:
   758                           
   759                           ; Switch size 1, requested type "simple"
   760                           ; Number of cases is 4, Range of values is 0 to 3
   761                           ; switch strategies available:
   762                           ; Name         Instructions Cycles
   763                           ; simple_byte           13     7 (average)
   764                           ; direct_byte           20     8 (fixed)
   765                           ; jumptable            260     6 (fixed)
   766                           ;	Chosen strategy is simple_byte
   767  0038  0876               	movf	??_ADC_init,w
   768  0039  3A00               	xorlw	0	; case 0
   769  003A  1903               	skipnz
   770  003B  2817               	goto	l76
   771  003C  3A01               	xorlw	1	; case 1
   772  003D  1903               	skipnz
   773  003E  281C               	goto	l78
   774  003F  3A03               	xorlw	3	; case 2
   775  0040  1903               	skipnz
   776  0041  2821               	goto	l79
   777  0042  3A01               	xorlw	1	; case 3
   778  0043  1903               	skipnz
   779  0044  2826               	goto	l80
   780  0045  282B               	goto	l81
   781  0046                     l911:
   782                           
   783                           ;ADC.c: 30:             ADCON0bits.CHS = 0b0000;
   784  0046  30C3               	movlw	-61
   785  0047  059F               	andwf	31,f	;volatile
   786                           
   787                           ;ADC.c: 31:             break;
   788  0048  28DD               	goto	l951
   789  0049                     l913:
   790                           
   791                           ;ADC.c: 33:             ADCON0bits.CHS = 0b0001;
   792  0049  081F               	movf	31,w	;volatile
   793  004A  39C3               	andlw	-61
   794  004B  3804               	iorlw	4
   795  004C  009F               	movwf	31	;volatile
   796                           
   797                           ;ADC.c: 34:             break;
   798  004D  28DD               	goto	l951
   799  004E                     l915:
   800                           
   801                           ;ADC.c: 36:             ADCON0bits.CHS = 0b0010;
   802  004E  081F               	movf	31,w	;volatile
   803  004F  39C3               	andlw	-61
   804  0050  3808               	iorlw	8
   805  0051  009F               	movwf	31	;volatile
   806                           
   807                           ;ADC.c: 37:             break;
   808  0052  28DD               	goto	l951
   809  0053                     l917:
   810                           
   811                           ;ADC.c: 39:             ADCON0bits.CHS = 0b0011;
   812  0053  081F               	movf	31,w	;volatile
   813  0054  39C3               	andlw	-61
   814  0055  380C               	iorlw	12
   815  0056  009F               	movwf	31	;volatile
   816                           
   817                           ;ADC.c: 40:             break;
   818  0057  28DD               	goto	l951
   819  0058                     l919:
   820                           
   821                           ;ADC.c: 42:             ADCON0bits.CHS = 0b0100;
   822  0058  081F               	movf	31,w	;volatile
   823  0059  39C3               	andlw	-61
   824  005A  3810               	iorlw	16
   825  005B  009F               	movwf	31	;volatile
   826                           
   827                           ;ADC.c: 43:             break;
   828  005C  28DD               	goto	l951
   829  005D                     l921:
   830                           
   831                           ;ADC.c: 45:             ADCON0bits.CHS = 0b0101;
   832  005D  081F               	movf	31,w	;volatile
   833  005E  39C3               	andlw	-61
   834  005F  3814               	iorlw	20
   835  0060  009F               	movwf	31	;volatile
   836                           
   837                           ;ADC.c: 46:             break;
   838  0061  28DD               	goto	l951
   839  0062                     l923:
   840                           
   841                           ;ADC.c: 48:             ADCON0bits.CHS = 0b0110;
   842  0062  081F               	movf	31,w	;volatile
   843  0063  39C3               	andlw	-61
   844  0064  3818               	iorlw	24
   845  0065  009F               	movwf	31	;volatile
   846                           
   847                           ;ADC.c: 49:             break;
   848  0066  28DD               	goto	l951
   849  0067                     l925:
   850                           
   851                           ;ADC.c: 51:             ADCON0bits.CHS = 0b0111;
   852  0067  081F               	movf	31,w	;volatile
   853  0068  39C3               	andlw	-61
   854  0069  381C               	iorlw	28
   855  006A  009F               	movwf	31	;volatile
   856                           
   857                           ;ADC.c: 52:             break;
   858  006B  28DD               	goto	l951
   859  006C                     l927:
   860                           
   861                           ;ADC.c: 54:             ADCON0bits.CHS = 0b1000;
   862  006C  081F               	movf	31,w	;volatile
   863  006D  39C3               	andlw	-61
   864  006E  3820               	iorlw	32
   865  006F  009F               	movwf	31	;volatile
   866                           
   867                           ;ADC.c: 55:             break;
   868  0070  28DD               	goto	l951
   869  0071                     l929:
   870                           
   871                           ;ADC.c: 57:             ADCON0bits.CHS = 0b1001;
   872  0071  081F               	movf	31,w	;volatile
   873  0072  39C3               	andlw	-61
   874  0073  3824               	iorlw	36
   875  0074  009F               	movwf	31	;volatile
   876                           
   877                           ;ADC.c: 58:             break;
   878  0075  28DD               	goto	l951
   879  0076                     l931:
   880                           
   881                           ;ADC.c: 60:             ADCON0bits.CHS = 0b1010;
   882  0076  081F               	movf	31,w	;volatile
   883  0077  39C3               	andlw	-61
   884  0078  3828               	iorlw	40
   885  0079  009F               	movwf	31	;volatile
   886                           
   887                           ;ADC.c: 61:             break;
   888  007A  28DD               	goto	l951
   889  007B                     l933:
   890                           
   891                           ;ADC.c: 63:             ADCON0bits.CHS = 0b1011;
   892  007B  081F               	movf	31,w	;volatile
   893  007C  39C3               	andlw	-61
   894  007D  382C               	iorlw	44
   895  007E  009F               	movwf	31	;volatile
   896                           
   897                           ;ADC.c: 64:             break;
   898  007F  28DD               	goto	l951
   899  0080                     l935:
   900                           
   901                           ;ADC.c: 66:             ADCON0bits.CHS = 0b1100;
   902  0080  081F               	movf	31,w	;volatile
   903  0081  39C3               	andlw	-61
   904  0082  3830               	iorlw	48
   905  0083  009F               	movwf	31	;volatile
   906                           
   907                           ;ADC.c: 67:             break;
   908  0084  28DD               	goto	l951
   909  0085                     l937:
   910                           
   911                           ;ADC.c: 69:             ADCON0bits.CHS = 0b1101;
   912  0085  081F               	movf	31,w	;volatile
   913  0086  39C3               	andlw	-61
   914  0087  3834               	iorlw	52
   915  0088  009F               	movwf	31	;volatile
   916                           
   917                           ;ADC.c: 70:             break;
   918  0089  28DD               	goto	l951
   919  008A                     l939:
   920                           
   921                           ;ADC.c: 72:             ADCON0bits.CHS = 0b1110;
   922  008A  081F               	movf	31,w	;volatile
   923  008B  39C3               	andlw	-61
   924  008C  3838               	iorlw	56
   925  008D  009F               	movwf	31	;volatile
   926                           
   927                           ;ADC.c: 73:             break;
   928  008E  28DD               	goto	l951
   929  008F                     l941:
   930                           
   931                           ;ADC.c: 75:             ADCON0bits.CHS = 0b1111;
   932  008F  303C               	movlw	60
   933  0090  049F               	iorwf	31,f	;volatile
   934                           
   935                           ;ADC.c: 76:             break;
   936  0091  28DD               	goto	l951
   937  0092                     l943:
   938                           
   939                           ;ADC.c: 78:             ADCON0bits.CHS = 0b0010;
   940  0092  081F               	movf	31,w	;volatile
   941  0093  39C3               	andlw	-61
   942  0094  3808               	iorlw	8
   943  0095  009F               	movwf	31	;volatile
   944                           
   945                           ;ADC.c: 79:             break;
   946  0096  28DD               	goto	l951
   947  0097                     l947:
   948  0097  0873               	movf	ADC_init@Channel,w
   949  0098  00F6               	movwf	??_ADC_init
   950  0099  01F7               	clrf	??_ADC_init+1
   951                           
   952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   953                           ; Switch size 1, requested type "simple"
   954                           ; Number of cases is 1, Range of values is 0 to 0
   955                           ; switch strategies available:
   956                           ; Name         Instructions Cycles
   957                           ; simple_byte            4     3 (average)
   958                           ; direct_byte           11     8 (fixed)
   959                           ; jumptable            260     6 (fixed)
   960                           ;	Chosen strategy is simple_byte
   961  009A  0877               	movf	??_ADC_init+1,w
   962  009B  3A00               	xorlw	0	; case 0
   963  009C  1903               	skipnz
   964  009D  289F               	goto	l1167
   965  009E  2892               	goto	l943
   966  009F                     l1167:
   967                           
   968                           ; Switch size 1, requested type "simple"
   969                           ; Number of cases is 16, Range of values is 0 to 15
   970                           ; switch strategies available:
   971                           ; Name         Instructions Cycles
   972                           ; simple_byte           49    25 (average)
   973                           ; direct_byte           56     8 (fixed)
   974                           ; jumptable            260     6 (fixed)
   975                           ;	Chosen strategy is simple_byte
   976  009F  0876               	movf	??_ADC_init,w
   977  00A0  3A00               	xorlw	0	; case 0
   978  00A1  1903               	skipnz
   979  00A2  2846               	goto	l911
   980  00A3  3A01               	xorlw	1	; case 1
   981  00A4  1903               	skipnz
   982  00A5  2849               	goto	l913
   983  00A6  3A03               	xorlw	3	; case 2
   984  00A7  1903               	skipnz
   985  00A8  284E               	goto	l915
   986  00A9  3A01               	xorlw	1	; case 3
   987  00AA  1903               	skipnz
   988  00AB  2853               	goto	l917
   989  00AC  3A07               	xorlw	7	; case 4
   990  00AD  1903               	skipnz
   991  00AE  2858               	goto	l919
   992  00AF  3A01               	xorlw	1	; case 5
   993  00B0  1903               	skipnz
   994  00B1  285D               	goto	l921
   995  00B2  3A03               	xorlw	3	; case 6
   996  00B3  1903               	skipnz
   997  00B4  2862               	goto	l923
   998  00B5  3A01               	xorlw	1	; case 7
   999  00B6  1903               	skipnz
  1000  00B7  2867               	goto	l925
  1001  00B8  3A0F               	xorlw	15	; case 8
  1002  00B9  1903               	skipnz
  1003  00BA  286C               	goto	l927
  1004  00BB  3A01               	xorlw	1	; case 9
  1005  00BC  1903               	skipnz
  1006  00BD  2871               	goto	l929
  1007  00BE  3A03               	xorlw	3	; case 10
  1008  00BF  1903               	skipnz
  1009  00C0  2876               	goto	l931
  1010  00C1  3A01               	xorlw	1	; case 11
  1011  00C2  1903               	skipnz
  1012  00C3  287B               	goto	l933
  1013  00C4  3A07               	xorlw	7	; case 12
  1014  00C5  1903               	skipnz
  1015  00C6  2880               	goto	l935
  1016  00C7  3A01               	xorlw	1	; case 13
  1017  00C8  1903               	skipnz
  1018  00C9  2885               	goto	l937
  1019  00CA  3A03               	xorlw	3	; case 14
  1020  00CB  1903               	skipnz
  1021  00CC  288A               	goto	l939
  1022  00CD  3A01               	xorlw	1	; case 15
  1023  00CE  1903               	skipnz
  1024  00CF  288F               	goto	l941
  1025  00D0  2892               	goto	l943
  1026  00D1                     l102:	
  1027                           ;ADC.c: 83:         case 0:
  1028                           
  1029                           
  1030                           ;ADC.c: 84:             ADCON1bits.ADFM = 0;
  1031  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1032  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1033  00D3  139F               	bcf	31,7	;volatile
  1034                           
  1035                           ;ADC.c: 85:             break;
  1036  00D4  28FC               	goto	l955
  1037  00D5                     l104:	
  1038                           ;ADC.c: 86:         case 1:
  1039                           
  1040                           
  1041                           ;ADC.c: 87:             ADCON1bits.ADFM = 1;
  1042  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1043  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1044  00D7  179F               	bsf	31,7	;volatile
  1045                           
  1046                           ;ADC.c: 88:             break;
  1047  00D8  28FC               	goto	l955
  1048  00D9                     l105:	
  1049                           ;ADC.c: 89:         default:
  1050                           
  1051                           
  1052                           ;ADC.c: 90:             ADCON1bits.ADFM = 0;
  1053  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1054  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1055  00DB  139F               	bcf	31,7	;volatile
  1056                           
  1057                           ;ADC.c: 91:             break;
  1058  00DC  28FC               	goto	l955
  1059  00DD                     l951:
  1060  00DD  0874               	movf	ADC_init@Justified,w
  1061  00DE  00F6               	movwf	??_ADC_init
  1062  00DF  01F7               	clrf	??_ADC_init+1
  1063                           
  1064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1065                           ; Switch size 1, requested type "simple"
  1066                           ; Number of cases is 1, Range of values is 0 to 0
  1067                           ; switch strategies available:
  1068                           ; Name         Instructions Cycles
  1069                           ; simple_byte            4     3 (average)
  1070                           ; direct_byte           11     8 (fixed)
  1071                           ; jumptable            260     6 (fixed)
  1072                           ;	Chosen strategy is simple_byte
  1073  00E0  0877               	movf	??_ADC_init+1,w
  1074  00E1  3A00               	xorlw	0	; case 0
  1075  00E2  1903               	skipnz
  1076  00E3  28E5               	goto	l1169
  1077  00E4  28D9               	goto	l105
  1078  00E5                     l1169:
  1079                           
  1080                           ; Switch size 1, requested type "simple"
  1081                           ; Number of cases is 2, Range of values is 0 to 1
  1082                           ; switch strategies available:
  1083                           ; Name         Instructions Cycles
  1084                           ; simple_byte            7     4 (average)
  1085                           ; direct_byte           14     8 (fixed)
  1086                           ; jumptable            260     6 (fixed)
  1087                           ;	Chosen strategy is simple_byte
  1088  00E5  0876               	movf	??_ADC_init,w
  1089  00E6  3A00               	xorlw	0	; case 0
  1090  00E7  1903               	skipnz
  1091  00E8  28D1               	goto	l102
  1092  00E9  3A01               	xorlw	1	; case 1
  1093  00EA  1903               	skipnz
  1094  00EB  28D5               	goto	l104
  1095  00EC  28D9               	goto	l105
  1096  00ED                     l107:	
  1097                           ;ADC.c: 95:         case 1:
  1098                           
  1099                           
  1100                           ;ADC.c: 96:             ADCON1bits.VCFG1 = 0;
  1101  00ED  129F               	bcf	31,5	;volatile
  1102                           
  1103                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1104  00EE  121F               	bcf	31,4	;volatile
  1105                           
  1106                           ;ADC.c: 98:             break;
  1107  00EF  2912               	goto	l108
  1108  00F0                     l109:	
  1109                           ;ADC.c: 99:         case 2:
  1110                           
  1111                           
  1112                           ;ADC.c: 100:             ADCON1bits.VCFG1 = 0;
  1113  00F0  129F               	bcf	31,5	;volatile
  1114                           
  1115                           ;ADC.c: 101:             ADCON1bits.VCFG0 = 1;
  1116  00F1  161F               	bsf	31,4	;volatile
  1117                           
  1118                           ;ADC.c: 102:             break;
  1119  00F2  2912               	goto	l108
  1120  00F3                     l110:	
  1121                           ;ADC.c: 103:         case 3:
  1122                           
  1123                           
  1124                           ;ADC.c: 104:             ADCON1bits.VCFG1 = 1;
  1125  00F3  169F               	bsf	31,5	;volatile
  1126                           
  1127                           ;ADC.c: 105:             ADCON1bits.VCFG0 = 0;
  1128  00F4  121F               	bcf	31,4	;volatile
  1129                           
  1130                           ;ADC.c: 106:             break;
  1131  00F5  2912               	goto	l108
  1132  00F6                     l111:	
  1133                           ;ADC.c: 107:         case 4:
  1134                           
  1135                           
  1136                           ;ADC.c: 108:             ADCON1bits.VCFG1 = 1;
  1137  00F6  169F               	bsf	31,5	;volatile
  1138                           
  1139                           ;ADC.c: 109:             ADCON1bits.VCFG0 = 1;
  1140  00F7  161F               	bsf	31,4	;volatile
  1141                           
  1142                           ;ADC.c: 110:             break;
  1143  00F8  2912               	goto	l108
  1144  00F9                     l112:	
  1145                           ;ADC.c: 111:         default:
  1146                           
  1147                           
  1148                           ;ADC.c: 112:             ADCON1bits.VCFG1 = 0;
  1149  00F9  129F               	bcf	31,5	;volatile
  1150                           
  1151                           ;ADC.c: 113:             ADCON1bits.VCFG0 = 0;
  1152  00FA  121F               	bcf	31,4	;volatile
  1153                           
  1154                           ;ADC.c: 114:             break;
  1155  00FB  2912               	goto	l108
  1156  00FC                     l955:
  1157  00FC  0875               	movf	ADC_init@Vref,w
  1158  00FD  00F6               	movwf	??_ADC_init
  1159  00FE  01F7               	clrf	??_ADC_init+1
  1160                           
  1161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1162                           ; Switch size 1, requested type "simple"
  1163                           ; Number of cases is 1, Range of values is 0 to 0
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte            4     3 (average)
  1167                           ; direct_byte           11     8 (fixed)
  1168                           ; jumptable            260     6 (fixed)
  1169                           ;	Chosen strategy is simple_byte
  1170  00FF  0877               	movf	??_ADC_init+1,w
  1171  0100  3A00               	xorlw	0	; case 0
  1172  0101  1903               	skipnz
  1173  0102  2904               	goto	l1171
  1174  0103  28F9               	goto	l112
  1175  0104                     l1171:
  1176                           
  1177                           ; Switch size 1, requested type "simple"
  1178                           ; Number of cases is 4, Range of values is 1 to 4
  1179                           ; switch strategies available:
  1180                           ; Name         Instructions Cycles
  1181                           ; simple_byte           13     7 (average)
  1182                           ; direct_byte           23    11 (fixed)
  1183                           ; jumptable            263     9 (fixed)
  1184                           ;	Chosen strategy is simple_byte
  1185  0104  0876               	movf	??_ADC_init,w
  1186  0105  3A01               	xorlw	1	; case 1
  1187  0106  1903               	skipnz
  1188  0107  28ED               	goto	l107
  1189  0108  3A03               	xorlw	3	; case 2
  1190  0109  1903               	skipnz
  1191  010A  28F0               	goto	l109
  1192  010B  3A01               	xorlw	1	; case 3
  1193  010C  1903               	skipnz
  1194  010D  28F3               	goto	l110
  1195  010E  3A07               	xorlw	7	; case 4
  1196  010F  1903               	skipnz
  1197  0110  28F6               	goto	l111
  1198  0111  28F9               	goto	l112
  1199  0112                     l108:
  1200                           
  1201                           ;ADC.c: 117:     PIR1bits.ADIF = 0;
  1202  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1203  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1204  0114  130C               	bcf	12,6	;volatile
  1205                           
  1206                           ;ADC.c: 118:     PIE1bits.ADIE = 1;
  1207  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1208  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1209  0117  170C               	bsf	12,6	;volatile
  1210                           
  1211                           ;ADC.c: 119:     ADCON0bits.ADON = 1;
  1212  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1214  011A  141F               	bsf	31,0	;volatile
  1215  011B                     l113:
  1216  011B  0008               	return
  1217  011C                     __end_of_ADC_init:
  1218                           
  1219                           	psect	text3
  1220  0172                     __ptext3:	
  1221 ;; *************** function _isr *****************
  1222 ;; Defined at:
  1223 ;;		line 109 in file "mains3.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0
  1239 ;;      Temps:          3       0       0       0       0
  1240 ;;      Totals:         3       0       0       0       0
  1241 ;;Total ram usage:        3 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		Interrupt level 1
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _isr
  1252  0172                     _isr:
  1253  0172                     i1l817:
  1254                           
  1255                           ;mains3.c: 110:     if(PIR1bits.ADIF == 1){
  1256  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0174  1F0C               	btfss	12,6	;volatile
  1259  0175  2977               	goto	u2_21
  1260  0176  2978               	goto	u2_20
  1261  0177                     u2_21:
  1262  0177  297F               	goto	i1l64
  1263  0178                     u2_20:
  1264  0178                     i1l819:
  1265                           
  1266                           ;mains3.c: 111:         ADC_analogvalue = ADRESH;
  1267  0178  081E               	movf	30,w	;volatile
  1268  0179  00F0               	movwf	??_isr
  1269  017A  0870               	movf	??_isr,w
  1270  017B  00F9               	movwf	_ADC_analogvalue
  1271  017C                     i1l821:
  1272                           
  1273                           ;mains3.c: 112:         ADC_cflag = 1;
  1274  017C  01FA               	clrf	_ADC_cflag
  1275  017D  0AFA               	incf	_ADC_cflag,f
  1276  017E                     i1l823:
  1277                           
  1278                           ;mains3.c: 113:         PIR1bits.ADIF = 0;
  1279  017E  130C               	bcf	12,6	;volatile
  1280  017F                     i1l64:
  1281  017F  0872               	movf	??_isr+2,w
  1282  0180  008A               	movwf	10
  1283  0181  0E71               	swapf	??_isr+1,w
  1284  0182  0083               	movwf	3
  1285  0183  0EFE               	swapf	btemp,f
  1286  0184  0E7E               	swapf	btemp,w
  1287  0185  0009               	retfie
  1288  0186                     __end_of_isr:
  1289  007E                     btemp	set	126	;btemp
  1290  007E                     wtemp0	set	126
  1291                           
  1292                           	psect	intentry
  1293  0004                     __pintentry:	
  1294                           ;incstack = 0
  1295                           ; Regs used in _isr: [wreg]
  1296                           
  1297  0004                     interrupt_function:
  1298  007E                     saved_w	set	btemp
  1299  0004  00FE               	movwf	btemp
  1300  0005  0E03               	swapf	3,w
  1301  0006  00F1               	movwf	??_isr+1
  1302  0007  080A               	movf	10,w
  1303  0008  00F2               	movwf	??_isr+2
  1304  0009  120A  118A  2972   	ljmp	_isr
  1305                           
  1306                           	psect	config
  1307                           
  1308                           ;Config register CONFIG1 @ 0x2007
  1309                           ;	Oscillator Selection bits
  1310                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1311                           ;	Watchdog Timer Enable bit
  1312                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1313                           ;	Power-up Timer Enable bit
  1314                           ;	PWRTE = OFF, PWRT disabled
  1315                           ;	RE3/MCLR pin function select bit
  1316                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1317                           ;	Code Protection bit
  1318                           ;	CP = OFF, Program memory code protection is disabled
  1319                           ;	Data Code Protection bit
  1320                           ;	CPD = OFF, Data memory code protection is disabled
  1321                           ;	Brown Out Reset Selection bits
  1322                           ;	BOREN = ON, BOR enabled
  1323                           ;	Internal External Switchover bit
  1324                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1325                           ;	Fail-Safe Clock Monitor Enabled bit
  1326                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1327                           ;	Low Voltage Programming Enable bit
  1328                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1329                           ;	In-Circuit Debugger Mode bit
  1330                           ;	DEBUG = 0x1, unprogrammed default
  1331  2007                     	org	8199
  1332  2007  23F4               	dw	9204
  1333                           
  1334                           ;Config register CONFIG2 @ 0x2008
  1335                           ;	Brown-out Reset Selection bit
  1336                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1337                           ;	Flash Program Memory Self Write Enable bits
  1338                           ;	WRT = OFF, Write protection off
  1339  2008                     	org	8200
  1340  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     316
                                              0 BANK0      1     1      0
                           _ADC_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 21:38:33 2021

                     l80 0026                       l81 002B                       l58 0171  
                     l76 0017                       l78 001C                       l79 0021  
                     u40 013B                       u41 013A                       u57 013F  
                    l110 00F3                      l102 00D1                      l111 00F6  
                    l112 00F9                      l104 00D5                      l113 011B  
                    l105 00D9                      l107 00ED                      l108 0112  
                    l109 00F0                      l711 0157                      l721 0165  
                    l713 015F                      l705 014B                      l731 016E  
                    l723 0166                      l715 0162                      l707 014F  
                    l725 0167                      l717 0163                      l709 0150  
                    l911 0046                      l727 0168                      l719 0164  
                    l921 005D                      l913 0049                      l905 0016  
                    l729 016B                      l931 0076                      l923 0062  
                    l915 004E                      l941 008F                      l933 007B  
                    l925 0067                      l917 0053                      l909 0030  
                    l943 0092                      l935 0080                      l927 006C  
                    l919 0058                      l951 00DD                      l937 0085  
                    l929 0071                      l955 00FC                      l939 008A  
                    l947 0097                      _isr 0172                     l1071 0121  
                   l1081 0143                     l1073 0130                     l1171 0104  
                   l1083 0144                     l1075 0132                     l1165 0038  
                   l1077 0136                     l1069 011C                     l1167 009F  
                   l1079 013B                     l1169 00E5                     ?_isr 0070  
                   i1l64 017F                     _TMR0 0001                     u2_20 0178  
                   u2_21 0177                     _main 011C        ADC_init@Justified 0074  
                   btemp 007E                     start 000C         __end_of_ADC_init 011C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l821 017C                    i1l823 017E                    i1l817 0172  
                  i1l819 0178                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _setup 014B                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 014B                   ??_main 0020                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189          ADC_init@ADCSbit 0078  
                 saved_w 007E                ?_ADC_init 0073          ADC_init@Channel 0073  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 0172  
             ??_ADC_init 0076                  ??_setup 0073               __pmaintext 011C  
             __pintentry 0004                _ADC_cflag 007A                _ANSELbits 0188  
                __ptext1 014B                  __ptext2 0015                  __ptext3 0172  
           __size_of_isr 0014     end_of_initialization 0011          _ADC_analogvalue 0079  
              _TRISAbits 0085                _TRISBbits 0086        __size_of_ADC_init 0107  
           ADC_init@Vref 0075      start_initialization 000F              __end_of_isr 0186  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
               _ADC_init 0015           __size_of_setup 0027        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F            __size_of_main 002F  
             _INTCONbits 000B                 intlevel1 0000  
