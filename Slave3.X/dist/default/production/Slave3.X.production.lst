

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:48:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  001E                     _ADRESH	set	30
   286  000C                     _PIR1bits	set	12
   287  0008                     _PORTD	set	8
   288  0007                     _PORTC	set	7
   289  0001                     _TMR0	set	1
   290  000B                     _INTCONbits	set	11
   291  001F                     _ADCON0bits	set	31
   292  0042                     _RD2	set	66
   293  0041                     _RD1	set	65
   294  0040                     _RD0	set	64
   295  009F                     _ADCON1bits	set	159
   296  008C                     _PIE1bits	set	140
   297  0086                     _TRISB	set	134
   298  0088                     _TRISD	set	136
   299  0087                     _TRISC	set	135
   300  0085                     _TRISAbits	set	133
   301  0085                     _TRISA	set	133
   302  0188                     _ANSELbits	set	392
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   314  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0011                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  0011                     __end_of__initialization:
   319  0011  0183               	clrf	3
   320  0012  120A  118A  291C   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMMON
   323  0079                     __pbssCOMMON:
   324  0079                     _ADC_analogvalue:
   325  0079                     	ds	1
   326  007A                     _ADC_cflag:
   327  007A                     	ds	1
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_setup:
   332  0070                     ?_thermometer:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_isr:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0070                     	ds	3
   347  0073                     ??_setup:
   348  0073                     ?_ADC_init:	
   349                           ; 1 bytes @ 0x3
   350                           
   351  0073                     ??_thermometer:	
   352                           ; 1 bytes @ 0x3
   353                           
   354  0073                     ADC_init@Channel:	
   355                           ; 1 bytes @ 0x3
   356                           
   357                           
   358                           ; 1 bytes @ 0x3
   359  0073                     	ds	1
   360  0074                     ADC_init@Justified:
   361                           
   362                           ; 1 bytes @ 0x4
   363  0074                     	ds	1
   364  0075                     ADC_init@Vref:
   365                           
   366                           ; 1 bytes @ 0x5
   367  0075                     	ds	1
   368  0076                     ??_ADC_init:
   369                           
   370                           ; 1 bytes @ 0x6
   371  0076                     	ds	2
   372  0078                     ADC_init@ADCSbit:
   373                           
   374                           ; 1 bytes @ 0x8
   375  0078                     	ds	1
   376                           
   377                           	psect	cstackBANK0
   378  0020                     __pcstackBANK0:
   379  0020                     ??_main:
   380                           
   381                           ; 1 bytes @ 0x0
   382  0020                     	ds	1
   383                           
   384                           	psect	maintext
   385  011C                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 59 in file "mains3.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          0       1       0       0       0
   408 ;;      Totals:         0       1       0       0       0
   409 ;;Total ram usage:        1 bytes
   410 ;; Hardware stack levels required when called:    2
   411 ;; This function calls:
   412 ;;		_ADC_init
   413 ;;		_setup
   414 ;;		_thermometer
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _main
   422  011C                     _main:
   423  011C                     l1083:	
   424                           ;incstack = 0
   425                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   426                           
   427                           
   428                           ;mains3.c: 60:     setup();
   429  011C  120A  118A  2175  120A  118A  	fcall	_setup
   430  0121                     l1085:
   431                           
   432                           ;mains3.c: 61:     ADC_init(1, 0, 0, 4);
   433  0121  01F3               	clrf	ADC_init@Channel
   434  0122  01F4               	clrf	ADC_init@Justified
   435  0123  3004               	movlw	4
   436  0124  1283               	bcf	3,5	;RP0=0, select bank0
   437  0125  1303               	bcf	3,6	;RP1=0, select bank0
   438  0126  00A0               	movwf	??_main
   439  0127  0820               	movf	??_main,w
   440  0128  00F5               	movwf	ADC_init@Vref
   441  0129  3001               	movlw	1
   442  012A  120A  118A  2015  120A  118A  	fcall	_ADC_init
   443  012F                     l1087:
   444                           
   445                           ;mains3.c: 63:     ADC_cflag = 1;
   446  012F  01FA               	clrf	_ADC_cflag
   447  0130  0AFA               	incf	_ADC_cflag,f
   448  0131                     l1089:
   449                           
   450                           ;mains3.c: 66:         if (ADC_cflag == 1) {
   451  0131  037A               	decf	_ADC_cflag,w
   452  0132  1D03               	btfss	3,2
   453  0133  2935               	goto	u81
   454  0134  2936               	goto	u80
   455  0135                     u81:
   456  0135  2942               	goto	l1097
   457  0136                     u80:
   458  0136                     l1091:
   459                           
   460                           ;mains3.c: 67:             _delay((unsigned long)((500)*((8000000)/4000000.0)));
   461  0136  30C7               	movlw	199
   462  0137  1283               	bcf	3,5	;RP0=0, select bank0
   463  0138  1303               	bcf	3,6	;RP1=0, select bank0
   464  0139  00A0               	movwf	??_main
   465  013A                     u97:
   466  013A  293B               	nop2
   467  013B  0BA0               	decfsz	??_main,f
   468  013C  293A               	goto	u97
   469  013D  293E               	nop2
   470  013E                     l1093:
   471                           
   472                           ;mains3.c: 68:             ADC_cflag = 0;
   473  013E  01FA               	clrf	_ADC_cflag
   474  013F                     l1095:
   475                           
   476                           ;mains3.c: 69:             ADCON0bits.GO = 1;
   477  013F  1283               	bcf	3,5	;RP0=0, select bank0
   478  0140  1303               	bcf	3,6	;RP1=0, select bank0
   479  0141  149F               	bsf	31,1	;volatile
   480  0142                     l1097:
   481                           
   482                           ;mains3.c: 71:         thermometer();
   483  0142  120A  118A  214B  120A  118A  	fcall	_thermometer
   484  0147  2931               	goto	l1089
   485  0148  120A  118A  280C   	ljmp	start
   486  014B                     __end_of_main:
   487                           
   488                           	psect	text1
   489  014B                     __ptext1:	
   490 ;; *************** function _thermometer *****************
   491 ;; Defined at:
   492 ;;		line 106 in file "mains3.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels used:    1
   512 ;; Hardware stack levels required when called:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _thermometer
   522  014B                     _thermometer:
   523  014B                     l801:	
   524                           ;incstack = 0
   525                           ; Regs used in _thermometer: [wreg]
   526                           
   527                           
   528                           ;mains3.c: 107:     if (ADC_analogvalue < 99){
   529  014B  3063               	movlw	99
   530  014C  0279               	subwf	_ADC_analogvalue,w
   531  014D  1803               	skipnc
   532  014E  2950               	goto	u11
   533  014F  2951               	goto	u10
   534  0150                     u11:
   535  0150  2957               	goto	l805
   536  0151                     u10:
   537  0151                     l803:
   538                           
   539                           ;mains3.c: 108:         RD0 = 0;
   540  0151  1283               	bcf	3,5	;RP0=0, select bank0
   541  0152  1303               	bcf	3,6	;RP1=0, select bank0
   542  0153  1008               	bcf	8,0	;volatile
   543                           
   544                           ;mains3.c: 109:         RD1 = 0;
   545  0154  1088               	bcf	8,1	;volatile
   546                           
   547                           ;mains3.c: 110:         RD2 = 1;
   548  0155  1508               	bsf	8,2	;volatile
   549                           
   550                           ;mains3.c: 111:         }
   551  0156  2974               	goto	l70
   552  0157                     l805:
   553  0157  3071               	movlw	113
   554  0158  0279               	subwf	_ADC_analogvalue,w
   555  0159  1803               	skipnc
   556  015A  295C               	goto	u21
   557  015B  295D               	goto	u20
   558  015C                     u21:
   559  015C  2969               	goto	l811
   560  015D                     u20:
   561  015D                     l807:
   562  015D  3064               	movlw	100
   563  015E  0279               	subwf	_ADC_analogvalue,w
   564  015F  1C03               	skipc
   565  0160  2962               	goto	u31
   566  0161  2963               	goto	u30
   567  0162                     u31:
   568  0162  2969               	goto	l811
   569  0163                     u30:
   570  0163                     l809:
   571                           
   572                           ;mains3.c: 113:         RD0 = 0;
   573  0163  1283               	bcf	3,5	;RP0=0, select bank0
   574  0164  1303               	bcf	3,6	;RP1=0, select bank0
   575  0165  1008               	bcf	8,0	;volatile
   576                           
   577                           ;mains3.c: 114:         RD1 = 1;
   578  0166  1488               	bsf	8,1	;volatile
   579                           
   580                           ;mains3.c: 115:         RD2 = 0;
   581  0167  1108               	bcf	8,2	;volatile
   582                           
   583                           ;mains3.c: 116:         }
   584  0168  2974               	goto	l70
   585  0169                     l811:
   586  0169  3072               	movlw	114
   587  016A  0279               	subwf	_ADC_analogvalue,w
   588  016B  1C03               	skipc
   589  016C  296E               	goto	u41
   590  016D  296F               	goto	u40
   591  016E                     u41:
   592  016E  2974               	goto	l70
   593  016F                     u40:
   594  016F                     l813:
   595                           
   596                           ;mains3.c: 118:         RD0 = 1;
   597  016F  1283               	bcf	3,5	;RP0=0, select bank0
   598  0170  1303               	bcf	3,6	;RP1=0, select bank0
   599  0171  1408               	bsf	8,0	;volatile
   600                           
   601                           ;mains3.c: 119:         RD1 = 0;
   602  0172  1088               	bcf	8,1	;volatile
   603                           
   604                           ;mains3.c: 120:         RD2 = 0;
   605  0173  1108               	bcf	8,2	;volatile
   606  0174                     l70:
   607  0174  0008               	return
   608  0175                     __end_of_thermometer:
   609                           
   610                           	psect	text2
   611  0175                     __ptext2:	
   612 ;; *************** function _setup *****************
   613 ;; Defined at:
   614 ;;		line 79 in file "mains3.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		status,2
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; Hardware stack levels required when called:    1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _setup
   644  0175                     _setup:
   645  0175                     l717:	
   646                           ;incstack = 0
   647                           ; Regs used in _setup: [status,2]
   648                           
   649                           
   650                           ;mains3.c: 81:     ANSEL = 0;
   651  0175  1683               	bsf	3,5	;RP0=1, select bank3
   652  0176  1703               	bsf	3,6	;RP1=1, select bank3
   653  0177  0188               	clrf	8	;volatile
   654                           
   655                           ;mains3.c: 82:     ANSELH = 0;
   656  0178  0189               	clrf	9	;volatile
   657  0179                     l719:
   658                           
   659                           ;mains3.c: 83:     ANSELbits.ANS0 = 1;
   660  0179  1408               	bsf	8,0	;volatile
   661  017A                     l721:
   662                           
   663                           ;mains3.c: 85:     INTCONbits.GIE = 1;
   664  017A  178B               	bsf	11,7	;volatile
   665                           
   666                           ;mains3.c: 86:     TMR0 = 0;
   667  017B  1283               	bcf	3,5	;RP0=0, select bank0
   668  017C  1303               	bcf	3,6	;RP1=0, select bank0
   669  017D  0181               	clrf	1	;volatile
   670                           
   671                           ;mains3.c: 87:     TRISA = 0;
   672  017E  1683               	bsf	3,5	;RP0=1, select bank1
   673  017F  1303               	bcf	3,6	;RP1=0, select bank1
   674  0180  0185               	clrf	5	;volatile
   675  0181                     l723:
   676                           
   677                           ;mains3.c: 88:     TRISAbits.TRISA0 = 1;
   678  0181  1405               	bsf	5,0	;volatile
   679                           
   680                           ;mains3.c: 89:     TRISC = 0;
   681  0182  0187               	clrf	7	;volatile
   682                           
   683                           ;mains3.c: 90:     TRISD = 0;
   684  0183  0188               	clrf	8	;volatile
   685                           
   686                           ;mains3.c: 91:     TRISB = 0;
   687  0184  0186               	clrf	6	;volatile
   688                           
   689                           ;mains3.c: 92:     PORTC = 0;
   690  0185  1283               	bcf	3,5	;RP0=0, select bank0
   691  0186  1303               	bcf	3,6	;RP1=0, select bank0
   692  0187  0187               	clrf	7	;volatile
   693                           
   694                           ;mains3.c: 93:     PORTD = 0;
   695  0188  0188               	clrf	8	;volatile
   696  0189                     l725:
   697                           
   698                           ;mains3.c: 94:     INTCONbits.PEIE = 1;
   699  0189  170B               	bsf	11,6	;volatile
   700  018A                     l727:
   701                           
   702                           ;mains3.c: 95:     PIR1bits.ADIF = 0;
   703  018A  130C               	bcf	12,6	;volatile
   704  018B                     l729:
   705                           
   706                           ;mains3.c: 96:     PIE1bits.ADIE = 1;
   707  018B  1683               	bsf	3,5	;RP0=1, select bank1
   708  018C  1303               	bcf	3,6	;RP1=0, select bank1
   709  018D  170C               	bsf	12,6	;volatile
   710  018E                     l731:
   711                           
   712                           ;mains3.c: 97:     ADCON0bits.ADON = 1;
   713  018E  1283               	bcf	3,5	;RP0=0, select bank0
   714  018F  1303               	bcf	3,6	;RP1=0, select bank0
   715  0190  141F               	bsf	31,0	;volatile
   716  0191                     l62:
   717  0191  0008               	return
   718  0192                     __end_of_setup:
   719                           
   720                           	psect	text3
   721  0015                     __ptext3:	
   722 ;; *************** function _ADC_init *****************
   723 ;; Defined at:
   724 ;;		line 3 in file "ADC.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  ADCSbit         1    wreg     unsigned char 
   727 ;;  Channel         1    3[COMMON] unsigned char 
   728 ;;  Justified       1    4[COMMON] unsigned char 
   729 ;;  Vref            1    5[COMMON] unsigned char 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  ADCSbit         1    8[COMMON] unsigned char 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         3       0       0       0       0
   742 ;;      Locals:         1       0       0       0       0
   743 ;;      Temps:          2       0       0       0       0
   744 ;;      Totals:         6       0       0       0       0
   745 ;;Total ram usage:        6 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    1
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _ADC_init
   757  0015                     _ADC_init:
   758                           
   759                           ;incstack = 0
   760                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
   761                           ;ADC_init@ADCSbit stored from wreg
   762  0015  00F8               	movwf	ADC_init@ADCSbit
   763  0016                     l919:
   764                           
   765                           ;ADC.c: 5:     switch (ADCSbit){
   766  0016  2830               	goto	l923
   767  0017                     l88:	
   768                           ;ADC.c: 6:         case 0:
   769                           
   770                           
   771                           ;ADC.c: 7:             ADCON0bits.ADCS1 = 0;
   772  0017  1283               	bcf	3,5	;RP0=0, select bank0
   773  0018  1303               	bcf	3,6	;RP1=0, select bank0
   774  0019  139F               	bcf	31,7	;volatile
   775                           
   776                           ;ADC.c: 8:             ADCON0bits.ADCS0 = 0;
   777  001A  131F               	bcf	31,6	;volatile
   778                           
   779                           ;ADC.c: 9:             break;
   780  001B  2897               	goto	l961
   781  001C                     l90:	
   782                           ;ADC.c: 10:         case 1:
   783                           
   784                           
   785                           ;ADC.c: 11:             ADCON0bits.ADCS1 = 0;
   786  001C  1283               	bcf	3,5	;RP0=0, select bank0
   787  001D  1303               	bcf	3,6	;RP1=0, select bank0
   788  001E  139F               	bcf	31,7	;volatile
   789                           
   790                           ;ADC.c: 12:             ADCON0bits.ADCS0 = 1;
   791  001F  171F               	bsf	31,6	;volatile
   792                           
   793                           ;ADC.c: 13:             break;
   794  0020  2897               	goto	l961
   795  0021                     l91:	
   796                           ;ADC.c: 14:         case 2:
   797                           
   798                           
   799                           ;ADC.c: 15:             ADCON0bits.ADCS1 = 1;
   800  0021  1283               	bcf	3,5	;RP0=0, select bank0
   801  0022  1303               	bcf	3,6	;RP1=0, select bank0
   802  0023  179F               	bsf	31,7	;volatile
   803                           
   804                           ;ADC.c: 16:             ADCON0bits.ADCS0 = 0;
   805  0024  131F               	bcf	31,6	;volatile
   806                           
   807                           ;ADC.c: 17:             break;
   808  0025  2897               	goto	l961
   809  0026                     l92:	
   810                           ;ADC.c: 18:         case 3:
   811                           
   812                           
   813                           ;ADC.c: 19:             ADCON0bits.ADCS1 = 1;
   814  0026  1283               	bcf	3,5	;RP0=0, select bank0
   815  0027  1303               	bcf	3,6	;RP1=0, select bank0
   816  0028  179F               	bsf	31,7	;volatile
   817                           
   818                           ;ADC.c: 20:             ADCON0bits.ADCS0 = 1;
   819  0029  171F               	bsf	31,6	;volatile
   820                           
   821                           ;ADC.c: 21:             break;
   822  002A  2897               	goto	l961
   823  002B                     l93:	
   824                           ;ADC.c: 22:         default:
   825                           
   826                           
   827                           ;ADC.c: 23:             ADCON0bits.ADCS1 = 0;
   828  002B  1283               	bcf	3,5	;RP0=0, select bank0
   829  002C  1303               	bcf	3,6	;RP1=0, select bank0
   830  002D  139F               	bcf	31,7	;volatile
   831                           
   832                           ;ADC.c: 24:             ADCON0bits.ADCS0 = 1;
   833  002E  171F               	bsf	31,6	;volatile
   834                           
   835                           ;ADC.c: 25:             break;
   836  002F  2897               	goto	l961
   837  0030                     l923:
   838  0030  0878               	movf	ADC_init@ADCSbit,w
   839  0031  00F6               	movwf	??_ADC_init
   840  0032  01F7               	clrf	??_ADC_init+1
   841                           
   842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   843                           ; Switch size 1, requested type "simple"
   844                           ; Number of cases is 1, Range of values is 0 to 0
   845                           ; switch strategies available:
   846                           ; Name         Instructions Cycles
   847                           ; simple_byte            4     3 (average)
   848                           ; direct_byte           11     8 (fixed)
   849                           ; jumptable            260     6 (fixed)
   850                           ;	Chosen strategy is simple_byte
   851  0033  0877               	movf	??_ADC_init+1,w
   852  0034  3A00               	xorlw	0	; case 0
   853  0035  1903               	skipnz
   854  0036  2838               	goto	l1179
   855  0037  282B               	goto	l93
   856  0038                     l1179:
   857                           
   858                           ; Switch size 1, requested type "simple"
   859                           ; Number of cases is 4, Range of values is 0 to 3
   860                           ; switch strategies available:
   861                           ; Name         Instructions Cycles
   862                           ; simple_byte           13     7 (average)
   863                           ; direct_byte           20     8 (fixed)
   864                           ; jumptable            260     6 (fixed)
   865                           ;	Chosen strategy is simple_byte
   866  0038  0876               	movf	??_ADC_init,w
   867  0039  3A00               	xorlw	0	; case 0
   868  003A  1903               	skipnz
   869  003B  2817               	goto	l88
   870  003C  3A01               	xorlw	1	; case 1
   871  003D  1903               	skipnz
   872  003E  281C               	goto	l90
   873  003F  3A03               	xorlw	3	; case 2
   874  0040  1903               	skipnz
   875  0041  2821               	goto	l91
   876  0042  3A01               	xorlw	1	; case 3
   877  0043  1903               	skipnz
   878  0044  2826               	goto	l92
   879  0045  282B               	goto	l93
   880  0046                     l925:
   881                           
   882                           ;ADC.c: 30:             ADCON0bits.CHS = 0b0000;
   883  0046  30C3               	movlw	-61
   884  0047  059F               	andwf	31,f	;volatile
   885                           
   886                           ;ADC.c: 31:             break;
   887  0048  28DD               	goto	l965
   888  0049                     l927:
   889                           
   890                           ;ADC.c: 33:             ADCON0bits.CHS = 0b0001;
   891  0049  081F               	movf	31,w	;volatile
   892  004A  39C3               	andlw	-61
   893  004B  3804               	iorlw	4
   894  004C  009F               	movwf	31	;volatile
   895                           
   896                           ;ADC.c: 34:             break;
   897  004D  28DD               	goto	l965
   898  004E                     l929:
   899                           
   900                           ;ADC.c: 36:             ADCON0bits.CHS = 0b0010;
   901  004E  081F               	movf	31,w	;volatile
   902  004F  39C3               	andlw	-61
   903  0050  3808               	iorlw	8
   904  0051  009F               	movwf	31	;volatile
   905                           
   906                           ;ADC.c: 37:             break;
   907  0052  28DD               	goto	l965
   908  0053                     l931:
   909                           
   910                           ;ADC.c: 39:             ADCON0bits.CHS = 0b0011;
   911  0053  081F               	movf	31,w	;volatile
   912  0054  39C3               	andlw	-61
   913  0055  380C               	iorlw	12
   914  0056  009F               	movwf	31	;volatile
   915                           
   916                           ;ADC.c: 40:             break;
   917  0057  28DD               	goto	l965
   918  0058                     l933:
   919                           
   920                           ;ADC.c: 42:             ADCON0bits.CHS = 0b0100;
   921  0058  081F               	movf	31,w	;volatile
   922  0059  39C3               	andlw	-61
   923  005A  3810               	iorlw	16
   924  005B  009F               	movwf	31	;volatile
   925                           
   926                           ;ADC.c: 43:             break;
   927  005C  28DD               	goto	l965
   928  005D                     l935:
   929                           
   930                           ;ADC.c: 45:             ADCON0bits.CHS = 0b0101;
   931  005D  081F               	movf	31,w	;volatile
   932  005E  39C3               	andlw	-61
   933  005F  3814               	iorlw	20
   934  0060  009F               	movwf	31	;volatile
   935                           
   936                           ;ADC.c: 46:             break;
   937  0061  28DD               	goto	l965
   938  0062                     l937:
   939                           
   940                           ;ADC.c: 48:             ADCON0bits.CHS = 0b0110;
   941  0062  081F               	movf	31,w	;volatile
   942  0063  39C3               	andlw	-61
   943  0064  3818               	iorlw	24
   944  0065  009F               	movwf	31	;volatile
   945                           
   946                           ;ADC.c: 49:             break;
   947  0066  28DD               	goto	l965
   948  0067                     l939:
   949                           
   950                           ;ADC.c: 51:             ADCON0bits.CHS = 0b0111;
   951  0067  081F               	movf	31,w	;volatile
   952  0068  39C3               	andlw	-61
   953  0069  381C               	iorlw	28
   954  006A  009F               	movwf	31	;volatile
   955                           
   956                           ;ADC.c: 52:             break;
   957  006B  28DD               	goto	l965
   958  006C                     l941:
   959                           
   960                           ;ADC.c: 54:             ADCON0bits.CHS = 0b1000;
   961  006C  081F               	movf	31,w	;volatile
   962  006D  39C3               	andlw	-61
   963  006E  3820               	iorlw	32
   964  006F  009F               	movwf	31	;volatile
   965                           
   966                           ;ADC.c: 55:             break;
   967  0070  28DD               	goto	l965
   968  0071                     l943:
   969                           
   970                           ;ADC.c: 57:             ADCON0bits.CHS = 0b1001;
   971  0071  081F               	movf	31,w	;volatile
   972  0072  39C3               	andlw	-61
   973  0073  3824               	iorlw	36
   974  0074  009F               	movwf	31	;volatile
   975                           
   976                           ;ADC.c: 58:             break;
   977  0075  28DD               	goto	l965
   978  0076                     l945:
   979                           
   980                           ;ADC.c: 60:             ADCON0bits.CHS = 0b1010;
   981  0076  081F               	movf	31,w	;volatile
   982  0077  39C3               	andlw	-61
   983  0078  3828               	iorlw	40
   984  0079  009F               	movwf	31	;volatile
   985                           
   986                           ;ADC.c: 61:             break;
   987  007A  28DD               	goto	l965
   988  007B                     l947:
   989                           
   990                           ;ADC.c: 63:             ADCON0bits.CHS = 0b1011;
   991  007B  081F               	movf	31,w	;volatile
   992  007C  39C3               	andlw	-61
   993  007D  382C               	iorlw	44
   994  007E  009F               	movwf	31	;volatile
   995                           
   996                           ;ADC.c: 64:             break;
   997  007F  28DD               	goto	l965
   998  0080                     l949:
   999                           
  1000                           ;ADC.c: 66:             ADCON0bits.CHS = 0b1100;
  1001  0080  081F               	movf	31,w	;volatile
  1002  0081  39C3               	andlw	-61
  1003  0082  3830               	iorlw	48
  1004  0083  009F               	movwf	31	;volatile
  1005                           
  1006                           ;ADC.c: 67:             break;
  1007  0084  28DD               	goto	l965
  1008  0085                     l951:
  1009                           
  1010                           ;ADC.c: 69:             ADCON0bits.CHS = 0b1101;
  1011  0085  081F               	movf	31,w	;volatile
  1012  0086  39C3               	andlw	-61
  1013  0087  3834               	iorlw	52
  1014  0088  009F               	movwf	31	;volatile
  1015                           
  1016                           ;ADC.c: 70:             break;
  1017  0089  28DD               	goto	l965
  1018  008A                     l953:
  1019                           
  1020                           ;ADC.c: 72:             ADCON0bits.CHS = 0b1110;
  1021  008A  081F               	movf	31,w	;volatile
  1022  008B  39C3               	andlw	-61
  1023  008C  3838               	iorlw	56
  1024  008D  009F               	movwf	31	;volatile
  1025                           
  1026                           ;ADC.c: 73:             break;
  1027  008E  28DD               	goto	l965
  1028  008F                     l955:
  1029                           
  1030                           ;ADC.c: 75:             ADCON0bits.CHS = 0b1111;
  1031  008F  303C               	movlw	60
  1032  0090  049F               	iorwf	31,f	;volatile
  1033                           
  1034                           ;ADC.c: 76:             break;
  1035  0091  28DD               	goto	l965
  1036  0092                     l957:
  1037                           
  1038                           ;ADC.c: 78:             ADCON0bits.CHS = 0b0010;
  1039  0092  081F               	movf	31,w	;volatile
  1040  0093  39C3               	andlw	-61
  1041  0094  3808               	iorlw	8
  1042  0095  009F               	movwf	31	;volatile
  1043                           
  1044                           ;ADC.c: 79:             break;
  1045  0096  28DD               	goto	l965
  1046  0097                     l961:
  1047  0097  0873               	movf	ADC_init@Channel,w
  1048  0098  00F6               	movwf	??_ADC_init
  1049  0099  01F7               	clrf	??_ADC_init+1
  1050                           
  1051                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1052                           ; Switch size 1, requested type "simple"
  1053                           ; Number of cases is 1, Range of values is 0 to 0
  1054                           ; switch strategies available:
  1055                           ; Name         Instructions Cycles
  1056                           ; simple_byte            4     3 (average)
  1057                           ; direct_byte           11     8 (fixed)
  1058                           ; jumptable            260     6 (fixed)
  1059                           ;	Chosen strategy is simple_byte
  1060  009A  0877               	movf	??_ADC_init+1,w
  1061  009B  3A00               	xorlw	0	; case 0
  1062  009C  1903               	skipnz
  1063  009D  289F               	goto	l1181
  1064  009E  2892               	goto	l957
  1065  009F                     l1181:
  1066                           
  1067                           ; Switch size 1, requested type "simple"
  1068                           ; Number of cases is 16, Range of values is 0 to 15
  1069                           ; switch strategies available:
  1070                           ; Name         Instructions Cycles
  1071                           ; simple_byte           49    25 (average)
  1072                           ; direct_byte           56     8 (fixed)
  1073                           ; jumptable            260     6 (fixed)
  1074                           ;	Chosen strategy is simple_byte
  1075  009F  0876               	movf	??_ADC_init,w
  1076  00A0  3A00               	xorlw	0	; case 0
  1077  00A1  1903               	skipnz
  1078  00A2  2846               	goto	l925
  1079  00A3  3A01               	xorlw	1	; case 1
  1080  00A4  1903               	skipnz
  1081  00A5  2849               	goto	l927
  1082  00A6  3A03               	xorlw	3	; case 2
  1083  00A7  1903               	skipnz
  1084  00A8  284E               	goto	l929
  1085  00A9  3A01               	xorlw	1	; case 3
  1086  00AA  1903               	skipnz
  1087  00AB  2853               	goto	l931
  1088  00AC  3A07               	xorlw	7	; case 4
  1089  00AD  1903               	skipnz
  1090  00AE  2858               	goto	l933
  1091  00AF  3A01               	xorlw	1	; case 5
  1092  00B0  1903               	skipnz
  1093  00B1  285D               	goto	l935
  1094  00B2  3A03               	xorlw	3	; case 6
  1095  00B3  1903               	skipnz
  1096  00B4  2862               	goto	l937
  1097  00B5  3A01               	xorlw	1	; case 7
  1098  00B6  1903               	skipnz
  1099  00B7  2867               	goto	l939
  1100  00B8  3A0F               	xorlw	15	; case 8
  1101  00B9  1903               	skipnz
  1102  00BA  286C               	goto	l941
  1103  00BB  3A01               	xorlw	1	; case 9
  1104  00BC  1903               	skipnz
  1105  00BD  2871               	goto	l943
  1106  00BE  3A03               	xorlw	3	; case 10
  1107  00BF  1903               	skipnz
  1108  00C0  2876               	goto	l945
  1109  00C1  3A01               	xorlw	1	; case 11
  1110  00C2  1903               	skipnz
  1111  00C3  287B               	goto	l947
  1112  00C4  3A07               	xorlw	7	; case 12
  1113  00C5  1903               	skipnz
  1114  00C6  2880               	goto	l949
  1115  00C7  3A01               	xorlw	1	; case 13
  1116  00C8  1903               	skipnz
  1117  00C9  2885               	goto	l951
  1118  00CA  3A03               	xorlw	3	; case 14
  1119  00CB  1903               	skipnz
  1120  00CC  288A               	goto	l953
  1121  00CD  3A01               	xorlw	1	; case 15
  1122  00CE  1903               	skipnz
  1123  00CF  288F               	goto	l955
  1124  00D0  2892               	goto	l957
  1125  00D1                     l114:	
  1126                           ;ADC.c: 83:         case 0:
  1127                           
  1128                           
  1129                           ;ADC.c: 84:             ADCON1bits.ADFM = 0;
  1130  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1131  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1132  00D3  139F               	bcf	31,7	;volatile
  1133                           
  1134                           ;ADC.c: 85:             break;
  1135  00D4  28FC               	goto	l969
  1136  00D5                     l116:	
  1137                           ;ADC.c: 86:         case 1:
  1138                           
  1139                           
  1140                           ;ADC.c: 87:             ADCON1bits.ADFM = 1;
  1141  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1142  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1143  00D7  179F               	bsf	31,7	;volatile
  1144                           
  1145                           ;ADC.c: 88:             break;
  1146  00D8  28FC               	goto	l969
  1147  00D9                     l117:	
  1148                           ;ADC.c: 89:         default:
  1149                           
  1150                           
  1151                           ;ADC.c: 90:             ADCON1bits.ADFM = 0;
  1152  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1153  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1154  00DB  139F               	bcf	31,7	;volatile
  1155                           
  1156                           ;ADC.c: 91:             break;
  1157  00DC  28FC               	goto	l969
  1158  00DD                     l965:
  1159  00DD  0874               	movf	ADC_init@Justified,w
  1160  00DE  00F6               	movwf	??_ADC_init
  1161  00DF  01F7               	clrf	??_ADC_init+1
  1162                           
  1163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1164                           ; Switch size 1, requested type "simple"
  1165                           ; Number of cases is 1, Range of values is 0 to 0
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte            4     3 (average)
  1169                           ; direct_byte           11     8 (fixed)
  1170                           ; jumptable            260     6 (fixed)
  1171                           ;	Chosen strategy is simple_byte
  1172  00E0  0877               	movf	??_ADC_init+1,w
  1173  00E1  3A00               	xorlw	0	; case 0
  1174  00E2  1903               	skipnz
  1175  00E3  28E5               	goto	l1183
  1176  00E4  28D9               	goto	l117
  1177  00E5                     l1183:
  1178                           
  1179                           ; Switch size 1, requested type "simple"
  1180                           ; Number of cases is 2, Range of values is 0 to 1
  1181                           ; switch strategies available:
  1182                           ; Name         Instructions Cycles
  1183                           ; simple_byte            7     4 (average)
  1184                           ; direct_byte           14     8 (fixed)
  1185                           ; jumptable            260     6 (fixed)
  1186                           ;	Chosen strategy is simple_byte
  1187  00E5  0876               	movf	??_ADC_init,w
  1188  00E6  3A00               	xorlw	0	; case 0
  1189  00E7  1903               	skipnz
  1190  00E8  28D1               	goto	l114
  1191  00E9  3A01               	xorlw	1	; case 1
  1192  00EA  1903               	skipnz
  1193  00EB  28D5               	goto	l116
  1194  00EC  28D9               	goto	l117
  1195  00ED                     l119:	
  1196                           ;ADC.c: 95:         case 1:
  1197                           
  1198                           
  1199                           ;ADC.c: 96:             ADCON1bits.VCFG1 = 0;
  1200  00ED  129F               	bcf	31,5	;volatile
  1201                           
  1202                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1203  00EE  121F               	bcf	31,4	;volatile
  1204                           
  1205                           ;ADC.c: 98:             break;
  1206  00EF  2912               	goto	l120
  1207  00F0                     l121:	
  1208                           ;ADC.c: 99:         case 2:
  1209                           
  1210                           
  1211                           ;ADC.c: 100:             ADCON1bits.VCFG1 = 0;
  1212  00F0  129F               	bcf	31,5	;volatile
  1213                           
  1214                           ;ADC.c: 101:             ADCON1bits.VCFG0 = 1;
  1215  00F1  161F               	bsf	31,4	;volatile
  1216                           
  1217                           ;ADC.c: 102:             break;
  1218  00F2  2912               	goto	l120
  1219  00F3                     l122:	
  1220                           ;ADC.c: 103:         case 3:
  1221                           
  1222                           
  1223                           ;ADC.c: 104:             ADCON1bits.VCFG1 = 1;
  1224  00F3  169F               	bsf	31,5	;volatile
  1225                           
  1226                           ;ADC.c: 105:             ADCON1bits.VCFG0 = 0;
  1227  00F4  121F               	bcf	31,4	;volatile
  1228                           
  1229                           ;ADC.c: 106:             break;
  1230  00F5  2912               	goto	l120
  1231  00F6                     l123:	
  1232                           ;ADC.c: 107:         case 4:
  1233                           
  1234                           
  1235                           ;ADC.c: 108:             ADCON1bits.VCFG1 = 1;
  1236  00F6  169F               	bsf	31,5	;volatile
  1237                           
  1238                           ;ADC.c: 109:             ADCON1bits.VCFG0 = 1;
  1239  00F7  161F               	bsf	31,4	;volatile
  1240                           
  1241                           ;ADC.c: 110:             break;
  1242  00F8  2912               	goto	l120
  1243  00F9                     l124:	
  1244                           ;ADC.c: 111:         default:
  1245                           
  1246                           
  1247                           ;ADC.c: 112:             ADCON1bits.VCFG1 = 0;
  1248  00F9  129F               	bcf	31,5	;volatile
  1249                           
  1250                           ;ADC.c: 113:             ADCON1bits.VCFG0 = 0;
  1251  00FA  121F               	bcf	31,4	;volatile
  1252                           
  1253                           ;ADC.c: 114:             break;
  1254  00FB  2912               	goto	l120
  1255  00FC                     l969:
  1256  00FC  0875               	movf	ADC_init@Vref,w
  1257  00FD  00F6               	movwf	??_ADC_init
  1258  00FE  01F7               	clrf	??_ADC_init+1
  1259                           
  1260                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1261                           ; Switch size 1, requested type "simple"
  1262                           ; Number of cases is 1, Range of values is 0 to 0
  1263                           ; switch strategies available:
  1264                           ; Name         Instructions Cycles
  1265                           ; simple_byte            4     3 (average)
  1266                           ; direct_byte           11     8 (fixed)
  1267                           ; jumptable            260     6 (fixed)
  1268                           ;	Chosen strategy is simple_byte
  1269  00FF  0877               	movf	??_ADC_init+1,w
  1270  0100  3A00               	xorlw	0	; case 0
  1271  0101  1903               	skipnz
  1272  0102  2904               	goto	l1185
  1273  0103  28F9               	goto	l124
  1274  0104                     l1185:
  1275                           
  1276                           ; Switch size 1, requested type "simple"
  1277                           ; Number of cases is 4, Range of values is 1 to 4
  1278                           ; switch strategies available:
  1279                           ; Name         Instructions Cycles
  1280                           ; simple_byte           13     7 (average)
  1281                           ; direct_byte           23    11 (fixed)
  1282                           ; jumptable            263     9 (fixed)
  1283                           ;	Chosen strategy is simple_byte
  1284  0104  0876               	movf	??_ADC_init,w
  1285  0105  3A01               	xorlw	1	; case 1
  1286  0106  1903               	skipnz
  1287  0107  28ED               	goto	l119
  1288  0108  3A03               	xorlw	3	; case 2
  1289  0109  1903               	skipnz
  1290  010A  28F0               	goto	l121
  1291  010B  3A01               	xorlw	1	; case 3
  1292  010C  1903               	skipnz
  1293  010D  28F3               	goto	l122
  1294  010E  3A07               	xorlw	7	; case 4
  1295  010F  1903               	skipnz
  1296  0110  28F6               	goto	l123
  1297  0111  28F9               	goto	l124
  1298  0112                     l120:
  1299                           
  1300                           ;ADC.c: 117:     PIR1bits.ADIF = 0;
  1301  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0114  130C               	bcf	12,6	;volatile
  1304                           
  1305                           ;ADC.c: 118:     PIE1bits.ADIE = 1;
  1306  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1307  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1308  0117  170C               	bsf	12,6	;volatile
  1309                           
  1310                           ;ADC.c: 119:     ADCON0bits.ADON = 1;
  1311  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1313  011A  141F               	bsf	31,0	;volatile
  1314  011B                     l125:
  1315  011B  0008               	return
  1316  011C                     __end_of_ADC_init:
  1317                           
  1318                           	psect	text4
  1319  0192                     __ptext4:	
  1320 ;; *************** function _isr *****************
  1321 ;; Defined at:
  1322 ;;		line 128 in file "mains3.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0
  1338 ;;      Temps:          3       0       0       0       0
  1339 ;;      Totals:         3       0       0       0       0
  1340 ;;Total ram usage:        3 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		Interrupt level 1
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _isr
  1351  0192                     _isr:
  1352  0192                     i1l831:
  1353                           
  1354                           ;mains3.c: 129:     if(PIR1bits.ADIF == 1){
  1355  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0194  1F0C               	btfss	12,6	;volatile
  1358  0195  2997               	goto	u6_21
  1359  0196  2998               	goto	u6_20
  1360  0197                     u6_21:
  1361  0197  299F               	goto	i1l76
  1362  0198                     u6_20:
  1363  0198                     i1l833:
  1364                           
  1365                           ;mains3.c: 130:         ADC_analogvalue = ADRESH;
  1366  0198  081E               	movf	30,w	;volatile
  1367  0199  00F0               	movwf	??_isr
  1368  019A  0870               	movf	??_isr,w
  1369  019B  00F9               	movwf	_ADC_analogvalue
  1370  019C                     i1l835:
  1371                           
  1372                           ;mains3.c: 131:         ADC_cflag = 1;
  1373  019C  01FA               	clrf	_ADC_cflag
  1374  019D  0AFA               	incf	_ADC_cflag,f
  1375  019E                     i1l837:
  1376                           
  1377                           ;mains3.c: 132:         PIR1bits.ADIF = 0;
  1378  019E  130C               	bcf	12,6	;volatile
  1379  019F                     i1l76:
  1380  019F  0872               	movf	??_isr+2,w
  1381  01A0  008A               	movwf	10
  1382  01A1  0E71               	swapf	??_isr+1,w
  1383  01A2  0083               	movwf	3
  1384  01A3  0EFE               	swapf	btemp,f
  1385  01A4  0E7E               	swapf	btemp,w
  1386  01A5  0009               	retfie
  1387  01A6                     __end_of_isr:
  1388  007E                     btemp	set	126	;btemp
  1389  007E                     wtemp0	set	126
  1390                           
  1391                           	psect	intentry
  1392  0004                     __pintentry:	
  1393                           ;incstack = 0
  1394                           ; Regs used in _isr: [wreg]
  1395                           
  1396  0004                     interrupt_function:
  1397  007E                     saved_w	set	btemp
  1398  0004  00FE               	movwf	btemp
  1399  0005  0E03               	swapf	3,w
  1400  0006  00F1               	movwf	??_isr+1
  1401  0007  080A               	movf	10,w
  1402  0008  00F2               	movwf	??_isr+2
  1403  0009  120A  118A  2992   	ljmp	_isr
  1404                           
  1405                           	psect	config
  1406                           
  1407                           ;Config register CONFIG1 @ 0x2007
  1408                           ;	Oscillator Selection bits
  1409                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1410                           ;	Watchdog Timer Enable bit
  1411                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1412                           ;	Power-up Timer Enable bit
  1413                           ;	PWRTE = OFF, PWRT disabled
  1414                           ;	RE3/MCLR pin function select bit
  1415                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1416                           ;	Code Protection bit
  1417                           ;	CP = OFF, Program memory code protection is disabled
  1418                           ;	Data Code Protection bit
  1419                           ;	CPD = OFF, Data memory code protection is disabled
  1420                           ;	Brown Out Reset Selection bits
  1421                           ;	BOREN = ON, BOR enabled
  1422                           ;	Internal External Switchover bit
  1423                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1424                           ;	Fail-Safe Clock Monitor Enabled bit
  1425                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1426                           ;	Low Voltage Programming Enable bit
  1427                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1428                           ;	In-Circuit Debugger Mode bit
  1429                           ;	DEBUG = 0x1, unprogrammed default
  1430  2007                     	org	8199
  1431  2007  23F4               	dw	9204
  1432                           
  1433                           ;Config register CONFIG2 @ 0x2008
  1434                           ;	Brown-out Reset Selection bit
  1435                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1436                           ;	Flash Program Memory Self Write Enable bits
  1437                           ;	WRT = OFF, Write protection off
  1438  2008                     	org	8200
  1439  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     316
                                              0 BANK0      1     1      0
                           _ADC_init
                              _setup
                        _thermometer
 ---------------------------------------------------------------------------------
 (1) _thermometer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _setup
   _thermometer

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:48:20 2021

                     l62 0191                       l70 0174                       l90 001C  
                     l91 0021                       l92 0026                       l93 002B  
                     l88 0017                       u10 0151                       u11 0150  
                     u20 015D                       u21 015C                       u30 0163  
                     u31 0162                       u40 016F                       u41 016E  
                     u80 0136                       u81 0135                       u97 013A  
                    l120 0112                      l121 00F0                      l122 00F3  
                    l114 00D1                      l123 00F6                      l124 00F9  
                    l116 00D5                      l125 011B                      l117 00D9  
                    l119 00ED                      l721 017A                      l801 014B  
                    l731 018E                      l723 0181                      l811 0169  
                    l803 0151                      l725 0189                      l717 0175  
                    l813 016F                      l805 0157                      l727 018A  
                    l719 0179                      l807 015D                      l729 018B  
                    l809 0163                      l931 0053                      l923 0030  
                    l941 006C                      l933 0058                      l925 0046  
                    l951 0085                      l943 0071                      l935 005D  
                    l927 0049                      l919 0016                      l953 008A  
                    l945 0076                      l937 0062                      l929 004E  
                    l961 0097                      l955 008F                      l947 007B  
                    l939 0067                      l957 0092                      l949 0080  
                    l965 00DD                      l969 00FC                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      _isr 0192  
                   l1091 0136                     l1083 011C                     l1181 009F  
                   l1093 013E                     l1085 0121                     l1183 00E5  
                   l1095 013F                     l1087 012F                     l1185 0104  
                   l1097 0142                     l1089 0131                     l1179 0038  
                   ?_isr 0070                     i1l76 019F                     _TMR0 0001  
                   u6_20 0198                     u6_21 0197                     _main 011C  
      ADC_init@Justified 0074                     btemp 007E                     start 000C  
       __end_of_ADC_init 011C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l831 0192                    i1l833 0198  
                  i1l835 019C                    i1l837 019E                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 0175  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 014B                   ??_main 0020  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
        ADC_init@ADCSbit 0078             ?_thermometer 0070                   saved_w 007E  
              ?_ADC_init 0073          ADC_init@Channel 0073  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 0192               ??_ADC_init 0076  
                ??_setup 0073               __pmaintext 011C               __pintentry 0004  
              _ADC_cflag 007A                _ANSELbits 0188                  __ptext1 014B  
                __ptext2 0175                  __ptext3 0015                  __ptext4 0192  
           __size_of_isr 0014     __size_of_thermometer 002A     end_of_initialization 0011  
        _ADC_analogvalue 0079                _TRISAbits 0085        __size_of_ADC_init 0107  
           ADC_init@Vref 0075      start_initialization 000F              __end_of_isr 01A6  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
               _ADC_init 0015           __size_of_setup 001D        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F            ??_thermometer 0073      __end_of_thermometer 0175  
          __size_of_main 002F               _INTCONbits 000B                 intlevel1 0000  
            _thermometer 014B  
