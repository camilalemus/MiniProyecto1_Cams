

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 19:59:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  001E                     _ADRESH	set	30
   369  000C                     _PIR1bits	set	12
   370  0008                     _PORTD	set	8
   371  000B                     _INTCONbits	set	11
   372  001F                     _ADCON0bits	set	31
   373  0007                     _PORTC	set	7
   374  0063                     _SSPIF	set	99
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  009F                     _ADCON1bits	set	159
   378  008C                     _PIE1bits	set	140
   379  0086                     _TRISB	set	134
   380  0088                     _TRISD	set	136
   381  0087                     _TRISCbits	set	135
   382  0087                     _TRISC	set	135
   383  0085                     _TRISAbits	set	133
   384  0085                     _TRISA	set	133
   385  043B                     _TRISC3	set	1083
   386  043D                     _TRISC5	set	1085
   387  0188                     _ANSELbits	set	392
   388  0189                     _ANSELH	set	393
   389  0188                     _ANSEL	set	392
   390                           
   391                           	psect	cinit
   392  000F                     start_initialization:	
   393                           ; #config settings
   394                           
   395  000F                     __initialization:
   396                           
   397                           ; Clear objects allocated to COMMON
   398  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   399  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   400  0011                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  0011                     __end_of__initialization:
   404  0011  0183               	clrf	3
   405  0012  120A  118A  2920   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMMON
   408  0078                     __pbssCOMMON:
   409  0078                     _ADC_analogvalue:
   410  0078                     	ds	1
   411  0079                     _ADC_cflag:
   412  0079                     	ds	1
   413                           
   414                           	psect	cstackCOMMON
   415  0070                     __pcstackCOMMON:
   416  0070                     ?_setup:
   417  0070                     ?_spiRead:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ??_spiRead:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_spiWrite:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ??_spiWrite:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_isr:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_spiReceiveWait:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ??_spiReceiveWait:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     spiWrite@dat:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 1 bytes @ 0x0
   446  0070                     	ds	1
   447  0071                     ??_isr:
   448                           
   449                           ; 1 bytes @ 0x1
   450  0071                     	ds	3
   451  0074                     ?_ADC_init:
   452  0074                     ?_spiInit:	
   453                           ; 1 bytes @ 0x4
   454                           
   455  0074                     ADC_init@Channel:	
   456                           ; 1 bytes @ 0x4
   457                           
   458  0074                     spiInit@sDataSample:	
   459                           ; 1 bytes @ 0x4
   460                           
   461                           
   462                           ; 1 bytes @ 0x4
   463  0074                     	ds	1
   464  0075                     ADC_init@Justified:
   465  0075                     spiInit@sClockIdle:	
   466                           ; 1 bytes @ 0x5
   467                           
   468                           
   469                           ; 1 bytes @ 0x5
   470  0075                     	ds	1
   471  0076                     ADC_init@Vref:
   472  0076                     spiInit@sTransmitEdge:	
   473                           ; 1 bytes @ 0x6
   474                           
   475                           
   476                           ; 1 bytes @ 0x6
   477  0076                     	ds	1
   478  0077                     ??_spiInit:
   479  0077                     ADC_init@ADCSbit:	
   480                           ; 1 bytes @ 0x7
   481                           
   482  0077                     spiInit@sType:	
   483                           ; 1 bytes @ 0x7
   484                           
   485                           
   486                           ; 1 bytes @ 0x7
   487  0077                     	ds	1
   488  0078                     ??_setup:
   489                           
   490                           	psect	cstackBANK0
   491  0020                     __pcstackBANK0:	
   492                           ; 1 bytes @ 0x8
   493                           
   494  0020                     ??_ADC_init:
   495                           
   496                           ; 1 bytes @ 0x0
   497  0020                     	ds	2
   498  0022                     ??_main:
   499                           
   500                           ; 1 bytes @ 0x2
   501  0022                     	ds	1
   502                           
   503                           	psect	maintext
   504  0120                     __pmaintext:	
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 55 in file "mains1.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       1       0       0       0
   527 ;;      Totals:         0       1       0       0       0
   528 ;;Total ram usage:        1 bytes
   529 ;; Hardware stack levels required when called:    5
   530 ;; This function calls:
   531 ;;		_ADC_init
   532 ;;		_setup
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _main
   540  0120                     _main:
   541  0120                     l1234:	
   542                           ;incstack = 0
   543                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   544                           
   545                           
   546                           ;mains1.c: 56:     setup();
   547  0120  120A  118A  2170  120A  118A  	fcall	_setup
   548  0125                     l1236:
   549                           
   550                           ;mains1.c: 57:     ADC_init(1, 0, 0, 1);
   551  0125  01F4               	clrf	ADC_init@Channel
   552  0126  01F5               	clrf	ADC_init@Justified
   553  0127  01F6               	clrf	ADC_init@Vref
   554  0128  0AF6               	incf	ADC_init@Vref,f
   555  0129  3001               	movlw	1
   556  012A  120A  118A  2015  120A  118A  	fcall	_ADC_init
   557  012F                     l1238:
   558                           
   559                           ;mains1.c: 59:     ADC_cflag = 1;
   560  012F  01F9               	clrf	_ADC_cflag
   561  0130  0AF9               	incf	_ADC_cflag,f
   562  0131                     l1240:
   563                           
   564                           ;mains1.c: 61:         PORTC = ADC_analogvalue;
   565  0131  0878               	movf	_ADC_analogvalue,w
   566  0132  1283               	bcf	3,5	;RP0=0, select bank0
   567  0133  1303               	bcf	3,6	;RP1=0, select bank0
   568  0134  0087               	movwf	7	;volatile
   569  0135                     l1242:
   570                           
   571                           ;mains1.c: 62:         if (ADC_cflag == 1) {
   572  0135  0379               	decf	_ADC_cflag,w
   573  0136  1D03               	btfss	3,2
   574  0137  2939               	goto	u81
   575  0138  293A               	goto	u80
   576  0139                     u81:
   577  0139  2931               	goto	l1240
   578  013A                     u80:
   579  013A                     l1244:
   580                           
   581                           ;mains1.c: 63:             _delay((unsigned long)((500)*((8000000)/4000000.0)));
   582  013A  30C7               	movlw	199
   583  013B  1283               	bcf	3,5	;RP0=0, select bank0
   584  013C  1303               	bcf	3,6	;RP1=0, select bank0
   585  013D  00A2               	movwf	??_main
   586  013E                     u97:
   587  013E  293F               	nop2
   588  013F  0BA2               	decfsz	??_main,f
   589  0140  293E               	goto	u97
   590  0141  2942               	nop2
   591  0142                     l1246:
   592                           
   593                           ;mains1.c: 64:             ADC_cflag = 0;
   594  0142  01F9               	clrf	_ADC_cflag
   595  0143                     l1248:
   596                           
   597                           ;mains1.c: 65:             ADCON0bits.GO = 1;
   598  0143  1283               	bcf	3,5	;RP0=0, select bank0
   599  0144  1303               	bcf	3,6	;RP1=0, select bank0
   600  0145  149F               	bsf	31,1	;volatile
   601  0146  2931               	goto	l1240
   602  0147  120A  118A  280C   	ljmp	start
   603  014A                     __end_of_main:
   604                           
   605                           	psect	text1
   606  0170                     __ptext1:	
   607 ;; *************** function _setup *****************
   608 ;; Defined at:
   609 ;;		line 74 in file "mains1.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         0       0       0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    4
   630 ;; This function calls:
   631 ;;		_spiInit
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           
   638                           ;psect for function _setup
   639  0170                     _setup:
   640  0170                     l980:	
   641                           ;incstack = 0
   642                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   643                           
   644                           
   645                           ;mains1.c: 76:     ANSEL = 0;
   646  0170  1683               	bsf	3,5	;RP0=1, select bank3
   647  0171  1703               	bsf	3,6	;RP1=1, select bank3
   648  0172  0188               	clrf	8	;volatile
   649                           
   650                           ;mains1.c: 77:     ANSELH = 0;
   651  0173  0189               	clrf	9	;volatile
   652  0174                     l982:
   653                           
   654                           ;mains1.c: 78:     ANSELbits.ANS0 = 1;
   655  0174  1408               	bsf	8,0	;volatile
   656  0175                     l984:
   657                           
   658                           ;mains1.c: 80:     INTCONbits.GIE = 1;
   659  0175  178B               	bsf	11,7	;volatile
   660                           
   661                           ;mains1.c: 81:     TRISA = 0;
   662  0176  1683               	bsf	3,5	;RP0=1, select bank1
   663  0177  1303               	bcf	3,6	;RP1=0, select bank1
   664  0178  0185               	clrf	5	;volatile
   665  0179                     l986:
   666                           
   667                           ;mains1.c: 82:     TRISAbits.TRISA0 = 1;
   668  0179  1405               	bsf	5,0	;volatile
   669  017A                     l988:
   670                           
   671                           ;mains1.c: 83:     TRISAbits.TRISA5 = 1;
   672  017A  1685               	bsf	5,5	;volatile
   673                           
   674                           ;mains1.c: 84:     TRISC = 0;
   675  017B  0187               	clrf	7	;volatile
   676  017C                     l990:
   677                           
   678                           ;mains1.c: 85:     TRISCbits.TRISC4 = 1;
   679  017C  1607               	bsf	7,4	;volatile
   680                           
   681                           ;mains1.c: 86:     TRISD = 0;
   682  017D  0188               	clrf	8	;volatile
   683                           
   684                           ;mains1.c: 87:     TRISB = 0;
   685  017E  0186               	clrf	6	;volatile
   686                           
   687                           ;mains1.c: 88:     PORTD = 0;
   688  017F  1283               	bcf	3,5	;RP0=0, select bank0
   689  0180  1303               	bcf	3,6	;RP1=0, select bank0
   690  0181  0188               	clrf	8	;volatile
   691  0182                     l992:
   692                           
   693                           ;mains1.c: 89:     INTCONbits.PEIE = 1;
   694  0182  170B               	bsf	11,6	;volatile
   695  0183                     l994:
   696                           
   697                           ;mains1.c: 92:     PIR1bits.ADIF = 0;
   698  0183  130C               	bcf	12,6	;volatile
   699  0184                     l996:
   700                           
   701                           ;mains1.c: 93:     PIE1bits.ADIE = 1;
   702  0184  1683               	bsf	3,5	;RP0=1, select bank1
   703  0185  1303               	bcf	3,6	;RP1=0, select bank1
   704  0186  170C               	bsf	12,6	;volatile
   705  0187                     l998:
   706                           
   707                           ;mains1.c: 94:     ADCON0bits.ADON = 1;
   708  0187  1283               	bcf	3,5	;RP0=0, select bank0
   709  0188  1303               	bcf	3,6	;RP1=0, select bank0
   710  0189  141F               	bsf	31,0	;volatile
   711  018A                     l1000:
   712                           
   713                           ;mains1.c: 96:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   714  018A  01F4               	clrf	spiInit@sDataSample
   715  018B  01F5               	clrf	spiInit@sClockIdle
   716  018C  01F6               	clrf	spiInit@sTransmitEdge
   717  018D  3024               	movlw	36
   718  018E  120A  118A  2194  120A  118A  	fcall	_spiInit
   719  0193                     l62:
   720  0193  0008               	return
   721  0194                     __end_of_setup:
   722                           
   723                           	psect	text2
   724  0194                     __ptext2:	
   725 ;; *************** function _spiInit *****************
   726 ;; Defined at:
   727 ;;		line 12 in file "SPI.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  sType           1    wreg     enum E1264
   730 ;;  sDataSample     1    4[COMMON] enum E1272
   731 ;;  sClockIdle      1    5[COMMON] enum E1276
   732 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  sType           1    7[COMMON] enum E1264
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         3       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         4       0       0       0       0
   748 ;;Total ram usage:        4 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    3
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_setup
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           
   759                           ;psect for function _spiInit
   760  0194                     _spiInit:
   761                           
   762                           ;incstack = 0
   763                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   764                           ;spiInit@sType stored from wreg
   765  0194  00F7               	movwf	spiInit@sType
   766  0195                     l970:
   767                           
   768                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   769  0195  1683               	bsf	3,5	;RP0=1, select bank1
   770  0196  1303               	bcf	3,6	;RP1=0, select bank1
   771  0197  1287               	bcf	7,5	;volatile
   772                           
   773                           ;SPI.c: 15:     if(sType & 0b00000100)
   774  0198  1D77               	btfss	spiInit@sType,2
   775  0199  299B               	goto	u61
   776  019A  299C               	goto	u60
   777  019B                     u61:
   778  019B  29A0               	goto	l976
   779  019C                     u60:
   780  019C                     l972:
   781                           
   782                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   783  019C  0876               	movf	spiInit@sTransmitEdge,w
   784  019D  0094               	movwf	20	;volatile
   785  019E                     l974:
   786                           
   787                           ;SPI.c: 18:         TRISC3 = 1;
   788  019E  1587               	bsf	7,3	;volatile
   789                           
   790                           ;SPI.c: 19:     }
   791  019F  29A4               	goto	l134
   792  01A0                     l976:
   793                           
   794                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   795  01A0  0874               	movf	spiInit@sDataSample,w
   796  01A1  0476               	iorwf	spiInit@sTransmitEdge,w
   797  01A2  0094               	movwf	20	;volatile
   798  01A3                     l978:
   799                           
   800                           ;SPI.c: 23:         TRISC3 = 0;
   801  01A3  1187               	bcf	7,3	;volatile
   802  01A4                     l134:	
   803                           ;SPI.c: 24:     }
   804                           
   805                           
   806                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   807  01A4  0877               	movf	spiInit@sType,w
   808  01A5  0475               	iorwf	spiInit@sClockIdle,w
   809  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   810  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   811  01A8  0094               	movwf	20	;volatile
   812  01A9                     l135:
   813  01A9  0008               	return
   814  01AA                     __end_of_spiInit:
   815                           
   816                           	psect	text3
   817  0015                     __ptext3:	
   818 ;; *************** function _ADC_init *****************
   819 ;; Defined at:
   820 ;;		line 3 in file "ADC.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  ADCSbit         1    wreg     unsigned char 
   823 ;;  Channel         1    4[COMMON] unsigned char 
   824 ;;  Justified       1    5[COMMON] unsigned char 
   825 ;;  Vref            1    6[COMMON] unsigned char 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  ADCSbit         1    7[COMMON] unsigned char 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         3       0       0       0       0
   838 ;;      Locals:         1       0       0       0       0
   839 ;;      Temps:          0       2       0       0       0
   840 ;;      Totals:         4       2       0       0       0
   841 ;;Total ram usage:        6 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; Hardware stack levels required when called:    3
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _ADC_init
   853  0015                     _ADC_init:
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
   857                           ;ADC_init@ADCSbit stored from wreg
   858  0015  00F7               	movwf	ADC_init@ADCSbit
   859  0016                     l1166:
   860                           
   861                           ;ADC.c: 5:     switch (ADCSbit){
   862  0016  2826               	goto	l1170
   863  0017                     l81:	
   864                           ;ADC.c: 6:         case 0:
   865                           
   866                           
   867                           ;ADC.c: 7:             ADCON0bits.ADCS1 = 0;
   868  0017  139F               	bcf	31,7	;volatile
   869                           
   870                           ;ADC.c: 8:             ADCON0bits.ADCS0 = 0;
   871  0018  131F               	bcf	31,6	;volatile
   872                           
   873                           ;ADC.c: 9:             break;
   874  0019  288F               	goto	l1208
   875  001A                     l83:	
   876                           ;ADC.c: 10:         case 1:
   877                           
   878                           
   879                           ;ADC.c: 11:             ADCON0bits.ADCS1 = 0;
   880  001A  139F               	bcf	31,7	;volatile
   881                           
   882                           ;ADC.c: 12:             ADCON0bits.ADCS0 = 1;
   883  001B  171F               	bsf	31,6	;volatile
   884                           
   885                           ;ADC.c: 13:             break;
   886  001C  288F               	goto	l1208
   887  001D                     l84:	
   888                           ;ADC.c: 14:         case 2:
   889                           
   890                           
   891                           ;ADC.c: 15:             ADCON0bits.ADCS1 = 1;
   892  001D  179F               	bsf	31,7	;volatile
   893                           
   894                           ;ADC.c: 16:             ADCON0bits.ADCS0 = 0;
   895  001E  131F               	bcf	31,6	;volatile
   896                           
   897                           ;ADC.c: 17:             break;
   898  001F  288F               	goto	l1208
   899  0020                     l85:	
   900                           ;ADC.c: 18:         case 3:
   901                           
   902                           
   903                           ;ADC.c: 19:             ADCON0bits.ADCS1 = 1;
   904  0020  179F               	bsf	31,7	;volatile
   905                           
   906                           ;ADC.c: 20:             ADCON0bits.ADCS0 = 1;
   907  0021  171F               	bsf	31,6	;volatile
   908                           
   909                           ;ADC.c: 21:             break;
   910  0022  288F               	goto	l1208
   911  0023                     l86:	
   912                           ;ADC.c: 22:         default:
   913                           
   914                           
   915                           ;ADC.c: 23:             ADCON0bits.ADCS1 = 0;
   916  0023  139F               	bcf	31,7	;volatile
   917                           
   918                           ;ADC.c: 24:             ADCON0bits.ADCS0 = 1;
   919  0024  171F               	bsf	31,6	;volatile
   920                           
   921                           ;ADC.c: 25:             break;
   922  0025  288F               	goto	l1208
   923  0026                     l1170:
   924  0026  0877               	movf	ADC_init@ADCSbit,w
   925  0027  1283               	bcf	3,5	;RP0=0, select bank0
   926  0028  1303               	bcf	3,6	;RP1=0, select bank0
   927  0029  00A0               	movwf	??_ADC_init
   928  002A  01A1               	clrf	??_ADC_init+1
   929                           
   930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   931                           ; Switch size 1, requested type "simple"
   932                           ; Number of cases is 1, Range of values is 0 to 0
   933                           ; switch strategies available:
   934                           ; Name         Instructions Cycles
   935                           ; simple_byte            4     3 (average)
   936                           ; direct_byte           11     8 (fixed)
   937                           ; jumptable            260     6 (fixed)
   938                           ;	Chosen strategy is simple_byte
   939  002B  0821               	movf	??_ADC_init+1,w
   940  002C  3A00               	xorlw	0	; case 0
   941  002D  1903               	skipnz
   942  002E  2830               	goto	l1330
   943  002F  2823               	goto	l86
   944  0030                     l1330:
   945                           
   946                           ; Switch size 1, requested type "simple"
   947                           ; Number of cases is 4, Range of values is 0 to 3
   948                           ; switch strategies available:
   949                           ; Name         Instructions Cycles
   950                           ; simple_byte           13     7 (average)
   951                           ; direct_byte           20     8 (fixed)
   952                           ; jumptable            260     6 (fixed)
   953                           ;	Chosen strategy is simple_byte
   954  0030  0820               	movf	??_ADC_init,w
   955  0031  3A00               	xorlw	0	; case 0
   956  0032  1903               	skipnz
   957  0033  2817               	goto	l81
   958  0034  3A01               	xorlw	1	; case 1
   959  0035  1903               	skipnz
   960  0036  281A               	goto	l83
   961  0037  3A03               	xorlw	3	; case 2
   962  0038  1903               	skipnz
   963  0039  281D               	goto	l84
   964  003A  3A01               	xorlw	1	; case 3
   965  003B  1903               	skipnz
   966  003C  2820               	goto	l85
   967  003D  2823               	goto	l86
   968  003E                     l1172:
   969                           
   970                           ;ADC.c: 30:             ADCON0bits.CHS = 0b0000;
   971  003E  30C3               	movlw	-61
   972  003F  059F               	andwf	31,f	;volatile
   973                           
   974                           ;ADC.c: 31:             break;
   975  0040  28D5               	goto	l1212
   976  0041                     l1174:
   977                           
   978                           ;ADC.c: 33:             ADCON0bits.CHS = 0b0001;
   979  0041  081F               	movf	31,w	;volatile
   980  0042  39C3               	andlw	-61
   981  0043  3804               	iorlw	4
   982  0044  009F               	movwf	31	;volatile
   983                           
   984                           ;ADC.c: 34:             break;
   985  0045  28D5               	goto	l1212
   986  0046                     l1176:
   987                           
   988                           ;ADC.c: 36:             ADCON0bits.CHS = 0b0010;
   989  0046  081F               	movf	31,w	;volatile
   990  0047  39C3               	andlw	-61
   991  0048  3808               	iorlw	8
   992  0049  009F               	movwf	31	;volatile
   993                           
   994                           ;ADC.c: 37:             break;
   995  004A  28D5               	goto	l1212
   996  004B                     l1178:
   997                           
   998                           ;ADC.c: 39:             ADCON0bits.CHS = 0b0011;
   999  004B  081F               	movf	31,w	;volatile
  1000  004C  39C3               	andlw	-61
  1001  004D  380C               	iorlw	12
  1002  004E  009F               	movwf	31	;volatile
  1003                           
  1004                           ;ADC.c: 40:             break;
  1005  004F  28D5               	goto	l1212
  1006  0050                     l1180:
  1007                           
  1008                           ;ADC.c: 42:             ADCON0bits.CHS = 0b0100;
  1009  0050  081F               	movf	31,w	;volatile
  1010  0051  39C3               	andlw	-61
  1011  0052  3810               	iorlw	16
  1012  0053  009F               	movwf	31	;volatile
  1013                           
  1014                           ;ADC.c: 43:             break;
  1015  0054  28D5               	goto	l1212
  1016  0055                     l1182:
  1017                           
  1018                           ;ADC.c: 45:             ADCON0bits.CHS = 0b0101;
  1019  0055  081F               	movf	31,w	;volatile
  1020  0056  39C3               	andlw	-61
  1021  0057  3814               	iorlw	20
  1022  0058  009F               	movwf	31	;volatile
  1023                           
  1024                           ;ADC.c: 46:             break;
  1025  0059  28D5               	goto	l1212
  1026  005A                     l1184:
  1027                           
  1028                           ;ADC.c: 48:             ADCON0bits.CHS = 0b0110;
  1029  005A  081F               	movf	31,w	;volatile
  1030  005B  39C3               	andlw	-61
  1031  005C  3818               	iorlw	24
  1032  005D  009F               	movwf	31	;volatile
  1033                           
  1034                           ;ADC.c: 49:             break;
  1035  005E  28D5               	goto	l1212
  1036  005F                     l1186:
  1037                           
  1038                           ;ADC.c: 51:             ADCON0bits.CHS = 0b0111;
  1039  005F  081F               	movf	31,w	;volatile
  1040  0060  39C3               	andlw	-61
  1041  0061  381C               	iorlw	28
  1042  0062  009F               	movwf	31	;volatile
  1043                           
  1044                           ;ADC.c: 52:             break;
  1045  0063  28D5               	goto	l1212
  1046  0064                     l1188:
  1047                           
  1048                           ;ADC.c: 54:             ADCON0bits.CHS = 0b1000;
  1049  0064  081F               	movf	31,w	;volatile
  1050  0065  39C3               	andlw	-61
  1051  0066  3820               	iorlw	32
  1052  0067  009F               	movwf	31	;volatile
  1053                           
  1054                           ;ADC.c: 55:             break;
  1055  0068  28D5               	goto	l1212
  1056  0069                     l1190:
  1057                           
  1058                           ;ADC.c: 57:             ADCON0bits.CHS = 0b1001;
  1059  0069  081F               	movf	31,w	;volatile
  1060  006A  39C3               	andlw	-61
  1061  006B  3824               	iorlw	36
  1062  006C  009F               	movwf	31	;volatile
  1063                           
  1064                           ;ADC.c: 58:             break;
  1065  006D  28D5               	goto	l1212
  1066  006E                     l1192:
  1067                           
  1068                           ;ADC.c: 60:             ADCON0bits.CHS = 0b1010;
  1069  006E  081F               	movf	31,w	;volatile
  1070  006F  39C3               	andlw	-61
  1071  0070  3828               	iorlw	40
  1072  0071  009F               	movwf	31	;volatile
  1073                           
  1074                           ;ADC.c: 61:             break;
  1075  0072  28D5               	goto	l1212
  1076  0073                     l1194:
  1077                           
  1078                           ;ADC.c: 63:             ADCON0bits.CHS = 0b1011;
  1079  0073  081F               	movf	31,w	;volatile
  1080  0074  39C3               	andlw	-61
  1081  0075  382C               	iorlw	44
  1082  0076  009F               	movwf	31	;volatile
  1083                           
  1084                           ;ADC.c: 64:             break;
  1085  0077  28D5               	goto	l1212
  1086  0078                     l1196:
  1087                           
  1088                           ;ADC.c: 66:             ADCON0bits.CHS = 0b1100;
  1089  0078  081F               	movf	31,w	;volatile
  1090  0079  39C3               	andlw	-61
  1091  007A  3830               	iorlw	48
  1092  007B  009F               	movwf	31	;volatile
  1093                           
  1094                           ;ADC.c: 67:             break;
  1095  007C  28D5               	goto	l1212
  1096  007D                     l1198:
  1097                           
  1098                           ;ADC.c: 69:             ADCON0bits.CHS = 0b1101;
  1099  007D  081F               	movf	31,w	;volatile
  1100  007E  39C3               	andlw	-61
  1101  007F  3834               	iorlw	52
  1102  0080  009F               	movwf	31	;volatile
  1103                           
  1104                           ;ADC.c: 70:             break;
  1105  0081  28D5               	goto	l1212
  1106  0082                     l1200:
  1107                           
  1108                           ;ADC.c: 72:             ADCON0bits.CHS = 0b1110;
  1109  0082  081F               	movf	31,w	;volatile
  1110  0083  39C3               	andlw	-61
  1111  0084  3838               	iorlw	56
  1112  0085  009F               	movwf	31	;volatile
  1113                           
  1114                           ;ADC.c: 73:             break;
  1115  0086  28D5               	goto	l1212
  1116  0087                     l1202:
  1117                           
  1118                           ;ADC.c: 75:             ADCON0bits.CHS = 0b1111;
  1119  0087  303C               	movlw	60
  1120  0088  049F               	iorwf	31,f	;volatile
  1121                           
  1122                           ;ADC.c: 76:             break;
  1123  0089  28D5               	goto	l1212
  1124  008A                     l1204:
  1125                           
  1126                           ;ADC.c: 78:             ADCON0bits.CHS = 0b0010;
  1127  008A  081F               	movf	31,w	;volatile
  1128  008B  39C3               	andlw	-61
  1129  008C  3808               	iorlw	8
  1130  008D  009F               	movwf	31	;volatile
  1131                           
  1132                           ;ADC.c: 79:             break;
  1133  008E  28D5               	goto	l1212
  1134  008F                     l1208:
  1135  008F  0874               	movf	ADC_init@Channel,w
  1136  0090  00A0               	movwf	??_ADC_init
  1137  0091  01A1               	clrf	??_ADC_init+1
  1138                           
  1139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1140                           ; Switch size 1, requested type "simple"
  1141                           ; Number of cases is 1, Range of values is 0 to 0
  1142                           ; switch strategies available:
  1143                           ; Name         Instructions Cycles
  1144                           ; simple_byte            4     3 (average)
  1145                           ; direct_byte           11     8 (fixed)
  1146                           ; jumptable            260     6 (fixed)
  1147                           ;	Chosen strategy is simple_byte
  1148  0092  0821               	movf	??_ADC_init+1,w
  1149  0093  3A00               	xorlw	0	; case 0
  1150  0094  1903               	skipnz
  1151  0095  2897               	goto	l1332
  1152  0096  288A               	goto	l1204
  1153  0097                     l1332:
  1154                           
  1155                           ; Switch size 1, requested type "simple"
  1156                           ; Number of cases is 16, Range of values is 0 to 15
  1157                           ; switch strategies available:
  1158                           ; Name         Instructions Cycles
  1159                           ; simple_byte           49    25 (average)
  1160                           ; direct_byte           56     8 (fixed)
  1161                           ; jumptable            260     6 (fixed)
  1162                           ;	Chosen strategy is simple_byte
  1163  0097  0820               	movf	??_ADC_init,w
  1164  0098  3A00               	xorlw	0	; case 0
  1165  0099  1903               	skipnz
  1166  009A  283E               	goto	l1172
  1167  009B  3A01               	xorlw	1	; case 1
  1168  009C  1903               	skipnz
  1169  009D  2841               	goto	l1174
  1170  009E  3A03               	xorlw	3	; case 2
  1171  009F  1903               	skipnz
  1172  00A0  2846               	goto	l1176
  1173  00A1  3A01               	xorlw	1	; case 3
  1174  00A2  1903               	skipnz
  1175  00A3  284B               	goto	l1178
  1176  00A4  3A07               	xorlw	7	; case 4
  1177  00A5  1903               	skipnz
  1178  00A6  2850               	goto	l1180
  1179  00A7  3A01               	xorlw	1	; case 5
  1180  00A8  1903               	skipnz
  1181  00A9  2855               	goto	l1182
  1182  00AA  3A03               	xorlw	3	; case 6
  1183  00AB  1903               	skipnz
  1184  00AC  285A               	goto	l1184
  1185  00AD  3A01               	xorlw	1	; case 7
  1186  00AE  1903               	skipnz
  1187  00AF  285F               	goto	l1186
  1188  00B0  3A0F               	xorlw	15	; case 8
  1189  00B1  1903               	skipnz
  1190  00B2  2864               	goto	l1188
  1191  00B3  3A01               	xorlw	1	; case 9
  1192  00B4  1903               	skipnz
  1193  00B5  2869               	goto	l1190
  1194  00B6  3A03               	xorlw	3	; case 10
  1195  00B7  1903               	skipnz
  1196  00B8  286E               	goto	l1192
  1197  00B9  3A01               	xorlw	1	; case 11
  1198  00BA  1903               	skipnz
  1199  00BB  2873               	goto	l1194
  1200  00BC  3A07               	xorlw	7	; case 12
  1201  00BD  1903               	skipnz
  1202  00BE  2878               	goto	l1196
  1203  00BF  3A01               	xorlw	1	; case 13
  1204  00C0  1903               	skipnz
  1205  00C1  287D               	goto	l1198
  1206  00C2  3A03               	xorlw	3	; case 14
  1207  00C3  1903               	skipnz
  1208  00C4  2882               	goto	l1200
  1209  00C5  3A01               	xorlw	1	; case 15
  1210  00C6  1903               	skipnz
  1211  00C7  2887               	goto	l1202
  1212  00C8  288A               	goto	l1204
  1213  00C9                     l107:	
  1214                           ;ADC.c: 83:         case 0:
  1215                           
  1216                           
  1217                           ;ADC.c: 84:             ADCON1bits.ADFM = 0;
  1218  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1219  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1220  00CB  139F               	bcf	31,7	;volatile
  1221                           
  1222                           ;ADC.c: 85:             break;
  1223  00CC  28FE               	goto	l1216
  1224  00CD                     l109:	
  1225                           ;ADC.c: 86:         case 1:
  1226                           
  1227                           
  1228                           ;ADC.c: 87:             ADCON1bits.ADFM = 1;
  1229  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1230  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1231  00CF  179F               	bsf	31,7	;volatile
  1232                           
  1233                           ;ADC.c: 88:             break;
  1234  00D0  28FE               	goto	l1216
  1235  00D1                     l110:	
  1236                           ;ADC.c: 89:         default:
  1237                           
  1238                           
  1239                           ;ADC.c: 90:             ADCON1bits.ADFM = 0;
  1240  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1241  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1242  00D3  139F               	bcf	31,7	;volatile
  1243                           
  1244                           ;ADC.c: 91:             break;
  1245  00D4  28FE               	goto	l1216
  1246  00D5                     l1212:
  1247  00D5  0875               	movf	ADC_init@Justified,w
  1248  00D6  00A0               	movwf	??_ADC_init
  1249  00D7  01A1               	clrf	??_ADC_init+1
  1250                           
  1251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1252                           ; Switch size 1, requested type "simple"
  1253                           ; Number of cases is 1, Range of values is 0 to 0
  1254                           ; switch strategies available:
  1255                           ; Name         Instructions Cycles
  1256                           ; simple_byte            4     3 (average)
  1257                           ; direct_byte           11     8 (fixed)
  1258                           ; jumptable            260     6 (fixed)
  1259                           ;	Chosen strategy is simple_byte
  1260  00D8  0821               	movf	??_ADC_init+1,w
  1261  00D9  3A00               	xorlw	0	; case 0
  1262  00DA  1903               	skipnz
  1263  00DB  28DD               	goto	l1334
  1264  00DC  28D1               	goto	l110
  1265  00DD                     l1334:
  1266                           
  1267                           ; Switch size 1, requested type "simple"
  1268                           ; Number of cases is 2, Range of values is 0 to 1
  1269                           ; switch strategies available:
  1270                           ; Name         Instructions Cycles
  1271                           ; simple_byte            7     4 (average)
  1272                           ; direct_byte           14     8 (fixed)
  1273                           ; jumptable            260     6 (fixed)
  1274                           ;	Chosen strategy is simple_byte
  1275  00DD  0820               	movf	??_ADC_init,w
  1276  00DE  3A00               	xorlw	0	; case 0
  1277  00DF  1903               	skipnz
  1278  00E0  28C9               	goto	l107
  1279  00E1  3A01               	xorlw	1	; case 1
  1280  00E2  1903               	skipnz
  1281  00E3  28CD               	goto	l109
  1282  00E4  28D1               	goto	l110
  1283  00E5                     l112:	
  1284                           ;ADC.c: 95:         case 1:
  1285                           
  1286                           
  1287                           ;ADC.c: 96:             ADCON1bits.VCFG1 = 0;
  1288  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1289  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1290  00E7  129F               	bcf	31,5	;volatile
  1291                           
  1292                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1293  00E8  121F               	bcf	31,4	;volatile
  1294                           
  1295                           ;ADC.c: 98:             break;
  1296  00E9  2916               	goto	l113
  1297  00EA                     l114:	
  1298                           ;ADC.c: 99:         case 2:
  1299                           
  1300                           
  1301                           ;ADC.c: 100:             ADCON1bits.VCFG1 = 0;
  1302  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1303  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1304  00EC  129F               	bcf	31,5	;volatile
  1305                           
  1306                           ;ADC.c: 101:             ADCON1bits.VCFG0 = 1;
  1307  00ED  161F               	bsf	31,4	;volatile
  1308                           
  1309                           ;ADC.c: 102:             break;
  1310  00EE  2916               	goto	l113
  1311  00EF                     l115:	
  1312                           ;ADC.c: 103:         case 3:
  1313                           
  1314                           
  1315                           ;ADC.c: 104:             ADCON1bits.VCFG1 = 1;
  1316  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1317  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1318  00F1  169F               	bsf	31,5	;volatile
  1319                           
  1320                           ;ADC.c: 105:             ADCON1bits.VCFG0 = 0;
  1321  00F2  121F               	bcf	31,4	;volatile
  1322                           
  1323                           ;ADC.c: 106:             break;
  1324  00F3  2916               	goto	l113
  1325  00F4                     l116:	
  1326                           ;ADC.c: 107:         case 4:
  1327                           
  1328                           
  1329                           ;ADC.c: 108:             ADCON1bits.VCFG1 = 1;
  1330  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1331  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  1332  00F6  169F               	bsf	31,5	;volatile
  1333                           
  1334                           ;ADC.c: 109:             ADCON1bits.VCFG0 = 1;
  1335  00F7  161F               	bsf	31,4	;volatile
  1336                           
  1337                           ;ADC.c: 110:             break;
  1338  00F8  2916               	goto	l113
  1339  00F9                     l117:	
  1340                           ;ADC.c: 111:         default:
  1341                           
  1342                           
  1343                           ;ADC.c: 112:             ADCON1bits.VCFG1 = 0;
  1344  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1345  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1346  00FB  129F               	bcf	31,5	;volatile
  1347                           
  1348                           ;ADC.c: 113:             ADCON1bits.VCFG0 = 0;
  1349  00FC  121F               	bcf	31,4	;volatile
  1350                           
  1351                           ;ADC.c: 114:             break;
  1352  00FD  2916               	goto	l113
  1353  00FE                     l1216:
  1354  00FE  0876               	movf	ADC_init@Vref,w
  1355  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0101  00A0               	movwf	??_ADC_init
  1358  0102  01A1               	clrf	??_ADC_init+1
  1359                           
  1360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1361                           ; Switch size 1, requested type "simple"
  1362                           ; Number of cases is 1, Range of values is 0 to 0
  1363                           ; switch strategies available:
  1364                           ; Name         Instructions Cycles
  1365                           ; simple_byte            4     3 (average)
  1366                           ; direct_byte           11     8 (fixed)
  1367                           ; jumptable            260     6 (fixed)
  1368                           ;	Chosen strategy is simple_byte
  1369  0103  0821               	movf	??_ADC_init+1,w
  1370  0104  3A00               	xorlw	0	; case 0
  1371  0105  1903               	skipnz
  1372  0106  2908               	goto	l1336
  1373  0107  28F9               	goto	l117
  1374  0108                     l1336:
  1375                           
  1376                           ; Switch size 1, requested type "simple"
  1377                           ; Number of cases is 4, Range of values is 1 to 4
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte           13     7 (average)
  1381                           ; direct_byte           23    11 (fixed)
  1382                           ; jumptable            263     9 (fixed)
  1383                           ;	Chosen strategy is simple_byte
  1384  0108  0820               	movf	??_ADC_init,w
  1385  0109  3A01               	xorlw	1	; case 1
  1386  010A  1903               	skipnz
  1387  010B  28E5               	goto	l112
  1388  010C  3A03               	xorlw	3	; case 2
  1389  010D  1903               	skipnz
  1390  010E  28EA               	goto	l114
  1391  010F  3A01               	xorlw	1	; case 3
  1392  0110  1903               	skipnz
  1393  0111  28EF               	goto	l115
  1394  0112  3A07               	xorlw	7	; case 4
  1395  0113  1903               	skipnz
  1396  0114  28F4               	goto	l116
  1397  0115  28F9               	goto	l117
  1398  0116                     l113:
  1399                           
  1400                           ;ADC.c: 117:     PIR1bits.ADIF = 0;
  1401  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0118  130C               	bcf	12,6	;volatile
  1404                           
  1405                           ;ADC.c: 118:     PIE1bits.ADIE = 1;
  1406  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1407  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1408  011B  170C               	bsf	12,6	;volatile
  1409                           
  1410                           ;ADC.c: 119:     ADCON0bits.ADON = 1;
  1411  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1412  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1413  011E  141F               	bsf	31,0	;volatile
  1414  011F                     l118:
  1415  011F  0008               	return
  1416  0120                     __end_of_ADC_init:
  1417                           
  1418                           	psect	text4
  1419  014A                     __ptext4:	
  1420 ;; *************** function _isr *****************
  1421 ;; Defined at:
  1422 ;;		line 107 in file "mains1.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0
  1438 ;;      Temps:          3       0       0       0       0
  1439 ;;      Totals:         3       0       0       0       0
  1440 ;;Total ram usage:        3 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    2
  1443 ;; This function calls:
  1444 ;;		_spiRead
  1445 ;;		_spiWrite
  1446 ;; This function is called by:
  1447 ;;		Interrupt level 1
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _isr
  1453  014A                     _isr:
  1454  014A                     i1l870:
  1455                           
  1456                           ;mains1.c: 108:     if (PIR1bits.ADIF == 1) {
  1457  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1458  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1459  014C  1F0C               	btfss	12,6	;volatile
  1460  014D  294F               	goto	u4_21
  1461  014E  2950               	goto	u4_20
  1462  014F                     u4_21:
  1463  014F  2957               	goto	i1l878
  1464  0150                     u4_20:
  1465  0150                     i1l872:
  1466                           
  1467                           ;mains1.c: 109:         ADC_analogvalue = ADRESH;
  1468  0150  081E               	movf	30,w	;volatile
  1469  0151  00F1               	movwf	??_isr
  1470  0152  0871               	movf	??_isr,w
  1471  0153  00F8               	movwf	_ADC_analogvalue
  1472  0154                     i1l874:
  1473                           
  1474                           ;mains1.c: 110:         ADC_cflag = 1;
  1475  0154  01F9               	clrf	_ADC_cflag
  1476  0155  0AF9               	incf	_ADC_cflag,f
  1477  0156                     i1l876:
  1478                           
  1479                           ;mains1.c: 111:         PIR1bits.ADIF = 0;
  1480  0156  130C               	bcf	12,6	;volatile
  1481  0157                     i1l878:
  1482                           
  1483                           ;mains1.c: 113:     if (SSPIF == 1) {
  1484  0157  1D8C               	btfss	12,3	;volatile
  1485  0158  295A               	goto	u5_21
  1486  0159  295B               	goto	u5_20
  1487  015A                     u5_21:
  1488  015A  2969               	goto	i1l69
  1489  015B                     u5_20:
  1490  015B                     i1l880:
  1491                           
  1492                           ;mains1.c: 114:         spiRead();
  1493  015B  120A  118A  21AA  120A  118A  	fcall	_spiRead
  1494                           
  1495                           ;mains1.c: 115:         spiWrite(ADC_analogvalue);
  1496  0160  0878               	movf	_ADC_analogvalue,w
  1497  0161  120A  118A  21BA  120A  118A  	fcall	_spiWrite
  1498  0166                     i1l882:
  1499                           
  1500                           ;mains1.c: 116:         SSPIF = 0;
  1501  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0168  118C               	bcf	12,3	;volatile
  1504  0169                     i1l69:
  1505  0169  0873               	movf	??_isr+2,w
  1506  016A  008A               	movwf	10
  1507  016B  0E72               	swapf	??_isr+1,w
  1508  016C  0083               	movwf	3
  1509  016D  0EFE               	swapf	btemp,f
  1510  016E  0E7E               	swapf	btemp,w
  1511  016F  0009               	retfie
  1512  0170                     __end_of_isr:
  1513                           
  1514                           	psect	intentry
  1515  0004                     __pintentry:	
  1516                           ;incstack = 0
  1517                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1518                           
  1519  0004                     interrupt_function:
  1520  007E                     saved_w	set	btemp
  1521  0004  00FE               	movwf	btemp
  1522  0005  0E03               	swapf	3,w
  1523  0006  00F2               	movwf	??_isr+1
  1524  0007  080A               	movf	10,w
  1525  0008  00F3               	movwf	??_isr+2
  1526  0009  120A  118A  294A   	ljmp	_isr
  1527                           
  1528                           	psect	text5
  1529  01BA                     __ptext5:	
  1530 ;; *************** function _spiWrite *****************
  1531 ;; Defined at:
  1532 ;;		line 34 in file "SPI.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  dat             1    wreg     unsigned char 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  dat             1    0[COMMON] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       0       0       0       0
  1547 ;;      Locals:         1       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0
  1549 ;;      Totals:         1       0       0       0       0
  1550 ;;Total ram usage:        1 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_isr
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _spiWrite
  1561  01BA                     _spiWrite:
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _spiWrite: [wreg]
  1565                           ;spiWrite@dat stored from wreg
  1566  01BA  00F0               	movwf	spiWrite@dat
  1567  01BB                     i1l852:
  1568                           
  1569                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1570  01BB  0870               	movf	spiWrite@dat,w
  1571  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1572  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1573  01BE  0093               	movwf	19	;volatile
  1574  01BF                     i1l144:
  1575  01BF  0008               	return
  1576  01C0                     __end_of_spiWrite:
  1577                           
  1578                           	psect	text6
  1579  01AA                     __ptext6:	
  1580 ;; *************** function _spiRead *****************
  1581 ;; Defined at:
  1582 ;;		line 47 in file "SPI.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      unsigned char 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    1
  1603 ;; This function calls:
  1604 ;;		_spiReceiveWait
  1605 ;; This function is called by:
  1606 ;;		_isr
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _spiRead
  1612  01AA                     _spiRead:
  1613  01AA                     i1l846:	
  1614                           ;incstack = 0
  1615                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1616                           
  1617                           
  1618                           ;SPI.c: 49:     spiReceiveWait();
  1619  01AA  120A  118A  21B3  120A  118A  	fcall	_spiReceiveWait
  1620  01AF                     i1l848:
  1621                           
  1622                           ;SPI.c: 50:     return(SSPBUF);;	Return value of _spiRead is never used
  1623  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1624  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1625  01B1  0813               	movf	19,w	;volatile
  1626  01B2                     i1l152:
  1627  01B2  0008               	return
  1628  01B3                     __end_of_spiRead:
  1629                           
  1630                           	psect	text7
  1631  01B3                     __ptext7:	
  1632 ;; *************** function _spiReceiveWait *****************
  1633 ;; Defined at:
  1634 ;;		line 29 in file "SPI.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		None
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0
  1651 ;;      Totals:         0       0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_spiRead
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _spiReceiveWait
  1663  01B3                     _spiReceiveWait:
  1664  01B3                     i1l754:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _spiReceiveWait: []
  1667                           
  1668  01B3                     i1l138:	
  1669                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1670                           
  1671  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  1672  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  1673  01B5  1C14               	btfss	20,0	;volatile
  1674  01B6  29B8               	goto	u2_21
  1675  01B7  29B9               	goto	u2_20
  1676  01B8                     u2_21:
  1677  01B8  29B3               	goto	i1l138
  1678  01B9                     u2_20:
  1679  01B9                     i1l141:
  1680  01B9  0008               	return
  1681  01BA                     __end_of_spiReceiveWait:
  1682  007E                     btemp	set	126	;btemp
  1683  007E                     wtemp0	set	126
  1684                           
  1685                           	psect	config
  1686                           
  1687                           ;Config register CONFIG1 @ 0x2007
  1688                           ;	Oscillator Selection bits
  1689                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1690                           ;	Watchdog Timer Enable bit
  1691                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1692                           ;	Power-up Timer Enable bit
  1693                           ;	PWRTE = OFF, PWRT disabled
  1694                           ;	RE3/MCLR pin function select bit
  1695                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1696                           ;	Code Protection bit
  1697                           ;	CP = OFF, Program memory code protection is disabled
  1698                           ;	Data Code Protection bit
  1699                           ;	CPD = OFF, Data memory code protection is disabled
  1700                           ;	Brown Out Reset Selection bits
  1701                           ;	BOREN = ON, BOR enabled
  1702                           ;	Internal External Switchover bit
  1703                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1704                           ;	Fail-Safe Clock Monitor Enabled bit
  1705                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1706                           ;	Low Voltage Programming Enable bit
  1707                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1708                           ;	In-Circuit Debugger Mode bit
  1709                           ;	DEBUG = 0x1, unprogrammed default
  1710  2007                     	org	8199
  1711  2007  23F4               	dw	9204
  1712                           
  1713                           ;Config register CONFIG2 @ 0x2008
  1714                           ;	Brown-out Reset Selection bit
  1715                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1716                           ;	Flash Program Memory Self Write Enable bits
  1717                           ;	WRT = OFF, Write protection off
  1718  2008                     	org	8200
  1719  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_init
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_ADC_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     754
                                              2 BANK0      1     1      0
                           _ADC_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     394
                                              4 COMMON     4     1      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 19:59:55 2021

            _SSPSTATbits 0094                       l62 0193                       l81 0017  
                     l83 001A                       l84 001D                       l85 0020  
                     l86 0023                       u60 019C                       u61 019B  
                     u80 013A                       u81 0139                       u97 013E  
                    l110 00D1                      l112 00E5                      l113 0116  
                    l114 00EA                      l115 00EF                      l107 00C9  
                    l116 00F4                      l117 00F9                      l109 00CD  
                    l118 011F                      l134 01A4                      l135 01A9  
                    l970 0195                      l972 019C                      l980 0170  
                    l974 019E                      l990 017C                      l982 0174  
                    l976 01A0                      l992 0182                      l984 0175  
                    l978 01A3                      l994 0183                      l986 0179  
                    l996 0184                      l988 017A                      l998 0187  
                    _isr 014A                     l1000 018A                     l1200 0082  
                   l1202 0087                     l1204 008A                     l1212 00D5  
                   l1216 00FE                     l1208 008F                     l1240 0131  
                   l1330 0030                     l1170 0026                     l1242 0135  
                   l1234 0120                     l1332 0097                     l1180 0050  
                   l1172 003E                     l1244 013A                     l1236 0125  
                   l1334 00DD                     l1190 0069                     l1182 0055  
                   l1174 0041                     l1166 0016                     l1246 0142  
                   l1238 012F                     l1336 0108                     l1192 006E  
                   l1184 005A                     l1176 0046                     l1248 0143  
                   l1194 0073                     l1186 005F                     l1178 004B  
                   l1196 0078                     l1188 0064                     l1198 007D  
                   ?_isr 0070                     i1l69 0169                     u2_20 01B9  
                   u2_21 01B8                     u4_20 0150                     u4_21 014F  
                   u5_20 015B                     u5_21 015A                     _main 0120  
      ADC_init@Justified 0075                     btemp 007E                     start 000C  
       __end_of_ADC_init 0120                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l141 01B9                    i1l152 01B2  
                  i1l144 01BF                    i1l138 01B3                    i1l754 01B3  
                  i1l852 01BB                    i1l846 01AA                    i1l870 014A  
                  i1l848 01AF                    i1l880 015B                    i1l872 0150  
                  i1l882 0166                    i1l874 0154                    i1l876 0156  
                  i1l878 0157                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIF 0063                    _setup 0170  
                  pclath 000A          __end_of_spiInit 01AA          __end_of_spiRead 01B3  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 014A                   ??_main 0022                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
        ADC_init@ADCSbit 0077                   saved_w 007E         __end_of_spiWrite 01C0  
              ??_spiInit 0077                ?_ADC_init 0074                ??_spiRead 0070  
        ADC_init@Channel 0074  __end_of__initialization 0011           __pcstackCOMMON 0070  
          __end_of_setup 0194               ??_ADC_init 0020                  ??_setup 0078  
             __pmaintext 0120               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                _ADC_cflag 0079                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 0170                  __ptext2 0194  
                __ptext3 0015                  __ptext4 014A                  __ptext5 01BA  
                __ptext6 01AA                  __ptext7 01B3             __size_of_isr 0026  
                _spiInit 0194                  _spiRead 01AA     end_of_initialization 0011  
        _ADC_analogvalue 0078               ??_spiWrite 0070                _TRISAbits 0085  
              _TRISCbits 0087              spiWrite@dat 0070        __size_of_ADC_init 010B  
           ADC_init@Vref 0076           _spiReceiveWait 01B3      start_initialization 000F  
            __end_of_isr 0170   __end_of_spiReceiveWait 01BA              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0074                 _ADC_init 0015  
               ?_spiRead 0070           __size_of_setup 0024     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of_spiInit 0016         __size_of_spiRead 0009            __size_of_main 002A  
               _spiWrite 01BA             spiInit@sType 0077        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
