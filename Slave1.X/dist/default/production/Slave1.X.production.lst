

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 18:47:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  001E                     _ADRESH	set	30
   369  000C                     _PIR1bits	set	12
   370  0008                     _PORTD	set	8
   371  0001                     _TMR0	set	1
   372  000B                     _INTCONbits	set	11
   373  001F                     _ADCON0bits	set	31
   374  0007                     _PORTC	set	7
   375  0063                     _SSPIF	set	99
   376  0094                     _SSPSTATbits	set	148
   377  0094                     _SSPSTAT	set	148
   378  009F                     _ADCON1bits	set	159
   379  008C                     _PIE1bits	set	140
   380  0096                     _IOCBbits	set	150
   381  0086                     _TRISBbits	set	134
   382  0086                     _TRISB	set	134
   383  0088                     _TRISD	set	136
   384  0087                     _TRISCbits	set	135
   385  0087                     _TRISC	set	135
   386  0085                     _TRISAbits	set	133
   387  0085                     _TRISA	set	133
   388  043B                     _TRISC3	set	1083
   389  043D                     _TRISC5	set	1085
   390  0188                     _ANSELbits	set	392
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398  000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   402  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0011                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0011                     __end_of__initialization:
   407  0011  0183               	clrf	3
   408  0012  120A  118A  2952   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411  0078                     __pbssCOMMON:
   412  0078                     _ADC_analogvalue:
   413  0078                     	ds	1
   414  0079                     _ADC_cflag:
   415  0079                     	ds	1
   416                           
   417                           	psect	cstackCOMMON
   418  0070                     __pcstackCOMMON:
   419  0070                     ?_setup:
   420  0070                     ?_spiRead:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_spiRead:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_spiWrite:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_spiWrite:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_isr:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_spiReceiveWait:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_spiReceiveWait:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     spiWrite@dat:	
   445                           ; 1 bytes @ 0x0
   446                           
   447                           
   448                           ; 1 bytes @ 0x0
   449  0070                     	ds	1
   450  0071                     ??_isr:
   451                           
   452                           ; 1 bytes @ 0x1
   453  0071                     	ds	3
   454  0074                     ?_ADC_init:
   455  0074                     ?_spiInit:	
   456                           ; 1 bytes @ 0x4
   457                           
   458  0074                     ADC_init@Channel:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     spiInit@sDataSample:	
   462                           ; 1 bytes @ 0x4
   463                           
   464                           
   465                           ; 1 bytes @ 0x4
   466  0074                     	ds	1
   467  0075                     ADC_init@Justified:
   468  0075                     spiInit@sClockIdle:	
   469                           ; 1 bytes @ 0x5
   470                           
   471                           
   472                           ; 1 bytes @ 0x5
   473  0075                     	ds	1
   474  0076                     ADC_init@Vref:
   475  0076                     spiInit@sTransmitEdge:	
   476                           ; 1 bytes @ 0x6
   477                           
   478                           
   479                           ; 1 bytes @ 0x6
   480  0076                     	ds	1
   481  0077                     ??_spiInit:
   482  0077                     ADC_init@ADCSbit:	
   483                           ; 1 bytes @ 0x7
   484                           
   485  0077                     spiInit@sType:	
   486                           ; 1 bytes @ 0x7
   487                           
   488                           
   489                           ; 1 bytes @ 0x7
   490  0077                     	ds	1
   491  0078                     ??_setup:
   492                           
   493                           	psect	cstackBANK0
   494  0020                     __pcstackBANK0:	
   495                           ; 1 bytes @ 0x8
   496                           
   497  0020                     ??_ADC_init:
   498                           
   499                           ; 1 bytes @ 0x0
   500  0020                     	ds	2
   501  0022                     ??_main:
   502                           
   503                           ; 1 bytes @ 0x2
   504  0022                     	ds	1
   505                           
   506                           	psect	maintext
   507  0152                     __pmaintext:	
   508 ;;
   509 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   510 ;;
   511 ;; *************** function _main *****************
   512 ;; Defined at:
   513 ;;		line 55 in file "mains1.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : B00/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0
   529 ;;      Temps:          0       1       0       0       0
   530 ;;      Totals:         0       1       0       0       0
   531 ;;Total ram usage:        1 bytes
   532 ;; Hardware stack levels required when called:    5
   533 ;; This function calls:
   534 ;;		_ADC_init
   535 ;;		_setup
   536 ;; This function is called by:
   537 ;;		Startup code after reset
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           
   542                           ;psect for function _main
   543  0152                     _main:
   544  0152                     l1264:	
   545                           ;incstack = 0
   546                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   547                           
   548                           
   549                           ;mains1.c: 56:     setup();
   550  0152  120A  118A  2120  120A  118A  	fcall	_setup
   551  0157                     l1266:
   552                           
   553                           ;mains1.c: 57:     ADC_init(1, 0, 0, 1);
   554  0157  01F4               	clrf	ADC_init@Channel
   555  0158  01F5               	clrf	ADC_init@Justified
   556  0159  01F6               	clrf	ADC_init@Vref
   557  015A  0AF6               	incf	ADC_init@Vref,f
   558  015B  3001               	movlw	1
   559  015C  120A  118A  2015  120A  118A  	fcall	_ADC_init
   560  0161                     l1268:
   561                           
   562                           ;mains1.c: 59:     ADC_cflag = 1;
   563  0161  01F9               	clrf	_ADC_cflag
   564  0162  0AF9               	incf	_ADC_cflag,f
   565  0163                     l1270:
   566                           
   567                           ;mains1.c: 61:         PORTC = ADC_analogvalue;
   568  0163  0878               	movf	_ADC_analogvalue,w
   569  0164  1283               	bcf	3,5	;RP0=0, select bank0
   570  0165  1303               	bcf	3,6	;RP1=0, select bank0
   571  0166  0087               	movwf	7	;volatile
   572  0167                     l1272:
   573                           
   574                           ;mains1.c: 62:         if (ADC_cflag == 1) {
   575  0167  0379               	decf	_ADC_cflag,w
   576  0168  1D03               	btfss	3,2
   577  0169  296B               	goto	u81
   578  016A  296C               	goto	u80
   579  016B                     u81:
   580  016B  2963               	goto	l1270
   581  016C                     u80:
   582  016C                     l1274:
   583                           
   584                           ;mains1.c: 63:             _delay((unsigned long)((500)*((8000000)/4000000.0)));
   585  016C  30C7               	movlw	199
   586  016D  1283               	bcf	3,5	;RP0=0, select bank0
   587  016E  1303               	bcf	3,6	;RP1=0, select bank0
   588  016F  00A2               	movwf	??_main
   589  0170                     u97:
   590  0170  2971               	nop2
   591  0171  0BA2               	decfsz	??_main,f
   592  0172  2970               	goto	u97
   593  0173  2974               	nop2
   594  0174                     l1276:
   595                           
   596                           ;mains1.c: 64:             ADC_cflag = 0;
   597  0174  01F9               	clrf	_ADC_cflag
   598  0175                     l1278:
   599                           
   600                           ;mains1.c: 65:             ADCON0bits.GO = 1;
   601  0175  1283               	bcf	3,5	;RP0=0, select bank0
   602  0176  1303               	bcf	3,6	;RP1=0, select bank0
   603  0177  149F               	bsf	31,1	;volatile
   604  0178  2963               	goto	l1270
   605  0179  120A  118A  280C   	ljmp	start
   606  017C                     __end_of_main:
   607                           
   608                           	psect	text1
   609  0120                     __ptext1:	
   610 ;; *************** function _setup *****************
   611 ;; Defined at:
   612 ;;		line 74 in file "mains1.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    4
   633 ;; This function calls:
   634 ;;		_spiInit
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _setup
   642  0120                     _setup:
   643  0120                     l998:	
   644                           ;incstack = 0
   645                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   646                           
   647                           
   648                           ;mains1.c: 76:     ANSEL = 0;
   649  0120  1683               	bsf	3,5	;RP0=1, select bank3
   650  0121  1703               	bsf	3,6	;RP1=1, select bank3
   651  0122  0188               	clrf	8	;volatile
   652                           
   653                           ;mains1.c: 77:     ANSELH = 0;
   654  0123  0189               	clrf	9	;volatile
   655  0124                     l1000:
   656                           
   657                           ;mains1.c: 78:     ANSELbits.ANS0 = 1;
   658  0124  1408               	bsf	8,0	;volatile
   659  0125                     l1002:
   660                           
   661                           ;mains1.c: 80:     INTCONbits.GIE = 1;
   662  0125  178B               	bsf	11,7	;volatile
   663                           
   664                           ;mains1.c: 81:     TMR0 = 0;
   665  0126  1283               	bcf	3,5	;RP0=0, select bank0
   666  0127  1303               	bcf	3,6	;RP1=0, select bank0
   667  0128  0181               	clrf	1	;volatile
   668                           
   669                           ;mains1.c: 82:     TRISA = 0;
   670  0129  1683               	bsf	3,5	;RP0=1, select bank1
   671  012A  1303               	bcf	3,6	;RP1=0, select bank1
   672  012B  0185               	clrf	5	;volatile
   673  012C                     l1004:
   674                           
   675                           ;mains1.c: 83:     TRISAbits.TRISA0 = 1;
   676  012C  1405               	bsf	5,0	;volatile
   677  012D                     l1006:
   678                           
   679                           ;mains1.c: 84:     TRISAbits.TRISA5 = 1;
   680  012D  1685               	bsf	5,5	;volatile
   681                           
   682                           ;mains1.c: 85:     TRISC = 0;
   683  012E  0187               	clrf	7	;volatile
   684  012F                     l1008:
   685                           
   686                           ;mains1.c: 86:     TRISCbits.TRISC4 = 1;
   687  012F  1607               	bsf	7,4	;volatile
   688                           
   689                           ;mains1.c: 87:     TRISD = 0;
   690  0130  0188               	clrf	8	;volatile
   691                           
   692                           ;mains1.c: 88:     TRISB = 0;
   693  0131  0186               	clrf	6	;volatile
   694                           
   695                           ;mains1.c: 89:     PORTC = 0;
   696  0132  1283               	bcf	3,5	;RP0=0, select bank0
   697  0133  1303               	bcf	3,6	;RP1=0, select bank0
   698  0134  0187               	clrf	7	;volatile
   699                           
   700                           ;mains1.c: 90:     PORTD = 0;
   701  0135  0188               	clrf	8	;volatile
   702  0136                     l1010:
   703                           
   704                           ;mains1.c: 91:     TRISBbits.TRISB1 = 1;
   705  0136  1683               	bsf	3,5	;RP0=1, select bank1
   706  0137  1303               	bcf	3,6	;RP1=0, select bank1
   707  0138  1486               	bsf	6,1	;volatile
   708  0139                     l1012:
   709                           
   710                           ;mains1.c: 92:     TRISBbits.TRISB0 = 1;
   711  0139  1406               	bsf	6,0	;volatile
   712  013A                     l1014:
   713                           
   714                           ;mains1.c: 93:     INTCONbits.PEIE = 1;
   715  013A  170B               	bsf	11,6	;volatile
   716  013B                     l1016:
   717                           
   718                           ;mains1.c: 94:     INTCONbits.RBIE = 1;
   719  013B  158B               	bsf	11,3	;volatile
   720  013C                     l1018:
   721                           
   722                           ;mains1.c: 95:     IOCBbits.IOCB0 = 1;
   723  013C  1416               	bsf	22,0	;volatile
   724  013D                     l1020:
   725                           
   726                           ;mains1.c: 96:     IOCBbits.IOCB1 = 1;
   727  013D  1496               	bsf	22,1	;volatile
   728  013E                     l1022:
   729                           
   730                           ;mains1.c: 97:     INTCONbits.RBIF = 0;
   731  013E  100B               	bcf	11,0	;volatile
   732  013F                     l1024:
   733                           
   734                           ;mains1.c: 99:     PIR1bits.ADIF = 0;
   735  013F  1283               	bcf	3,5	;RP0=0, select bank0
   736  0140  1303               	bcf	3,6	;RP1=0, select bank0
   737  0141  130C               	bcf	12,6	;volatile
   738  0142                     l1026:
   739                           
   740                           ;mains1.c: 100:     PIE1bits.ADIE = 1;
   741  0142  1683               	bsf	3,5	;RP0=1, select bank1
   742  0143  1303               	bcf	3,6	;RP1=0, select bank1
   743  0144  170C               	bsf	12,6	;volatile
   744  0145                     l1028:
   745                           
   746                           ;mains1.c: 101:     ADCON0bits.ADON = 1;
   747  0145  1283               	bcf	3,5	;RP0=0, select bank0
   748  0146  1303               	bcf	3,6	;RP1=0, select bank0
   749  0147  141F               	bsf	31,0	;volatile
   750  0148                     l1030:
   751                           
   752                           ;mains1.c: 103:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   753  0148  01F4               	clrf	spiInit@sDataSample
   754  0149  01F5               	clrf	spiInit@sClockIdle
   755  014A  01F6               	clrf	spiInit@sTransmitEdge
   756  014B  3024               	movlw	36
   757  014C  120A  118A  21A2  120A  118A  	fcall	_spiInit
   758  0151                     l68:
   759  0151  0008               	return
   760  0152                     __end_of_setup:
   761                           
   762                           	psect	text2
   763  01A2                     __ptext2:	
   764 ;; *************** function _spiInit *****************
   765 ;; Defined at:
   766 ;;		line 12 in file "SPI.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  sType           1    wreg     enum E1264
   769 ;;  sDataSample     1    4[COMMON] enum E1272
   770 ;;  sClockIdle      1    5[COMMON] enum E1276
   771 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  sType           1    7[COMMON] enum E1264
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         3       0       0       0       0
   784 ;;      Locals:         1       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0
   786 ;;      Totals:         4       0       0       0       0
   787 ;;Total ram usage:        4 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_setup
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _spiInit
   799  01A2                     _spiInit:
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   803                           ;spiInit@sType stored from wreg
   804  01A2  00F7               	movwf	spiInit@sType
   805  01A3                     l988:
   806                           
   807                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   808  01A3  1683               	bsf	3,5	;RP0=1, select bank1
   809  01A4  1303               	bcf	3,6	;RP1=0, select bank1
   810  01A5  1287               	bcf	7,5	;volatile
   811                           
   812                           ;SPI.c: 15:     if(sType & 0b00000100)
   813  01A6  1D77               	btfss	spiInit@sType,2
   814  01A7  29A9               	goto	u61
   815  01A8  29AA               	goto	u60
   816  01A9                     u61:
   817  01A9  29AE               	goto	l994
   818  01AA                     u60:
   819  01AA                     l990:
   820                           
   821                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   822  01AA  0876               	movf	spiInit@sTransmitEdge,w
   823  01AB  0094               	movwf	20	;volatile
   824  01AC                     l992:
   825                           
   826                           ;SPI.c: 18:         TRISC3 = 1;
   827  01AC  1587               	bsf	7,3	;volatile
   828                           
   829                           ;SPI.c: 19:     }
   830  01AD  29B2               	goto	l140
   831  01AE                     l994:
   832                           
   833                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   834  01AE  0874               	movf	spiInit@sDataSample,w
   835  01AF  0476               	iorwf	spiInit@sTransmitEdge,w
   836  01B0  0094               	movwf	20	;volatile
   837  01B1                     l996:
   838                           
   839                           ;SPI.c: 23:         TRISC3 = 0;
   840  01B1  1187               	bcf	7,3	;volatile
   841  01B2                     l140:	
   842                           ;SPI.c: 24:     }
   843                           
   844                           
   845                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   846  01B2  0877               	movf	spiInit@sType,w
   847  01B3  0475               	iorwf	spiInit@sClockIdle,w
   848  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   849  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   850  01B6  0094               	movwf	20	;volatile
   851  01B7                     l141:
   852  01B7  0008               	return
   853  01B8                     __end_of_spiInit:
   854                           
   855                           	psect	text3
   856  0015                     __ptext3:	
   857 ;; *************** function _ADC_init *****************
   858 ;; Defined at:
   859 ;;		line 3 in file "ADC.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  ADCSbit         1    wreg     unsigned char 
   862 ;;  Channel         1    4[COMMON] unsigned char 
   863 ;;  Justified       1    5[COMMON] unsigned char 
   864 ;;  Vref            1    6[COMMON] unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  ADCSbit         1    7[COMMON] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         3       0       0       0       0
   877 ;;      Locals:         1       0       0       0       0
   878 ;;      Temps:          0       2       0       0       0
   879 ;;      Totals:         4       2       0       0       0
   880 ;;Total ram usage:        6 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    3
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _ADC_init
   892  0015                     _ADC_init:
   893                           
   894                           ;incstack = 0
   895                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
   896                           ;ADC_init@ADCSbit stored from wreg
   897  0015  00F7               	movwf	ADC_init@ADCSbit
   898  0016                     l1196:
   899                           
   900                           ;ADC.c: 5:     switch (ADCSbit){
   901  0016  2826               	goto	l1200
   902  0017                     l87:	
   903                           ;ADC.c: 6:         case 0:
   904                           
   905                           
   906                           ;ADC.c: 7:             ADCON0bits.ADCS1 = 0;
   907  0017  139F               	bcf	31,7	;volatile
   908                           
   909                           ;ADC.c: 8:             ADCON0bits.ADCS0 = 0;
   910  0018  131F               	bcf	31,6	;volatile
   911                           
   912                           ;ADC.c: 9:             break;
   913  0019  288F               	goto	l1238
   914  001A                     l89:	
   915                           ;ADC.c: 10:         case 1:
   916                           
   917                           
   918                           ;ADC.c: 11:             ADCON0bits.ADCS1 = 0;
   919  001A  139F               	bcf	31,7	;volatile
   920                           
   921                           ;ADC.c: 12:             ADCON0bits.ADCS0 = 1;
   922  001B  171F               	bsf	31,6	;volatile
   923                           
   924                           ;ADC.c: 13:             break;
   925  001C  288F               	goto	l1238
   926  001D                     l90:	
   927                           ;ADC.c: 14:         case 2:
   928                           
   929                           
   930                           ;ADC.c: 15:             ADCON0bits.ADCS1 = 1;
   931  001D  179F               	bsf	31,7	;volatile
   932                           
   933                           ;ADC.c: 16:             ADCON0bits.ADCS0 = 0;
   934  001E  131F               	bcf	31,6	;volatile
   935                           
   936                           ;ADC.c: 17:             break;
   937  001F  288F               	goto	l1238
   938  0020                     l91:	
   939                           ;ADC.c: 18:         case 3:
   940                           
   941                           
   942                           ;ADC.c: 19:             ADCON0bits.ADCS1 = 1;
   943  0020  179F               	bsf	31,7	;volatile
   944                           
   945                           ;ADC.c: 20:             ADCON0bits.ADCS0 = 1;
   946  0021  171F               	bsf	31,6	;volatile
   947                           
   948                           ;ADC.c: 21:             break;
   949  0022  288F               	goto	l1238
   950  0023                     l92:	
   951                           ;ADC.c: 22:         default:
   952                           
   953                           
   954                           ;ADC.c: 23:             ADCON0bits.ADCS1 = 0;
   955  0023  139F               	bcf	31,7	;volatile
   956                           
   957                           ;ADC.c: 24:             ADCON0bits.ADCS0 = 1;
   958  0024  171F               	bsf	31,6	;volatile
   959                           
   960                           ;ADC.c: 25:             break;
   961  0025  288F               	goto	l1238
   962  0026                     l1200:
   963  0026  0877               	movf	ADC_init@ADCSbit,w
   964  0027  1283               	bcf	3,5	;RP0=0, select bank0
   965  0028  1303               	bcf	3,6	;RP1=0, select bank0
   966  0029  00A0               	movwf	??_ADC_init
   967  002A  01A1               	clrf	??_ADC_init+1
   968                           
   969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   970                           ; Switch size 1, requested type "simple"
   971                           ; Number of cases is 1, Range of values is 0 to 0
   972                           ; switch strategies available:
   973                           ; Name         Instructions Cycles
   974                           ; simple_byte            4     3 (average)
   975                           ; direct_byte           11     8 (fixed)
   976                           ; jumptable            260     6 (fixed)
   977                           ;	Chosen strategy is simple_byte
   978  002B  0821               	movf	??_ADC_init+1,w
   979  002C  3A00               	xorlw	0	; case 0
   980  002D  1903               	skipnz
   981  002E  2830               	goto	l1360
   982  002F  2823               	goto	l92
   983  0030                     l1360:
   984                           
   985                           ; Switch size 1, requested type "simple"
   986                           ; Number of cases is 4, Range of values is 0 to 3
   987                           ; switch strategies available:
   988                           ; Name         Instructions Cycles
   989                           ; simple_byte           13     7 (average)
   990                           ; direct_byte           20     8 (fixed)
   991                           ; jumptable            260     6 (fixed)
   992                           ;	Chosen strategy is simple_byte
   993  0030  0820               	movf	??_ADC_init,w
   994  0031  3A00               	xorlw	0	; case 0
   995  0032  1903               	skipnz
   996  0033  2817               	goto	l87
   997  0034  3A01               	xorlw	1	; case 1
   998  0035  1903               	skipnz
   999  0036  281A               	goto	l89
  1000  0037  3A03               	xorlw	3	; case 2
  1001  0038  1903               	skipnz
  1002  0039  281D               	goto	l90
  1003  003A  3A01               	xorlw	1	; case 3
  1004  003B  1903               	skipnz
  1005  003C  2820               	goto	l91
  1006  003D  2823               	goto	l92
  1007  003E                     l1202:
  1008                           
  1009                           ;ADC.c: 30:             ADCON0bits.CHS = 0b0000;
  1010  003E  30C3               	movlw	-61
  1011  003F  059F               	andwf	31,f	;volatile
  1012                           
  1013                           ;ADC.c: 31:             break;
  1014  0040  28D5               	goto	l1242
  1015  0041                     l1204:
  1016                           
  1017                           ;ADC.c: 33:             ADCON0bits.CHS = 0b0001;
  1018  0041  081F               	movf	31,w	;volatile
  1019  0042  39C3               	andlw	-61
  1020  0043  3804               	iorlw	4
  1021  0044  009F               	movwf	31	;volatile
  1022                           
  1023                           ;ADC.c: 34:             break;
  1024  0045  28D5               	goto	l1242
  1025  0046                     l1206:
  1026                           
  1027                           ;ADC.c: 36:             ADCON0bits.CHS = 0b0010;
  1028  0046  081F               	movf	31,w	;volatile
  1029  0047  39C3               	andlw	-61
  1030  0048  3808               	iorlw	8
  1031  0049  009F               	movwf	31	;volatile
  1032                           
  1033                           ;ADC.c: 37:             break;
  1034  004A  28D5               	goto	l1242
  1035  004B                     l1208:
  1036                           
  1037                           ;ADC.c: 39:             ADCON0bits.CHS = 0b0011;
  1038  004B  081F               	movf	31,w	;volatile
  1039  004C  39C3               	andlw	-61
  1040  004D  380C               	iorlw	12
  1041  004E  009F               	movwf	31	;volatile
  1042                           
  1043                           ;ADC.c: 40:             break;
  1044  004F  28D5               	goto	l1242
  1045  0050                     l1210:
  1046                           
  1047                           ;ADC.c: 42:             ADCON0bits.CHS = 0b0100;
  1048  0050  081F               	movf	31,w	;volatile
  1049  0051  39C3               	andlw	-61
  1050  0052  3810               	iorlw	16
  1051  0053  009F               	movwf	31	;volatile
  1052                           
  1053                           ;ADC.c: 43:             break;
  1054  0054  28D5               	goto	l1242
  1055  0055                     l1212:
  1056                           
  1057                           ;ADC.c: 45:             ADCON0bits.CHS = 0b0101;
  1058  0055  081F               	movf	31,w	;volatile
  1059  0056  39C3               	andlw	-61
  1060  0057  3814               	iorlw	20
  1061  0058  009F               	movwf	31	;volatile
  1062                           
  1063                           ;ADC.c: 46:             break;
  1064  0059  28D5               	goto	l1242
  1065  005A                     l1214:
  1066                           
  1067                           ;ADC.c: 48:             ADCON0bits.CHS = 0b0110;
  1068  005A  081F               	movf	31,w	;volatile
  1069  005B  39C3               	andlw	-61
  1070  005C  3818               	iorlw	24
  1071  005D  009F               	movwf	31	;volatile
  1072                           
  1073                           ;ADC.c: 49:             break;
  1074  005E  28D5               	goto	l1242
  1075  005F                     l1216:
  1076                           
  1077                           ;ADC.c: 51:             ADCON0bits.CHS = 0b0111;
  1078  005F  081F               	movf	31,w	;volatile
  1079  0060  39C3               	andlw	-61
  1080  0061  381C               	iorlw	28
  1081  0062  009F               	movwf	31	;volatile
  1082                           
  1083                           ;ADC.c: 52:             break;
  1084  0063  28D5               	goto	l1242
  1085  0064                     l1218:
  1086                           
  1087                           ;ADC.c: 54:             ADCON0bits.CHS = 0b1000;
  1088  0064  081F               	movf	31,w	;volatile
  1089  0065  39C3               	andlw	-61
  1090  0066  3820               	iorlw	32
  1091  0067  009F               	movwf	31	;volatile
  1092                           
  1093                           ;ADC.c: 55:             break;
  1094  0068  28D5               	goto	l1242
  1095  0069                     l1220:
  1096                           
  1097                           ;ADC.c: 57:             ADCON0bits.CHS = 0b1001;
  1098  0069  081F               	movf	31,w	;volatile
  1099  006A  39C3               	andlw	-61
  1100  006B  3824               	iorlw	36
  1101  006C  009F               	movwf	31	;volatile
  1102                           
  1103                           ;ADC.c: 58:             break;
  1104  006D  28D5               	goto	l1242
  1105  006E                     l1222:
  1106                           
  1107                           ;ADC.c: 60:             ADCON0bits.CHS = 0b1010;
  1108  006E  081F               	movf	31,w	;volatile
  1109  006F  39C3               	andlw	-61
  1110  0070  3828               	iorlw	40
  1111  0071  009F               	movwf	31	;volatile
  1112                           
  1113                           ;ADC.c: 61:             break;
  1114  0072  28D5               	goto	l1242
  1115  0073                     l1224:
  1116                           
  1117                           ;ADC.c: 63:             ADCON0bits.CHS = 0b1011;
  1118  0073  081F               	movf	31,w	;volatile
  1119  0074  39C3               	andlw	-61
  1120  0075  382C               	iorlw	44
  1121  0076  009F               	movwf	31	;volatile
  1122                           
  1123                           ;ADC.c: 64:             break;
  1124  0077  28D5               	goto	l1242
  1125  0078                     l1226:
  1126                           
  1127                           ;ADC.c: 66:             ADCON0bits.CHS = 0b1100;
  1128  0078  081F               	movf	31,w	;volatile
  1129  0079  39C3               	andlw	-61
  1130  007A  3830               	iorlw	48
  1131  007B  009F               	movwf	31	;volatile
  1132                           
  1133                           ;ADC.c: 67:             break;
  1134  007C  28D5               	goto	l1242
  1135  007D                     l1228:
  1136                           
  1137                           ;ADC.c: 69:             ADCON0bits.CHS = 0b1101;
  1138  007D  081F               	movf	31,w	;volatile
  1139  007E  39C3               	andlw	-61
  1140  007F  3834               	iorlw	52
  1141  0080  009F               	movwf	31	;volatile
  1142                           
  1143                           ;ADC.c: 70:             break;
  1144  0081  28D5               	goto	l1242
  1145  0082                     l1230:
  1146                           
  1147                           ;ADC.c: 72:             ADCON0bits.CHS = 0b1110;
  1148  0082  081F               	movf	31,w	;volatile
  1149  0083  39C3               	andlw	-61
  1150  0084  3838               	iorlw	56
  1151  0085  009F               	movwf	31	;volatile
  1152                           
  1153                           ;ADC.c: 73:             break;
  1154  0086  28D5               	goto	l1242
  1155  0087                     l1232:
  1156                           
  1157                           ;ADC.c: 75:             ADCON0bits.CHS = 0b1111;
  1158  0087  303C               	movlw	60
  1159  0088  049F               	iorwf	31,f	;volatile
  1160                           
  1161                           ;ADC.c: 76:             break;
  1162  0089  28D5               	goto	l1242
  1163  008A                     l1234:
  1164                           
  1165                           ;ADC.c: 78:             ADCON0bits.CHS = 0b0010;
  1166  008A  081F               	movf	31,w	;volatile
  1167  008B  39C3               	andlw	-61
  1168  008C  3808               	iorlw	8
  1169  008D  009F               	movwf	31	;volatile
  1170                           
  1171                           ;ADC.c: 79:             break;
  1172  008E  28D5               	goto	l1242
  1173  008F                     l1238:
  1174  008F  0874               	movf	ADC_init@Channel,w
  1175  0090  00A0               	movwf	??_ADC_init
  1176  0091  01A1               	clrf	??_ADC_init+1
  1177                           
  1178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1179                           ; Switch size 1, requested type "simple"
  1180                           ; Number of cases is 1, Range of values is 0 to 0
  1181                           ; switch strategies available:
  1182                           ; Name         Instructions Cycles
  1183                           ; simple_byte            4     3 (average)
  1184                           ; direct_byte           11     8 (fixed)
  1185                           ; jumptable            260     6 (fixed)
  1186                           ;	Chosen strategy is simple_byte
  1187  0092  0821               	movf	??_ADC_init+1,w
  1188  0093  3A00               	xorlw	0	; case 0
  1189  0094  1903               	skipnz
  1190  0095  2897               	goto	l1362
  1191  0096  288A               	goto	l1234
  1192  0097                     l1362:
  1193                           
  1194                           ; Switch size 1, requested type "simple"
  1195                           ; Number of cases is 16, Range of values is 0 to 15
  1196                           ; switch strategies available:
  1197                           ; Name         Instructions Cycles
  1198                           ; simple_byte           49    25 (average)
  1199                           ; direct_byte           56     8 (fixed)
  1200                           ; jumptable            260     6 (fixed)
  1201                           ;	Chosen strategy is simple_byte
  1202  0097  0820               	movf	??_ADC_init,w
  1203  0098  3A00               	xorlw	0	; case 0
  1204  0099  1903               	skipnz
  1205  009A  283E               	goto	l1202
  1206  009B  3A01               	xorlw	1	; case 1
  1207  009C  1903               	skipnz
  1208  009D  2841               	goto	l1204
  1209  009E  3A03               	xorlw	3	; case 2
  1210  009F  1903               	skipnz
  1211  00A0  2846               	goto	l1206
  1212  00A1  3A01               	xorlw	1	; case 3
  1213  00A2  1903               	skipnz
  1214  00A3  284B               	goto	l1208
  1215  00A4  3A07               	xorlw	7	; case 4
  1216  00A5  1903               	skipnz
  1217  00A6  2850               	goto	l1210
  1218  00A7  3A01               	xorlw	1	; case 5
  1219  00A8  1903               	skipnz
  1220  00A9  2855               	goto	l1212
  1221  00AA  3A03               	xorlw	3	; case 6
  1222  00AB  1903               	skipnz
  1223  00AC  285A               	goto	l1214
  1224  00AD  3A01               	xorlw	1	; case 7
  1225  00AE  1903               	skipnz
  1226  00AF  285F               	goto	l1216
  1227  00B0  3A0F               	xorlw	15	; case 8
  1228  00B1  1903               	skipnz
  1229  00B2  2864               	goto	l1218
  1230  00B3  3A01               	xorlw	1	; case 9
  1231  00B4  1903               	skipnz
  1232  00B5  2869               	goto	l1220
  1233  00B6  3A03               	xorlw	3	; case 10
  1234  00B7  1903               	skipnz
  1235  00B8  286E               	goto	l1222
  1236  00B9  3A01               	xorlw	1	; case 11
  1237  00BA  1903               	skipnz
  1238  00BB  2873               	goto	l1224
  1239  00BC  3A07               	xorlw	7	; case 12
  1240  00BD  1903               	skipnz
  1241  00BE  2878               	goto	l1226
  1242  00BF  3A01               	xorlw	1	; case 13
  1243  00C0  1903               	skipnz
  1244  00C1  287D               	goto	l1228
  1245  00C2  3A03               	xorlw	3	; case 14
  1246  00C3  1903               	skipnz
  1247  00C4  2882               	goto	l1230
  1248  00C5  3A01               	xorlw	1	; case 15
  1249  00C6  1903               	skipnz
  1250  00C7  2887               	goto	l1232
  1251  00C8  288A               	goto	l1234
  1252  00C9                     l113:	
  1253                           ;ADC.c: 83:         case 0:
  1254                           
  1255                           
  1256                           ;ADC.c: 84:             ADCON1bits.ADFM = 0;
  1257  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1258  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1259  00CB  139F               	bcf	31,7	;volatile
  1260                           
  1261                           ;ADC.c: 85:             break;
  1262  00CC  28FE               	goto	l1246
  1263  00CD                     l115:	
  1264                           ;ADC.c: 86:         case 1:
  1265                           
  1266                           
  1267                           ;ADC.c: 87:             ADCON1bits.ADFM = 1;
  1268  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1269  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1270  00CF  179F               	bsf	31,7	;volatile
  1271                           
  1272                           ;ADC.c: 88:             break;
  1273  00D0  28FE               	goto	l1246
  1274  00D1                     l116:	
  1275                           ;ADC.c: 89:         default:
  1276                           
  1277                           
  1278                           ;ADC.c: 90:             ADCON1bits.ADFM = 0;
  1279  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1280  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1281  00D3  139F               	bcf	31,7	;volatile
  1282                           
  1283                           ;ADC.c: 91:             break;
  1284  00D4  28FE               	goto	l1246
  1285  00D5                     l1242:
  1286  00D5  0875               	movf	ADC_init@Justified,w
  1287  00D6  00A0               	movwf	??_ADC_init
  1288  00D7  01A1               	clrf	??_ADC_init+1
  1289                           
  1290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1291                           ; Switch size 1, requested type "simple"
  1292                           ; Number of cases is 1, Range of values is 0 to 0
  1293                           ; switch strategies available:
  1294                           ; Name         Instructions Cycles
  1295                           ; simple_byte            4     3 (average)
  1296                           ; direct_byte           11     8 (fixed)
  1297                           ; jumptable            260     6 (fixed)
  1298                           ;	Chosen strategy is simple_byte
  1299  00D8  0821               	movf	??_ADC_init+1,w
  1300  00D9  3A00               	xorlw	0	; case 0
  1301  00DA  1903               	skipnz
  1302  00DB  28DD               	goto	l1364
  1303  00DC  28D1               	goto	l116
  1304  00DD                     l1364:
  1305                           
  1306                           ; Switch size 1, requested type "simple"
  1307                           ; Number of cases is 2, Range of values is 0 to 1
  1308                           ; switch strategies available:
  1309                           ; Name         Instructions Cycles
  1310                           ; simple_byte            7     4 (average)
  1311                           ; direct_byte           14     8 (fixed)
  1312                           ; jumptable            260     6 (fixed)
  1313                           ;	Chosen strategy is simple_byte
  1314  00DD  0820               	movf	??_ADC_init,w
  1315  00DE  3A00               	xorlw	0	; case 0
  1316  00DF  1903               	skipnz
  1317  00E0  28C9               	goto	l113
  1318  00E1  3A01               	xorlw	1	; case 1
  1319  00E2  1903               	skipnz
  1320  00E3  28CD               	goto	l115
  1321  00E4  28D1               	goto	l116
  1322  00E5                     l118:	
  1323                           ;ADC.c: 95:         case 1:
  1324                           
  1325                           
  1326                           ;ADC.c: 96:             ADCON1bits.VCFG1 = 0;
  1327  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1328  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1329  00E7  129F               	bcf	31,5	;volatile
  1330                           
  1331                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1332  00E8  121F               	bcf	31,4	;volatile
  1333                           
  1334                           ;ADC.c: 98:             break;
  1335  00E9  2916               	goto	l119
  1336  00EA                     l120:	
  1337                           ;ADC.c: 99:         case 2:
  1338                           
  1339                           
  1340                           ;ADC.c: 100:             ADCON1bits.VCFG1 = 0;
  1341  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1342  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1343  00EC  129F               	bcf	31,5	;volatile
  1344                           
  1345                           ;ADC.c: 101:             ADCON1bits.VCFG0 = 1;
  1346  00ED  161F               	bsf	31,4	;volatile
  1347                           
  1348                           ;ADC.c: 102:             break;
  1349  00EE  2916               	goto	l119
  1350  00EF                     l121:	
  1351                           ;ADC.c: 103:         case 3:
  1352                           
  1353                           
  1354                           ;ADC.c: 104:             ADCON1bits.VCFG1 = 1;
  1355  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1356  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1357  00F1  169F               	bsf	31,5	;volatile
  1358                           
  1359                           ;ADC.c: 105:             ADCON1bits.VCFG0 = 0;
  1360  00F2  121F               	bcf	31,4	;volatile
  1361                           
  1362                           ;ADC.c: 106:             break;
  1363  00F3  2916               	goto	l119
  1364  00F4                     l122:	
  1365                           ;ADC.c: 107:         case 4:
  1366                           
  1367                           
  1368                           ;ADC.c: 108:             ADCON1bits.VCFG1 = 1;
  1369  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1370  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  1371  00F6  169F               	bsf	31,5	;volatile
  1372                           
  1373                           ;ADC.c: 109:             ADCON1bits.VCFG0 = 1;
  1374  00F7  161F               	bsf	31,4	;volatile
  1375                           
  1376                           ;ADC.c: 110:             break;
  1377  00F8  2916               	goto	l119
  1378  00F9                     l123:	
  1379                           ;ADC.c: 111:         default:
  1380                           
  1381                           
  1382                           ;ADC.c: 112:             ADCON1bits.VCFG1 = 0;
  1383  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1384  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1385  00FB  129F               	bcf	31,5	;volatile
  1386                           
  1387                           ;ADC.c: 113:             ADCON1bits.VCFG0 = 0;
  1388  00FC  121F               	bcf	31,4	;volatile
  1389                           
  1390                           ;ADC.c: 114:             break;
  1391  00FD  2916               	goto	l119
  1392  00FE                     l1246:
  1393  00FE  0876               	movf	ADC_init@Vref,w
  1394  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1395  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1396  0101  00A0               	movwf	??_ADC_init
  1397  0102  01A1               	clrf	??_ADC_init+1
  1398                           
  1399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1400                           ; Switch size 1, requested type "simple"
  1401                           ; Number of cases is 1, Range of values is 0 to 0
  1402                           ; switch strategies available:
  1403                           ; Name         Instructions Cycles
  1404                           ; simple_byte            4     3 (average)
  1405                           ; direct_byte           11     8 (fixed)
  1406                           ; jumptable            260     6 (fixed)
  1407                           ;	Chosen strategy is simple_byte
  1408  0103  0821               	movf	??_ADC_init+1,w
  1409  0104  3A00               	xorlw	0	; case 0
  1410  0105  1903               	skipnz
  1411  0106  2908               	goto	l1366
  1412  0107  28F9               	goto	l123
  1413  0108                     l1366:
  1414                           
  1415                           ; Switch size 1, requested type "simple"
  1416                           ; Number of cases is 4, Range of values is 1 to 4
  1417                           ; switch strategies available:
  1418                           ; Name         Instructions Cycles
  1419                           ; simple_byte           13     7 (average)
  1420                           ; direct_byte           23    11 (fixed)
  1421                           ; jumptable            263     9 (fixed)
  1422                           ;	Chosen strategy is simple_byte
  1423  0108  0820               	movf	??_ADC_init,w
  1424  0109  3A01               	xorlw	1	; case 1
  1425  010A  1903               	skipnz
  1426  010B  28E5               	goto	l118
  1427  010C  3A03               	xorlw	3	; case 2
  1428  010D  1903               	skipnz
  1429  010E  28EA               	goto	l120
  1430  010F  3A01               	xorlw	1	; case 3
  1431  0110  1903               	skipnz
  1432  0111  28EF               	goto	l121
  1433  0112  3A07               	xorlw	7	; case 4
  1434  0113  1903               	skipnz
  1435  0114  28F4               	goto	l122
  1436  0115  28F9               	goto	l123
  1437  0116                     l119:
  1438                           
  1439                           ;ADC.c: 117:     PIR1bits.ADIF = 0;
  1440  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0118  130C               	bcf	12,6	;volatile
  1443                           
  1444                           ;ADC.c: 118:     PIE1bits.ADIE = 1;
  1445  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1446  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1447  011B  170C               	bsf	12,6	;volatile
  1448                           
  1449                           ;ADC.c: 119:     ADCON0bits.ADON = 1;
  1450  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1451  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1452  011E  141F               	bsf	31,0	;volatile
  1453  011F                     l124:
  1454  011F  0008               	return
  1455  0120                     __end_of_ADC_init:
  1456                           
  1457                           	psect	text4
  1458  017C                     __ptext4:	
  1459 ;; *************** function _isr *****************
  1460 ;; Defined at:
  1461 ;;		line 114 in file "mains1.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0
  1477 ;;      Temps:          3       0       0       0       0
  1478 ;;      Totals:         3       0       0       0       0
  1479 ;;Total ram usage:        3 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    2
  1482 ;; This function calls:
  1483 ;;		_spiRead
  1484 ;;		_spiWrite
  1485 ;; This function is called by:
  1486 ;;		Interrupt level 1
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _isr
  1492  017C                     _isr:
  1493  017C                     i1l888:
  1494                           
  1495                           ;mains1.c: 115:     if (PIR1bits.ADIF == 1) {
  1496  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1497  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1498  017E  1F0C               	btfss	12,6	;volatile
  1499  017F  2981               	goto	u4_21
  1500  0180  2982               	goto	u4_20
  1501  0181                     u4_21:
  1502  0181  2989               	goto	i1l896
  1503  0182                     u4_20:
  1504  0182                     i1l890:
  1505                           
  1506                           ;mains1.c: 116:         ADC_analogvalue = ADRESH;
  1507  0182  081E               	movf	30,w	;volatile
  1508  0183  00F1               	movwf	??_isr
  1509  0184  0871               	movf	??_isr,w
  1510  0185  00F8               	movwf	_ADC_analogvalue
  1511  0186                     i1l892:
  1512                           
  1513                           ;mains1.c: 117:         ADC_cflag = 1;
  1514  0186  01F9               	clrf	_ADC_cflag
  1515  0187  0AF9               	incf	_ADC_cflag,f
  1516  0188                     i1l894:
  1517                           
  1518                           ;mains1.c: 118:         PIR1bits.ADIF = 0;
  1519  0188  130C               	bcf	12,6	;volatile
  1520  0189                     i1l896:
  1521                           
  1522                           ;mains1.c: 120:     if (SSPIF == 1) {
  1523  0189  1D8C               	btfss	12,3	;volatile
  1524  018A  298C               	goto	u5_21
  1525  018B  298D               	goto	u5_20
  1526  018C                     u5_21:
  1527  018C  299B               	goto	i1l75
  1528  018D                     u5_20:
  1529  018D                     i1l898:
  1530                           
  1531                           ;mains1.c: 121:         spiRead();
  1532  018D  120A  118A  21B8  120A  118A  	fcall	_spiRead
  1533                           
  1534                           ;mains1.c: 122:         spiWrite(ADC_analogvalue);
  1535  0192  0878               	movf	_ADC_analogvalue,w
  1536  0193  120A  118A  21C8  120A  118A  	fcall	_spiWrite
  1537  0198                     i1l900:
  1538                           
  1539                           ;mains1.c: 123:         SSPIF = 0;
  1540  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1542  019A  118C               	bcf	12,3	;volatile
  1543  019B                     i1l75:
  1544  019B  0873               	movf	??_isr+2,w
  1545  019C  008A               	movwf	10
  1546  019D  0E72               	swapf	??_isr+1,w
  1547  019E  0083               	movwf	3
  1548  019F  0EFE               	swapf	btemp,f
  1549  01A0  0E7E               	swapf	btemp,w
  1550  01A1  0009               	retfie
  1551  01A2                     __end_of_isr:
  1552                           
  1553                           	psect	intentry
  1554  0004                     __pintentry:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1557                           
  1558  0004                     interrupt_function:
  1559  007E                     saved_w	set	btemp
  1560  0004  00FE               	movwf	btemp
  1561  0005  0E03               	swapf	3,w
  1562  0006  00F2               	movwf	??_isr+1
  1563  0007  080A               	movf	10,w
  1564  0008  00F3               	movwf	??_isr+2
  1565  0009  120A  118A  297C   	ljmp	_isr
  1566                           
  1567                           	psect	text5
  1568  01C8                     __ptext5:	
  1569 ;; *************** function _spiWrite *****************
  1570 ;; Defined at:
  1571 ;;		line 34 in file "SPI.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  dat             1    wreg     unsigned char 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  dat             1    0[COMMON] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         0       0       0       0       0
  1586 ;;      Locals:         1       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0
  1588 ;;      Totals:         1       0       0       0       0
  1589 ;;Total ram usage:        1 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_isr
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _spiWrite
  1600  01C8                     _spiWrite:
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _spiWrite: [wreg]
  1604                           ;spiWrite@dat stored from wreg
  1605  01C8  00F0               	movwf	spiWrite@dat
  1606  01C9                     i1l870:
  1607                           
  1608                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1609  01C9  0870               	movf	spiWrite@dat,w
  1610  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1611  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1612  01CC  0093               	movwf	19	;volatile
  1613  01CD                     i1l150:
  1614  01CD  0008               	return
  1615  01CE                     __end_of_spiWrite:
  1616                           
  1617                           	psect	text6
  1618  01B8                     __ptext6:	
  1619 ;; *************** function _spiRead *****************
  1620 ;; Defined at:
  1621 ;;		line 47 in file "SPI.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0
  1638 ;;      Totals:         0       0       0       0       0
  1639 ;;Total ram usage:        0 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    1
  1642 ;; This function calls:
  1643 ;;		_spiReceiveWait
  1644 ;; This function is called by:
  1645 ;;		_isr
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function _spiRead
  1651  01B8                     _spiRead:
  1652  01B8                     i1l864:	
  1653                           ;incstack = 0
  1654                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1655                           
  1656                           
  1657                           ;SPI.c: 49:     spiReceiveWait();
  1658  01B8  120A  118A  21C1  120A  118A  	fcall	_spiReceiveWait
  1659  01BD                     i1l866:
  1660                           
  1661                           ;SPI.c: 50:     return(SSPBUF);;	Return value of _spiRead is never used
  1662  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1663  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1664  01BF  0813               	movf	19,w	;volatile
  1665  01C0                     i1l158:
  1666  01C0  0008               	return
  1667  01C1                     __end_of_spiRead:
  1668                           
  1669                           	psect	text7
  1670  01C1                     __ptext7:	
  1671 ;; *************** function _spiReceiveWait *****************
  1672 ;; Defined at:
  1673 ;;		line 29 in file "SPI.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		None
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0
  1690 ;;      Totals:         0       0       0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_spiRead
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _spiReceiveWait
  1702  01C1                     _spiReceiveWait:
  1703  01C1                     i1l760:	
  1704                           ;incstack = 0
  1705                           ; Regs used in _spiReceiveWait: []
  1706                           
  1707  01C1                     i1l144:	
  1708                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1709                           
  1710  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  1711  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  1712  01C3  1C14               	btfss	20,0	;volatile
  1713  01C4  29C6               	goto	u2_21
  1714  01C5  29C7               	goto	u2_20
  1715  01C6                     u2_21:
  1716  01C6  29C1               	goto	i1l144
  1717  01C7                     u2_20:
  1718  01C7                     i1l147:
  1719  01C7  0008               	return
  1720  01C8                     __end_of_spiReceiveWait:
  1721  007E                     btemp	set	126	;btemp
  1722  007E                     wtemp0	set	126
  1723                           
  1724                           	psect	config
  1725                           
  1726                           ;Config register CONFIG1 @ 0x2007
  1727                           ;	Oscillator Selection bits
  1728                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1729                           ;	Watchdog Timer Enable bit
  1730                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1731                           ;	Power-up Timer Enable bit
  1732                           ;	PWRTE = OFF, PWRT disabled
  1733                           ;	RE3/MCLR pin function select bit
  1734                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1735                           ;	Code Protection bit
  1736                           ;	CP = OFF, Program memory code protection is disabled
  1737                           ;	Data Code Protection bit
  1738                           ;	CPD = OFF, Data memory code protection is disabled
  1739                           ;	Brown Out Reset Selection bits
  1740                           ;	BOREN = ON, BOR enabled
  1741                           ;	Internal External Switchover bit
  1742                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1743                           ;	Fail-Safe Clock Monitor Enabled bit
  1744                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1745                           ;	Low Voltage Programming Enable bit
  1746                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1747                           ;	In-Circuit Debugger Mode bit
  1748                           ;	DEBUG = 0x1, unprogrammed default
  1749  2007                     	org	8199
  1750  2007  23F4               	dw	9204
  1751                           
  1752                           ;Config register CONFIG2 @ 0x2008
  1753                           ;	Brown-out Reset Selection bit
  1754                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1755                           ;	Flash Program Memory Self Write Enable bits
  1756                           ;	WRT = OFF, Write protection off
  1757  2008                     	org	8200
  1758  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_init
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_ADC_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     754
                                              2 BANK0      1     1      0
                           _ADC_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     394
                                              4 COMMON     4     1      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 18:47:11 2021

            _SSPSTATbits 0094                       l90 001D                       l91 0020  
                     l92 0023                       l68 0151                       l87 0017  
                     l89 001A                       u60 01AA                       u61 01A9  
                     u80 016C                       u81 016B                       u97 0170  
                    l120 00EA                      l121 00EF                      l113 00C9  
                    l122 00F4                      l123 00F9                      l115 00CD  
                    l124 011F                      l116 00D1                      l140 01B2  
                    l141 01B7                      l118 00E5                      l119 0116  
                    l990 01AA                      l992 01AC                      l994 01AE  
                    l996 01B1                      l988 01A3                      l998 0120  
                    _isr 017C                     l1000 0124                     l1010 0136  
                   l1002 0125                     l1020 013D                     l1012 0139  
                   l1004 012C                     l1030 0148                     l1022 013E  
                   l1014 013A                     l1006 012D                     l1200 0026  
                   l1024 013F                     l1016 013B                     l1008 012F  
                   l1210 0050                     l1202 003E                     l1026 0142  
                   l1018 013C                     l1220 0069                     l1212 0055  
                   l1204 0041                     l1028 0145                     l1230 0082  
                   l1222 006E                     l1214 005A                     l1206 0046  
                   l1232 0087                     l1224 0073                     l1216 005F  
                   l1208 004B                     l1234 008A                     l1226 0078  
                   l1218 0064                     l1242 00D5                     l1228 007D  
                   l1246 00FE                     l1238 008F                     l1270 0163  
                   l1360 0030                     l1272 0167                     l1264 0152  
                   l1362 0097                     l1274 016C                     l1266 0157  
                   l1364 00DD                     l1196 0016                     l1276 0174  
                   l1268 0161                     l1366 0108                     l1278 0175  
                   ?_isr 0070                     i1l75 019B                     _TMR0 0001  
                   u2_20 01C7                     u2_21 01C6                     u4_20 0182  
                   u4_21 0181                     u5_20 018D                     u5_21 018C  
                   _main 0152        ADC_init@Justified 0075                     btemp 007E  
                   start 000C         __end_of_ADC_init 0120                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l150 01CD  
                  i1l144 01C1                    i1l147 01C7                    i1l158 01C0  
                  i1l900 0198                    i1l760 01C1                    i1l870 01C9  
                  i1l864 01B8                    i1l866 01BD                    i1l890 0182  
                  i1l892 0186                    i1l894 0188                    i1l896 0189  
                  i1l888 017C                    i1l898 018D                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _SSPIF 0063  
                  _setup 0120                    pclath 000A          __end_of_spiInit 01B8  
        __end_of_spiRead 01C1                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 017C                   ??_main 0022  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013          ADC_init@ADCSbit 0077                   saved_w 007E  
       __end_of_spiWrite 01CE                ??_spiInit 0077                ?_ADC_init 0074  
              ??_spiRead 0070          ADC_init@Channel 0074  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 0152               ??_ADC_init 0020  
                ??_setup 0078               __pmaintext 0152               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                _ADC_cflag 0079  
              ?_spiWrite 0070                _ANSELbits 0188                  __ptext1 0120  
                __ptext2 01A2                  __ptext3 0015                  __ptext4 017C  
                __ptext5 01C8                  __ptext6 01B8                  __ptext7 01C1  
           __size_of_isr 0026                  _spiInit 01A2                  _spiRead 01B8  
   end_of_initialization 0011          _ADC_analogvalue 0078               ??_spiWrite 0070  
              _TRISAbits 0085                _TRISBbits 0086                _TRISCbits 0087  
            spiWrite@dat 0070        __size_of_ADC_init 010B             ADC_init@Vref 0076  
         _spiReceiveWait 01C1      start_initialization 000F              __end_of_isr 01A2  
 __end_of_spiReceiveWait 01C8              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0074                 _ADC_init 0015                 ?_spiRead 0070  
         __size_of_setup 0032     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of_spiInit 0016         __size_of_spiRead 0009            __size_of_main 002A  
               _spiWrite 01C8             spiInit@sType 0077        spiInit@sClockIdle 0075  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
