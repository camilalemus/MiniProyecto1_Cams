

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 17:55:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0013                     _SSPBUF	set	19
   364  0014                     _SSPCON	set	20
   365  001E                     _ADRESH	set	30
   366  000C                     _PIR1bits	set	12
   367  0008                     _PORTD	set	8
   368  0001                     _TMR0	set	1
   369  000B                     _INTCONbits	set	11
   370  001F                     _ADCON0bits	set	31
   371  0007                     _PORTC	set	7
   372  0094                     _SSPSTATbits	set	148
   373  0094                     _SSPSTAT	set	148
   374  009F                     _ADCON1bits	set	159
   375  008C                     _PIE1bits	set	140
   376  0096                     _IOCBbits	set	150
   377  0086                     _TRISBbits	set	134
   378  0086                     _TRISB	set	134
   379  0088                     _TRISD	set	136
   380  0087                     _TRISCbits	set	135
   381  0087                     _TRISC	set	135
   382  0085                     _TRISAbits	set	133
   383  0085                     _TRISA	set	133
   384  043B                     _TRISC3	set	1083
   385  043D                     _TRISC5	set	1085
   386  0188                     _ANSELbits	set	392
   387  0189                     _ANSELH	set	393
   388  0188                     _ANSEL	set	392
   389                           
   390                           	psect	cinit
   391  000F                     start_initialization:	
   392                           ; #config settings
   393                           
   394  000F                     __initialization:
   395                           
   396                           ; Clear objects allocated to COMMON
   397  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   398  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   399  0011                     end_of_initialization:	
   400                           ;End of C runtime variable initialization code
   401                           
   402  0011                     __end_of__initialization:
   403  0011  0183               	clrf	3
   404  0012  120A  118A  294E   	ljmp	_main	;jump to C main() function
   405                           
   406                           	psect	bssCOMMON
   407  0079                     __pbssCOMMON:
   408  0079                     _ADC_analogvalue:
   409  0079                     	ds	1
   410  007A                     _ADC_cflag:
   411  007A                     	ds	1
   412                           
   413                           	psect	cstackCOMMON
   414  0070                     __pcstackCOMMON:
   415  0070                     ?_setup:
   416  0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_isr:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ??_isr:	
   423                           ; 1 bytes @ 0x0
   424                           
   425                           
   426                           ; 1 bytes @ 0x0
   427  0070                     	ds	3
   428  0073                     ?_ADC_init:
   429  0073                     ?_spiInit:	
   430                           ; 1 bytes @ 0x3
   431                           
   432  0073                     ADC_init@Channel:	
   433                           ; 1 bytes @ 0x3
   434                           
   435  0073                     spiInit@sDataSample:	
   436                           ; 1 bytes @ 0x3
   437                           
   438                           
   439                           ; 1 bytes @ 0x3
   440  0073                     	ds	1
   441  0074                     ADC_init@Justified:
   442  0074                     spiInit@sClockIdle:	
   443                           ; 1 bytes @ 0x4
   444                           
   445                           
   446                           ; 1 bytes @ 0x4
   447  0074                     	ds	1
   448  0075                     ADC_init@Vref:
   449  0075                     spiInit@sTransmitEdge:	
   450                           ; 1 bytes @ 0x5
   451                           
   452                           
   453                           ; 1 bytes @ 0x5
   454  0075                     	ds	1
   455  0076                     ??_ADC_init:
   456  0076                     ??_spiInit:	
   457                           ; 1 bytes @ 0x6
   458                           
   459  0076                     spiInit@sType:	
   460                           ; 1 bytes @ 0x6
   461                           
   462                           
   463                           ; 1 bytes @ 0x6
   464  0076                     	ds	1
   465  0077                     ??_setup:
   466                           
   467                           ; 1 bytes @ 0x7
   468  0077                     	ds	1
   469  0078                     ADC_init@ADCSbit:
   470                           
   471                           ; 1 bytes @ 0x8
   472  0078                     	ds	1
   473                           
   474                           	psect	cstackBANK0
   475  0020                     __pcstackBANK0:
   476  0020                     ??_main:
   477                           
   478                           ; 1 bytes @ 0x0
   479  0020                     	ds	1
   480                           
   481                           	psect	maintext
   482  014E                     __pmaintext:	
   483 ;;
   484 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   485 ;;
   486 ;; *************** function _main *****************
   487 ;; Defined at:
   488 ;;		line 55 in file "mains1.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : B00/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          0       1       0       0       0
   505 ;;      Totals:         0       1       0       0       0
   506 ;;Total ram usage:        1 bytes
   507 ;; Hardware stack levels required when called:    3
   508 ;; This function calls:
   509 ;;		_ADC_init
   510 ;;		_setup
   511 ;; This function is called by:
   512 ;;		Startup code after reset
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function _main
   518  014E                     _main:
   519  014E                     l1183:	
   520                           ;incstack = 0
   521                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   522                           
   523                           
   524                           ;mains1.c: 56:     setup();
   525  014E  120A  118A  211C  120A  118A  	fcall	_setup
   526  0153                     l1185:
   527                           
   528                           ;mains1.c: 57:     ADC_init(1, 0, 0, 1);
   529  0153  01F3               	clrf	ADC_init@Channel
   530  0154  01F4               	clrf	ADC_init@Justified
   531  0155  01F5               	clrf	ADC_init@Vref
   532  0156  0AF5               	incf	ADC_init@Vref,f
   533  0157  3001               	movlw	1
   534  0158  120A  118A  2015  120A  118A  	fcall	_ADC_init
   535  015D                     l1187:
   536                           
   537                           ;mains1.c: 59:     ADC_cflag = 1;
   538  015D  01FA               	clrf	_ADC_cflag
   539  015E  0AFA               	incf	_ADC_cflag,f
   540  015F                     l1189:
   541                           
   542                           ;mains1.c: 61:         PORTC = ADC_analogvalue;
   543  015F  0879               	movf	_ADC_analogvalue,w
   544  0160  1283               	bcf	3,5	;RP0=0, select bank0
   545  0161  1303               	bcf	3,6	;RP1=0, select bank0
   546  0162  0087               	movwf	7	;volatile
   547  0163                     l1191:
   548                           
   549                           ;mains1.c: 62:         if (ADC_cflag == 1) {
   550  0163  037A               	decf	_ADC_cflag,w
   551  0164  1D03               	btfss	3,2
   552  0165  2967               	goto	u71
   553  0166  2968               	goto	u70
   554  0167                     u71:
   555  0167  295F               	goto	l1189
   556  0168                     u70:
   557  0168                     l1193:
   558                           
   559                           ;mains1.c: 63:             _delay((unsigned long)((500)*((8000000)/4000000.0)));
   560  0168  30C7               	movlw	199
   561  0169  1283               	bcf	3,5	;RP0=0, select bank0
   562  016A  1303               	bcf	3,6	;RP1=0, select bank0
   563  016B  00A0               	movwf	??_main
   564  016C                     u87:
   565  016C  296D               	nop2
   566  016D  0BA0               	decfsz	??_main,f
   567  016E  296C               	goto	u87
   568  016F  2970               	nop2
   569  0170                     l1195:
   570                           
   571                           ;mains1.c: 64:             ADC_cflag = 0;
   572  0170  01FA               	clrf	_ADC_cflag
   573  0171                     l1197:
   574                           
   575                           ;mains1.c: 65:             ADCON0bits.GO = 1;
   576  0171  1283               	bcf	3,5	;RP0=0, select bank0
   577  0172  1303               	bcf	3,6	;RP1=0, select bank0
   578  0173  149F               	bsf	31,1	;volatile
   579  0174  295F               	goto	l1189
   580  0175  120A  118A  280C   	ljmp	start
   581  0178                     __end_of_main:
   582                           
   583                           	psect	text1
   584  011C                     __ptext1:	
   585 ;; *************** function _setup *****************
   586 ;; Defined at:
   587 ;;		line 74 in file "mains1.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    2
   608 ;; This function calls:
   609 ;;		_spiInit
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _setup
   617  011C                     _setup:
   618  011C                     l985:	
   619                           ;incstack = 0
   620                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   621                           
   622                           
   623                           ;mains1.c: 76:     ANSEL = 0;
   624  011C  1683               	bsf	3,5	;RP0=1, select bank3
   625  011D  1703               	bsf	3,6	;RP1=1, select bank3
   626  011E  0188               	clrf	8	;volatile
   627                           
   628                           ;mains1.c: 77:     ANSELH = 0;
   629  011F  0189               	clrf	9	;volatile
   630  0120                     l987:
   631                           
   632                           ;mains1.c: 78:     ANSELbits.ANS0 = 1;
   633  0120  1408               	bsf	8,0	;volatile
   634  0121                     l989:
   635                           
   636                           ;mains1.c: 80:     INTCONbits.GIE = 1;
   637  0121  178B               	bsf	11,7	;volatile
   638                           
   639                           ;mains1.c: 81:     TMR0 = 0;
   640  0122  1283               	bcf	3,5	;RP0=0, select bank0
   641  0123  1303               	bcf	3,6	;RP1=0, select bank0
   642  0124  0181               	clrf	1	;volatile
   643                           
   644                           ;mains1.c: 82:     TRISA = 0;
   645  0125  1683               	bsf	3,5	;RP0=1, select bank1
   646  0126  1303               	bcf	3,6	;RP1=0, select bank1
   647  0127  0185               	clrf	5	;volatile
   648  0128                     l991:
   649                           
   650                           ;mains1.c: 83:     TRISAbits.TRISA0 = 1;
   651  0128  1405               	bsf	5,0	;volatile
   652  0129                     l993:
   653                           
   654                           ;mains1.c: 84:     TRISAbits.TRISA5 = 1;
   655  0129  1685               	bsf	5,5	;volatile
   656                           
   657                           ;mains1.c: 85:     TRISC = 0;
   658  012A  0187               	clrf	7	;volatile
   659  012B                     l995:
   660                           
   661                           ;mains1.c: 86:     TRISCbits.TRISC4 = 1;
   662  012B  1607               	bsf	7,4	;volatile
   663                           
   664                           ;mains1.c: 87:     TRISD = 0;
   665  012C  0188               	clrf	8	;volatile
   666                           
   667                           ;mains1.c: 88:     TRISB = 0;
   668  012D  0186               	clrf	6	;volatile
   669                           
   670                           ;mains1.c: 89:     PORTC = 0;
   671  012E  1283               	bcf	3,5	;RP0=0, select bank0
   672  012F  1303               	bcf	3,6	;RP1=0, select bank0
   673  0130  0187               	clrf	7	;volatile
   674                           
   675                           ;mains1.c: 90:     PORTD = 0;
   676  0131  0188               	clrf	8	;volatile
   677  0132                     l997:
   678                           
   679                           ;mains1.c: 91:     TRISBbits.TRISB1 = 1;
   680  0132  1683               	bsf	3,5	;RP0=1, select bank1
   681  0133  1303               	bcf	3,6	;RP1=0, select bank1
   682  0134  1486               	bsf	6,1	;volatile
   683  0135                     l999:
   684                           
   685                           ;mains1.c: 92:     TRISBbits.TRISB0 = 1;
   686  0135  1406               	bsf	6,0	;volatile
   687  0136                     l1001:
   688                           
   689                           ;mains1.c: 93:     INTCONbits.PEIE = 1;
   690  0136  170B               	bsf	11,6	;volatile
   691  0137                     l1003:
   692                           
   693                           ;mains1.c: 94:     INTCONbits.RBIE = 1;
   694  0137  158B               	bsf	11,3	;volatile
   695  0138                     l1005:
   696                           
   697                           ;mains1.c: 95:     IOCBbits.IOCB0 = 1;
   698  0138  1416               	bsf	22,0	;volatile
   699  0139                     l1007:
   700                           
   701                           ;mains1.c: 96:     IOCBbits.IOCB1 = 1;
   702  0139  1496               	bsf	22,1	;volatile
   703  013A                     l1009:
   704                           
   705                           ;mains1.c: 97:     INTCONbits.RBIF = 0;
   706  013A  100B               	bcf	11,0	;volatile
   707  013B                     l1011:
   708                           
   709                           ;mains1.c: 99:     PIR1bits.ADIF = 0;
   710  013B  1283               	bcf	3,5	;RP0=0, select bank0
   711  013C  1303               	bcf	3,6	;RP1=0, select bank0
   712  013D  130C               	bcf	12,6	;volatile
   713  013E                     l1013:
   714                           
   715                           ;mains1.c: 100:     PIE1bits.ADIE = 1;
   716  013E  1683               	bsf	3,5	;RP0=1, select bank1
   717  013F  1303               	bcf	3,6	;RP1=0, select bank1
   718  0140  170C               	bsf	12,6	;volatile
   719  0141                     l1015:
   720                           
   721                           ;mains1.c: 101:     ADCON0bits.ADON = 1;
   722  0141  1283               	bcf	3,5	;RP0=0, select bank0
   723  0142  1303               	bcf	3,6	;RP1=0, select bank0
   724  0143  141F               	bsf	31,0	;volatile
   725  0144                     l1017:
   726                           
   727                           ;mains1.c: 103:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   728  0144  01F3               	clrf	spiInit@sDataSample
   729  0145  01F4               	clrf	spiInit@sClockIdle
   730  0146  01F5               	clrf	spiInit@sTransmitEdge
   731  0147  3024               	movlw	36
   732  0148  120A  118A  2178  120A  118A  	fcall	_spiInit
   733  014D                     l62:
   734  014D  0008               	return
   735  014E                     __end_of_setup:
   736                           
   737                           	psect	text2
   738  0178                     __ptext2:	
   739 ;; *************** function _spiInit *****************
   740 ;; Defined at:
   741 ;;		line 12 in file "SPI.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  sType           1    wreg     enum E1264
   744 ;;  sDataSample     1    3[COMMON] enum E1272
   745 ;;  sClockIdle      1    4[COMMON] enum E1276
   746 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  sType           1    6[COMMON] enum E1264
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         3       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         4       0       0       0       0
   762 ;;Total ram usage:        4 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_setup
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _spiInit
   774  0178                     _spiInit:
   775                           
   776                           ;incstack = 0
   777                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   778                           ;spiInit@sType stored from wreg
   779  0178  00F6               	movwf	spiInit@sType
   780  0179                     l975:
   781                           
   782                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   783  0179  1683               	bsf	3,5	;RP0=1, select bank1
   784  017A  1303               	bcf	3,6	;RP1=0, select bank1
   785  017B  1287               	bcf	7,5	;volatile
   786                           
   787                           ;SPI.c: 15:     if(sType & 0b00000100)
   788  017C  1D76               	btfss	spiInit@sType,2
   789  017D  297F               	goto	u51
   790  017E  2980               	goto	u50
   791  017F                     u51:
   792  017F  2984               	goto	l981
   793  0180                     u50:
   794  0180                     l977:
   795                           
   796                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   797  0180  0875               	movf	spiInit@sTransmitEdge,w
   798  0181  0094               	movwf	20	;volatile
   799  0182                     l979:
   800                           
   801                           ;SPI.c: 18:         TRISC3 = 1;
   802  0182  1587               	bsf	7,3	;volatile
   803                           
   804                           ;SPI.c: 19:     }
   805  0183  2988               	goto	l133
   806  0184                     l981:
   807                           
   808                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   809  0184  0873               	movf	spiInit@sDataSample,w
   810  0185  0475               	iorwf	spiInit@sTransmitEdge,w
   811  0186  0094               	movwf	20	;volatile
   812  0187                     l983:
   813                           
   814                           ;SPI.c: 23:         TRISC3 = 0;
   815  0187  1187               	bcf	7,3	;volatile
   816  0188                     l133:	
   817                           ;SPI.c: 24:     }
   818                           
   819                           
   820                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   821  0188  0876               	movf	spiInit@sType,w
   822  0189  0474               	iorwf	spiInit@sClockIdle,w
   823  018A  1283               	bcf	3,5	;RP0=0, select bank0
   824  018B  1303               	bcf	3,6	;RP1=0, select bank0
   825  018C  0094               	movwf	20	;volatile
   826  018D                     l134:
   827  018D  0008               	return
   828  018E                     __end_of_spiInit:
   829                           
   830                           	psect	text3
   831  0015                     __ptext3:	
   832 ;; *************** function _ADC_init *****************
   833 ;; Defined at:
   834 ;;		line 3 in file "ADC.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  ADCSbit         1    wreg     unsigned char 
   837 ;;  Channel         1    3[COMMON] unsigned char 
   838 ;;  Justified       1    4[COMMON] unsigned char 
   839 ;;  Vref            1    5[COMMON] unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  ADCSbit         1    8[COMMON] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         3       0       0       0       0
   852 ;;      Locals:         1       0       0       0       0
   853 ;;      Temps:          2       0       0       0       0
   854 ;;      Totals:         6       0       0       0       0
   855 ;;Total ram usage:        6 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    1
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _ADC_init
   867  0015                     _ADC_init:
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
   871                           ;ADC_init@ADCSbit stored from wreg
   872  0015  00F8               	movwf	ADC_init@ADCSbit
   873  0016                     l1019:
   874                           
   875                           ;ADC.c: 5:     switch (ADCSbit){
   876  0016  2830               	goto	l1023
   877  0017                     l80:	
   878                           ;ADC.c: 6:         case 0:
   879                           
   880                           
   881                           ;ADC.c: 7:             ADCON0bits.ADCS1 = 0;
   882  0017  1283               	bcf	3,5	;RP0=0, select bank0
   883  0018  1303               	bcf	3,6	;RP1=0, select bank0
   884  0019  139F               	bcf	31,7	;volatile
   885                           
   886                           ;ADC.c: 8:             ADCON0bits.ADCS0 = 0;
   887  001A  131F               	bcf	31,6	;volatile
   888                           
   889                           ;ADC.c: 9:             break;
   890  001B  2897               	goto	l1061
   891  001C                     l82:	
   892                           ;ADC.c: 10:         case 1:
   893                           
   894                           
   895                           ;ADC.c: 11:             ADCON0bits.ADCS1 = 0;
   896  001C  1283               	bcf	3,5	;RP0=0, select bank0
   897  001D  1303               	bcf	3,6	;RP1=0, select bank0
   898  001E  139F               	bcf	31,7	;volatile
   899                           
   900                           ;ADC.c: 12:             ADCON0bits.ADCS0 = 1;
   901  001F  171F               	bsf	31,6	;volatile
   902                           
   903                           ;ADC.c: 13:             break;
   904  0020  2897               	goto	l1061
   905  0021                     l83:	
   906                           ;ADC.c: 14:         case 2:
   907                           
   908                           
   909                           ;ADC.c: 15:             ADCON0bits.ADCS1 = 1;
   910  0021  1283               	bcf	3,5	;RP0=0, select bank0
   911  0022  1303               	bcf	3,6	;RP1=0, select bank0
   912  0023  179F               	bsf	31,7	;volatile
   913                           
   914                           ;ADC.c: 16:             ADCON0bits.ADCS0 = 0;
   915  0024  131F               	bcf	31,6	;volatile
   916                           
   917                           ;ADC.c: 17:             break;
   918  0025  2897               	goto	l1061
   919  0026                     l84:	
   920                           ;ADC.c: 18:         case 3:
   921                           
   922                           
   923                           ;ADC.c: 19:             ADCON0bits.ADCS1 = 1;
   924  0026  1283               	bcf	3,5	;RP0=0, select bank0
   925  0027  1303               	bcf	3,6	;RP1=0, select bank0
   926  0028  179F               	bsf	31,7	;volatile
   927                           
   928                           ;ADC.c: 20:             ADCON0bits.ADCS0 = 1;
   929  0029  171F               	bsf	31,6	;volatile
   930                           
   931                           ;ADC.c: 21:             break;
   932  002A  2897               	goto	l1061
   933  002B                     l85:	
   934                           ;ADC.c: 22:         default:
   935                           
   936                           
   937                           ;ADC.c: 23:             ADCON0bits.ADCS1 = 0;
   938  002B  1283               	bcf	3,5	;RP0=0, select bank0
   939  002C  1303               	bcf	3,6	;RP1=0, select bank0
   940  002D  139F               	bcf	31,7	;volatile
   941                           
   942                           ;ADC.c: 24:             ADCON0bits.ADCS0 = 1;
   943  002E  171F               	bsf	31,6	;volatile
   944                           
   945                           ;ADC.c: 25:             break;
   946  002F  2897               	goto	l1061
   947  0030                     l1023:
   948  0030  0878               	movf	ADC_init@ADCSbit,w
   949  0031  00F6               	movwf	??_ADC_init
   950  0032  01F7               	clrf	??_ADC_init+1
   951                           
   952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   953                           ; Switch size 1, requested type "simple"
   954                           ; Number of cases is 1, Range of values is 0 to 0
   955                           ; switch strategies available:
   956                           ; Name         Instructions Cycles
   957                           ; simple_byte            4     3 (average)
   958                           ; direct_byte           11     8 (fixed)
   959                           ; jumptable            260     6 (fixed)
   960                           ;	Chosen strategy is simple_byte
   961  0033  0877               	movf	??_ADC_init+1,w
   962  0034  3A00               	xorlw	0	; case 0
   963  0035  1903               	skipnz
   964  0036  2838               	goto	l1279
   965  0037  282B               	goto	l85
   966  0038                     l1279:
   967                           
   968                           ; Switch size 1, requested type "simple"
   969                           ; Number of cases is 4, Range of values is 0 to 3
   970                           ; switch strategies available:
   971                           ; Name         Instructions Cycles
   972                           ; simple_byte           13     7 (average)
   973                           ; direct_byte           20     8 (fixed)
   974                           ; jumptable            260     6 (fixed)
   975                           ;	Chosen strategy is simple_byte
   976  0038  0876               	movf	??_ADC_init,w
   977  0039  3A00               	xorlw	0	; case 0
   978  003A  1903               	skipnz
   979  003B  2817               	goto	l80
   980  003C  3A01               	xorlw	1	; case 1
   981  003D  1903               	skipnz
   982  003E  281C               	goto	l82
   983  003F  3A03               	xorlw	3	; case 2
   984  0040  1903               	skipnz
   985  0041  2821               	goto	l83
   986  0042  3A01               	xorlw	1	; case 3
   987  0043  1903               	skipnz
   988  0044  2826               	goto	l84
   989  0045  282B               	goto	l85
   990  0046                     l1025:
   991                           
   992                           ;ADC.c: 30:             ADCON0bits.CHS = 0b0000;
   993  0046  30C3               	movlw	-61
   994  0047  059F               	andwf	31,f	;volatile
   995                           
   996                           ;ADC.c: 31:             break;
   997  0048  28DD               	goto	l1065
   998  0049                     l1027:
   999                           
  1000                           ;ADC.c: 33:             ADCON0bits.CHS = 0b0001;
  1001  0049  081F               	movf	31,w	;volatile
  1002  004A  39C3               	andlw	-61
  1003  004B  3804               	iorlw	4
  1004  004C  009F               	movwf	31	;volatile
  1005                           
  1006                           ;ADC.c: 34:             break;
  1007  004D  28DD               	goto	l1065
  1008  004E                     l1029:
  1009                           
  1010                           ;ADC.c: 36:             ADCON0bits.CHS = 0b0010;
  1011  004E  081F               	movf	31,w	;volatile
  1012  004F  39C3               	andlw	-61
  1013  0050  3808               	iorlw	8
  1014  0051  009F               	movwf	31	;volatile
  1015                           
  1016                           ;ADC.c: 37:             break;
  1017  0052  28DD               	goto	l1065
  1018  0053                     l1031:
  1019                           
  1020                           ;ADC.c: 39:             ADCON0bits.CHS = 0b0011;
  1021  0053  081F               	movf	31,w	;volatile
  1022  0054  39C3               	andlw	-61
  1023  0055  380C               	iorlw	12
  1024  0056  009F               	movwf	31	;volatile
  1025                           
  1026                           ;ADC.c: 40:             break;
  1027  0057  28DD               	goto	l1065
  1028  0058                     l1033:
  1029                           
  1030                           ;ADC.c: 42:             ADCON0bits.CHS = 0b0100;
  1031  0058  081F               	movf	31,w	;volatile
  1032  0059  39C3               	andlw	-61
  1033  005A  3810               	iorlw	16
  1034  005B  009F               	movwf	31	;volatile
  1035                           
  1036                           ;ADC.c: 43:             break;
  1037  005C  28DD               	goto	l1065
  1038  005D                     l1035:
  1039                           
  1040                           ;ADC.c: 45:             ADCON0bits.CHS = 0b0101;
  1041  005D  081F               	movf	31,w	;volatile
  1042  005E  39C3               	andlw	-61
  1043  005F  3814               	iorlw	20
  1044  0060  009F               	movwf	31	;volatile
  1045                           
  1046                           ;ADC.c: 46:             break;
  1047  0061  28DD               	goto	l1065
  1048  0062                     l1037:
  1049                           
  1050                           ;ADC.c: 48:             ADCON0bits.CHS = 0b0110;
  1051  0062  081F               	movf	31,w	;volatile
  1052  0063  39C3               	andlw	-61
  1053  0064  3818               	iorlw	24
  1054  0065  009F               	movwf	31	;volatile
  1055                           
  1056                           ;ADC.c: 49:             break;
  1057  0066  28DD               	goto	l1065
  1058  0067                     l1039:
  1059                           
  1060                           ;ADC.c: 51:             ADCON0bits.CHS = 0b0111;
  1061  0067  081F               	movf	31,w	;volatile
  1062  0068  39C3               	andlw	-61
  1063  0069  381C               	iorlw	28
  1064  006A  009F               	movwf	31	;volatile
  1065                           
  1066                           ;ADC.c: 52:             break;
  1067  006B  28DD               	goto	l1065
  1068  006C                     l1041:
  1069                           
  1070                           ;ADC.c: 54:             ADCON0bits.CHS = 0b1000;
  1071  006C  081F               	movf	31,w	;volatile
  1072  006D  39C3               	andlw	-61
  1073  006E  3820               	iorlw	32
  1074  006F  009F               	movwf	31	;volatile
  1075                           
  1076                           ;ADC.c: 55:             break;
  1077  0070  28DD               	goto	l1065
  1078  0071                     l1043:
  1079                           
  1080                           ;ADC.c: 57:             ADCON0bits.CHS = 0b1001;
  1081  0071  081F               	movf	31,w	;volatile
  1082  0072  39C3               	andlw	-61
  1083  0073  3824               	iorlw	36
  1084  0074  009F               	movwf	31	;volatile
  1085                           
  1086                           ;ADC.c: 58:             break;
  1087  0075  28DD               	goto	l1065
  1088  0076                     l1045:
  1089                           
  1090                           ;ADC.c: 60:             ADCON0bits.CHS = 0b1010;
  1091  0076  081F               	movf	31,w	;volatile
  1092  0077  39C3               	andlw	-61
  1093  0078  3828               	iorlw	40
  1094  0079  009F               	movwf	31	;volatile
  1095                           
  1096                           ;ADC.c: 61:             break;
  1097  007A  28DD               	goto	l1065
  1098  007B                     l1047:
  1099                           
  1100                           ;ADC.c: 63:             ADCON0bits.CHS = 0b1011;
  1101  007B  081F               	movf	31,w	;volatile
  1102  007C  39C3               	andlw	-61
  1103  007D  382C               	iorlw	44
  1104  007E  009F               	movwf	31	;volatile
  1105                           
  1106                           ;ADC.c: 64:             break;
  1107  007F  28DD               	goto	l1065
  1108  0080                     l1049:
  1109                           
  1110                           ;ADC.c: 66:             ADCON0bits.CHS = 0b1100;
  1111  0080  081F               	movf	31,w	;volatile
  1112  0081  39C3               	andlw	-61
  1113  0082  3830               	iorlw	48
  1114  0083  009F               	movwf	31	;volatile
  1115                           
  1116                           ;ADC.c: 67:             break;
  1117  0084  28DD               	goto	l1065
  1118  0085                     l1051:
  1119                           
  1120                           ;ADC.c: 69:             ADCON0bits.CHS = 0b1101;
  1121  0085  081F               	movf	31,w	;volatile
  1122  0086  39C3               	andlw	-61
  1123  0087  3834               	iorlw	52
  1124  0088  009F               	movwf	31	;volatile
  1125                           
  1126                           ;ADC.c: 70:             break;
  1127  0089  28DD               	goto	l1065
  1128  008A                     l1053:
  1129                           
  1130                           ;ADC.c: 72:             ADCON0bits.CHS = 0b1110;
  1131  008A  081F               	movf	31,w	;volatile
  1132  008B  39C3               	andlw	-61
  1133  008C  3838               	iorlw	56
  1134  008D  009F               	movwf	31	;volatile
  1135                           
  1136                           ;ADC.c: 73:             break;
  1137  008E  28DD               	goto	l1065
  1138  008F                     l1055:
  1139                           
  1140                           ;ADC.c: 75:             ADCON0bits.CHS = 0b1111;
  1141  008F  303C               	movlw	60
  1142  0090  049F               	iorwf	31,f	;volatile
  1143                           
  1144                           ;ADC.c: 76:             break;
  1145  0091  28DD               	goto	l1065
  1146  0092                     l1057:
  1147                           
  1148                           ;ADC.c: 78:             ADCON0bits.CHS = 0b0010;
  1149  0092  081F               	movf	31,w	;volatile
  1150  0093  39C3               	andlw	-61
  1151  0094  3808               	iorlw	8
  1152  0095  009F               	movwf	31	;volatile
  1153                           
  1154                           ;ADC.c: 79:             break;
  1155  0096  28DD               	goto	l1065
  1156  0097                     l1061:
  1157  0097  0873               	movf	ADC_init@Channel,w
  1158  0098  00F6               	movwf	??_ADC_init
  1159  0099  01F7               	clrf	??_ADC_init+1
  1160                           
  1161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1162                           ; Switch size 1, requested type "simple"
  1163                           ; Number of cases is 1, Range of values is 0 to 0
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte            4     3 (average)
  1167                           ; direct_byte           11     8 (fixed)
  1168                           ; jumptable            260     6 (fixed)
  1169                           ;	Chosen strategy is simple_byte
  1170  009A  0877               	movf	??_ADC_init+1,w
  1171  009B  3A00               	xorlw	0	; case 0
  1172  009C  1903               	skipnz
  1173  009D  289F               	goto	l1281
  1174  009E  2892               	goto	l1057
  1175  009F                     l1281:
  1176                           
  1177                           ; Switch size 1, requested type "simple"
  1178                           ; Number of cases is 16, Range of values is 0 to 15
  1179                           ; switch strategies available:
  1180                           ; Name         Instructions Cycles
  1181                           ; simple_byte           49    25 (average)
  1182                           ; direct_byte           56     8 (fixed)
  1183                           ; jumptable            260     6 (fixed)
  1184                           ;	Chosen strategy is simple_byte
  1185  009F  0876               	movf	??_ADC_init,w
  1186  00A0  3A00               	xorlw	0	; case 0
  1187  00A1  1903               	skipnz
  1188  00A2  2846               	goto	l1025
  1189  00A3  3A01               	xorlw	1	; case 1
  1190  00A4  1903               	skipnz
  1191  00A5  2849               	goto	l1027
  1192  00A6  3A03               	xorlw	3	; case 2
  1193  00A7  1903               	skipnz
  1194  00A8  284E               	goto	l1029
  1195  00A9  3A01               	xorlw	1	; case 3
  1196  00AA  1903               	skipnz
  1197  00AB  2853               	goto	l1031
  1198  00AC  3A07               	xorlw	7	; case 4
  1199  00AD  1903               	skipnz
  1200  00AE  2858               	goto	l1033
  1201  00AF  3A01               	xorlw	1	; case 5
  1202  00B0  1903               	skipnz
  1203  00B1  285D               	goto	l1035
  1204  00B2  3A03               	xorlw	3	; case 6
  1205  00B3  1903               	skipnz
  1206  00B4  2862               	goto	l1037
  1207  00B5  3A01               	xorlw	1	; case 7
  1208  00B6  1903               	skipnz
  1209  00B7  2867               	goto	l1039
  1210  00B8  3A0F               	xorlw	15	; case 8
  1211  00B9  1903               	skipnz
  1212  00BA  286C               	goto	l1041
  1213  00BB  3A01               	xorlw	1	; case 9
  1214  00BC  1903               	skipnz
  1215  00BD  2871               	goto	l1043
  1216  00BE  3A03               	xorlw	3	; case 10
  1217  00BF  1903               	skipnz
  1218  00C0  2876               	goto	l1045
  1219  00C1  3A01               	xorlw	1	; case 11
  1220  00C2  1903               	skipnz
  1221  00C3  287B               	goto	l1047
  1222  00C4  3A07               	xorlw	7	; case 12
  1223  00C5  1903               	skipnz
  1224  00C6  2880               	goto	l1049
  1225  00C7  3A01               	xorlw	1	; case 13
  1226  00C8  1903               	skipnz
  1227  00C9  2885               	goto	l1051
  1228  00CA  3A03               	xorlw	3	; case 14
  1229  00CB  1903               	skipnz
  1230  00CC  288A               	goto	l1053
  1231  00CD  3A01               	xorlw	1	; case 15
  1232  00CE  1903               	skipnz
  1233  00CF  288F               	goto	l1055
  1234  00D0  2892               	goto	l1057
  1235  00D1                     l106:	
  1236                           ;ADC.c: 83:         case 0:
  1237                           
  1238                           
  1239                           ;ADC.c: 84:             ADCON1bits.ADFM = 0;
  1240  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1241  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1242  00D3  139F               	bcf	31,7	;volatile
  1243                           
  1244                           ;ADC.c: 85:             break;
  1245  00D4  28FC               	goto	l1069
  1246  00D5                     l108:	
  1247                           ;ADC.c: 86:         case 1:
  1248                           
  1249                           
  1250                           ;ADC.c: 87:             ADCON1bits.ADFM = 1;
  1251  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1252  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1253  00D7  179F               	bsf	31,7	;volatile
  1254                           
  1255                           ;ADC.c: 88:             break;
  1256  00D8  28FC               	goto	l1069
  1257  00D9                     l109:	
  1258                           ;ADC.c: 89:         default:
  1259                           
  1260                           
  1261                           ;ADC.c: 90:             ADCON1bits.ADFM = 0;
  1262  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1263  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1264  00DB  139F               	bcf	31,7	;volatile
  1265                           
  1266                           ;ADC.c: 91:             break;
  1267  00DC  28FC               	goto	l1069
  1268  00DD                     l1065:
  1269  00DD  0874               	movf	ADC_init@Justified,w
  1270  00DE  00F6               	movwf	??_ADC_init
  1271  00DF  01F7               	clrf	??_ADC_init+1
  1272                           
  1273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1274                           ; Switch size 1, requested type "simple"
  1275                           ; Number of cases is 1, Range of values is 0 to 0
  1276                           ; switch strategies available:
  1277                           ; Name         Instructions Cycles
  1278                           ; simple_byte            4     3 (average)
  1279                           ; direct_byte           11     8 (fixed)
  1280                           ; jumptable            260     6 (fixed)
  1281                           ;	Chosen strategy is simple_byte
  1282  00E0  0877               	movf	??_ADC_init+1,w
  1283  00E1  3A00               	xorlw	0	; case 0
  1284  00E2  1903               	skipnz
  1285  00E3  28E5               	goto	l1283
  1286  00E4  28D9               	goto	l109
  1287  00E5                     l1283:
  1288                           
  1289                           ; Switch size 1, requested type "simple"
  1290                           ; Number of cases is 2, Range of values is 0 to 1
  1291                           ; switch strategies available:
  1292                           ; Name         Instructions Cycles
  1293                           ; simple_byte            7     4 (average)
  1294                           ; direct_byte           14     8 (fixed)
  1295                           ; jumptable            260     6 (fixed)
  1296                           ;	Chosen strategy is simple_byte
  1297  00E5  0876               	movf	??_ADC_init,w
  1298  00E6  3A00               	xorlw	0	; case 0
  1299  00E7  1903               	skipnz
  1300  00E8  28D1               	goto	l106
  1301  00E9  3A01               	xorlw	1	; case 1
  1302  00EA  1903               	skipnz
  1303  00EB  28D5               	goto	l108
  1304  00EC  28D9               	goto	l109
  1305  00ED                     l111:	
  1306                           ;ADC.c: 95:         case 1:
  1307                           
  1308                           
  1309                           ;ADC.c: 96:             ADCON1bits.VCFG1 = 0;
  1310  00ED  129F               	bcf	31,5	;volatile
  1311                           
  1312                           ;ADC.c: 97:             ADCON1bits.VCFG0 = 0;
  1313  00EE  121F               	bcf	31,4	;volatile
  1314                           
  1315                           ;ADC.c: 98:             break;
  1316  00EF  2912               	goto	l112
  1317  00F0                     l113:	
  1318                           ;ADC.c: 99:         case 2:
  1319                           
  1320                           
  1321                           ;ADC.c: 100:             ADCON1bits.VCFG1 = 0;
  1322  00F0  129F               	bcf	31,5	;volatile
  1323                           
  1324                           ;ADC.c: 101:             ADCON1bits.VCFG0 = 1;
  1325  00F1  161F               	bsf	31,4	;volatile
  1326                           
  1327                           ;ADC.c: 102:             break;
  1328  00F2  2912               	goto	l112
  1329  00F3                     l114:	
  1330                           ;ADC.c: 103:         case 3:
  1331                           
  1332                           
  1333                           ;ADC.c: 104:             ADCON1bits.VCFG1 = 1;
  1334  00F3  169F               	bsf	31,5	;volatile
  1335                           
  1336                           ;ADC.c: 105:             ADCON1bits.VCFG0 = 0;
  1337  00F4  121F               	bcf	31,4	;volatile
  1338                           
  1339                           ;ADC.c: 106:             break;
  1340  00F5  2912               	goto	l112
  1341  00F6                     l115:	
  1342                           ;ADC.c: 107:         case 4:
  1343                           
  1344                           
  1345                           ;ADC.c: 108:             ADCON1bits.VCFG1 = 1;
  1346  00F6  169F               	bsf	31,5	;volatile
  1347                           
  1348                           ;ADC.c: 109:             ADCON1bits.VCFG0 = 1;
  1349  00F7  161F               	bsf	31,4	;volatile
  1350                           
  1351                           ;ADC.c: 110:             break;
  1352  00F8  2912               	goto	l112
  1353  00F9                     l116:	
  1354                           ;ADC.c: 111:         default:
  1355                           
  1356                           
  1357                           ;ADC.c: 112:             ADCON1bits.VCFG1 = 0;
  1358  00F9  129F               	bcf	31,5	;volatile
  1359                           
  1360                           ;ADC.c: 113:             ADCON1bits.VCFG0 = 0;
  1361  00FA  121F               	bcf	31,4	;volatile
  1362                           
  1363                           ;ADC.c: 114:             break;
  1364  00FB  2912               	goto	l112
  1365  00FC                     l1069:
  1366  00FC  0875               	movf	ADC_init@Vref,w
  1367  00FD  00F6               	movwf	??_ADC_init
  1368  00FE  01F7               	clrf	??_ADC_init+1
  1369                           
  1370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1371                           ; Switch size 1, requested type "simple"
  1372                           ; Number of cases is 1, Range of values is 0 to 0
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte            4     3 (average)
  1376                           ; direct_byte           11     8 (fixed)
  1377                           ; jumptable            260     6 (fixed)
  1378                           ;	Chosen strategy is simple_byte
  1379  00FF  0877               	movf	??_ADC_init+1,w
  1380  0100  3A00               	xorlw	0	; case 0
  1381  0101  1903               	skipnz
  1382  0102  2904               	goto	l1285
  1383  0103  28F9               	goto	l116
  1384  0104                     l1285:
  1385                           
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 4, Range of values is 1 to 4
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte           13     7 (average)
  1391                           ; direct_byte           23    11 (fixed)
  1392                           ; jumptable            263     9 (fixed)
  1393                           ;	Chosen strategy is simple_byte
  1394  0104  0876               	movf	??_ADC_init,w
  1395  0105  3A01               	xorlw	1	; case 1
  1396  0106  1903               	skipnz
  1397  0107  28ED               	goto	l111
  1398  0108  3A03               	xorlw	3	; case 2
  1399  0109  1903               	skipnz
  1400  010A  28F0               	goto	l113
  1401  010B  3A01               	xorlw	1	; case 3
  1402  010C  1903               	skipnz
  1403  010D  28F3               	goto	l114
  1404  010E  3A07               	xorlw	7	; case 4
  1405  010F  1903               	skipnz
  1406  0110  28F6               	goto	l115
  1407  0111  28F9               	goto	l116
  1408  0112                     l112:
  1409                           
  1410                           ;ADC.c: 117:     PIR1bits.ADIF = 0;
  1411  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0114  130C               	bcf	12,6	;volatile
  1414                           
  1415                           ;ADC.c: 118:     PIE1bits.ADIE = 1;
  1416  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1418  0117  170C               	bsf	12,6	;volatile
  1419                           
  1420                           ;ADC.c: 119:     ADCON0bits.ADON = 1;
  1421  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1423  011A  141F               	bsf	31,0	;volatile
  1424  011B                     l117:
  1425  011B  0008               	return
  1426  011C                     __end_of_ADC_init:
  1427                           
  1428                           	psect	text4
  1429  018E                     __ptext4:	
  1430 ;; *************** function _isr *****************
  1431 ;; Defined at:
  1432 ;;		line 114 in file "mains1.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0
  1448 ;;      Temps:          3       0       0       0       0
  1449 ;;      Totals:         3       0       0       0       0
  1450 ;;Total ram usage:        3 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		Interrupt level 1
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function _isr
  1461  018E                     _isr:
  1462  018E                     i1l873:
  1463                           
  1464                           ;mains1.c: 115:     if(PIR1bits.ADIF == 1){
  1465  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1466  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0190  1F0C               	btfss	12,6	;volatile
  1468  0191  2993               	goto	u4_21
  1469  0192  2994               	goto	u4_20
  1470  0193                     u4_21:
  1471  0193  299B               	goto	i1l68
  1472  0194                     u4_20:
  1473  0194                     i1l875:
  1474                           
  1475                           ;mains1.c: 116:         ADC_analogvalue = ADRESH;
  1476  0194  081E               	movf	30,w	;volatile
  1477  0195  00F0               	movwf	??_isr
  1478  0196  0870               	movf	??_isr,w
  1479  0197  00F9               	movwf	_ADC_analogvalue
  1480  0198                     i1l877:
  1481                           
  1482                           ;mains1.c: 117:         ADC_cflag = 1;
  1483  0198  01FA               	clrf	_ADC_cflag
  1484  0199  0AFA               	incf	_ADC_cflag,f
  1485  019A                     i1l879:
  1486                           
  1487                           ;mains1.c: 118:         PIR1bits.ADIF = 0;
  1488  019A  130C               	bcf	12,6	;volatile
  1489  019B                     i1l68:
  1490  019B  0872               	movf	??_isr+2,w
  1491  019C  008A               	movwf	10
  1492  019D  0E71               	swapf	??_isr+1,w
  1493  019E  0083               	movwf	3
  1494  019F  0EFE               	swapf	btemp,f
  1495  01A0  0E7E               	swapf	btemp,w
  1496  01A1  0009               	retfie
  1497  01A2                     __end_of_isr:
  1498  007E                     btemp	set	126	;btemp
  1499  007E                     wtemp0	set	126
  1500                           
  1501                           	psect	intentry
  1502  0004                     __pintentry:	
  1503                           ;incstack = 0
  1504                           ; Regs used in _isr: [wreg]
  1505                           
  1506  0004                     interrupt_function:
  1507  007E                     saved_w	set	btemp
  1508  0004  00FE               	movwf	btemp
  1509  0005  0E03               	swapf	3,w
  1510  0006  00F1               	movwf	??_isr+1
  1511  0007  080A               	movf	10,w
  1512  0008  00F2               	movwf	??_isr+2
  1513  0009  120A  118A  298E   	ljmp	_isr
  1514                           
  1515                           	psect	config
  1516                           
  1517                           ;Config register CONFIG1 @ 0x2007
  1518                           ;	Oscillator Selection bits
  1519                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1520                           ;	Watchdog Timer Enable bit
  1521                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1522                           ;	Power-up Timer Enable bit
  1523                           ;	PWRTE = OFF, PWRT disabled
  1524                           ;	RE3/MCLR pin function select bit
  1525                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1526                           ;	Code Protection bit
  1527                           ;	CP = OFF, Program memory code protection is disabled
  1528                           ;	Data Code Protection bit
  1529                           ;	CPD = OFF, Data memory code protection is disabled
  1530                           ;	Brown Out Reset Selection bits
  1531                           ;	BOREN = ON, BOR enabled
  1532                           ;	Internal External Switchover bit
  1533                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1534                           ;	Fail-Safe Clock Monitor Enabled bit
  1535                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1536                           ;	Low Voltage Programming Enable bit
  1537                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1538                           ;	In-Circuit Debugger Mode bit
  1539                           ;	DEBUG = 0x1, unprogrammed default
  1540  2007                     	org	8199
  1541  2007  23F4               	dw	9204
  1542                           
  1543                           ;Config register CONFIG2 @ 0x2008
  1544                           ;	Brown-out Reset Selection bit
  1545                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1546                           ;	Flash Program Memory Self Write Enable bits
  1547                           ;	WRT = OFF, Write protection off
  1548  2008                     	org	8200
  1549  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_init
    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     676
                                              0 BANK0      1     1      0
                           _ADC_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _setup
     _spiInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 17:55:13 2021

            _SSPSTATbits 0094                       l62 014D                       l80 0017  
                     l82 001C                       l83 0021                       l84 0026  
                     l85 002B                       u50 0180                       u51 017F  
                     u70 0168                       u71 0167                       u87 016C  
                    l111 00ED                      l112 0112                      l113 00F0  
                    l114 00F3                      l106 00D1                      l115 00F6  
                    l116 00F9                      l108 00D5                      l117 011B  
                    l109 00D9                      l133 0188                      l134 018D  
                    l981 0184                      l983 0187                      l975 0179  
                    l991 0128                      l977 0180                      l993 0129  
                    l985 011C                      l979 0182                      l995 012B  
                    l987 0120                      l997 0132                      l989 0121  
                    l999 0135                      _isr 018E                     l1001 0136  
                   l1011 013B                     l1003 0137                     l1013 013E  
                   l1005 0138                     l1031 0053                     l1023 0030  
                   l1015 0141                     l1007 0139                     l1041 006C  
                   l1033 0058                     l1025 0046                     l1017 0144  
                   l1009 013A                     l1051 0085                     l1043 0071  
                   l1035 005D                     l1027 0049                     l1019 0016  
                   l1053 008A                     l1045 0076                     l1037 0062  
                   l1029 004E                     l1061 0097                     l1055 008F  
                   l1047 007B                     l1039 0067                     l1057 0092  
                   l1049 0080                     l1065 00DD                     l1069 00FC  
                   l1191 0163                     l1183 014E                     l1281 009F  
                   l1193 0168                     l1185 0153                     l1283 00E5  
                   l1195 0170                     l1187 015D                     l1285 0104  
                   l1197 0171                     l1189 015F                     l1279 0038  
                   ?_isr 0070                     i1l68 019B                     _TMR0 0001  
                   u4_20 0194                     u4_21 0193                     _main 014E  
      ADC_init@Justified 0074                     btemp 007E                     start 000C  
       __end_of_ADC_init 011C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l873 018E                    i1l875 0194  
                  i1l877 0198                    i1l879 019A                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 011C  
                  pclath 000A          __end_of_spiInit 018E                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0178  
                 ??_main 0020                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013          ADC_init@ADCSbit 0078  
                 saved_w 007E                ??_spiInit 0076                ?_ADC_init 0073  
        ADC_init@Channel 0073  __end_of__initialization 0011           __pcstackCOMMON 0070  
          __end_of_setup 014E               ??_ADC_init 0076                  ??_setup 0077  
             __pmaintext 014E               __pintentry 0004                  _SSPSTAT 0094  
              _ADC_cflag 007A                _ANSELbits 0188                  __ptext1 011C  
                __ptext2 0178                  __ptext3 0015                  __ptext4 018E  
           __size_of_isr 0014                  _spiInit 0178     end_of_initialization 0011  
        _ADC_analogvalue 0079                _TRISAbits 0085                _TRISBbits 0086  
              _TRISCbits 0087        __size_of_ADC_init 0107             ADC_init@Vref 0075  
    start_initialization 000F              __end_of_isr 01A2              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020                 ?_spiInit 0073  
               _ADC_init 0015           __size_of_setup 0032     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of_spiInit 0016            __size_of_main 002A  
           spiInit@sType 0076        spiInit@sClockIdle 0074               _INTCONbits 000B  
               intlevel1 0000  
