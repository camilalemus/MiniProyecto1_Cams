

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 20:29:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0013                     _SSPBUF	set	19
   284  0014                     _SSPCON	set	20
   285  0006                     _PORTBbits	set	6
   286  0007                     _PORTC	set	7
   287  000B                     _INTCONbits	set	11
   288  0008                     _PORTD	set	8
   289  0094                     _SSPSTATbits	set	148
   290  0094                     _SSPSTAT	set	148
   291  0096                     _IOCBbits	set	150
   292  0086                     _TRISBbits	set	134
   293  0086                     _TRISB	set	134
   294  0088                     _TRISD	set	136
   295  0087                     _TRISCbits	set	135
   296  0087                     _TRISC	set	135
   297  0085                     _TRISAbits	set	133
   298  0085                     _TRISA	set	133
   299  043B                     _TRISC3	set	1083
   300  043D                     _TRISC5	set	1085
   301  0189                     _ANSELH	set	393
   302  0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308  000F                     __initialization:
   309  000F                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  000F                     __end_of__initialization:
   313  000F  0183               	clrf	3
   314  0010  120A  118A  286A   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:
   318  0070                     ?_setup:
   319  0070                     ?_spiWrite:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_main:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_isr:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_isr:	
   329                           ; 1 bytes @ 0x0
   330                           
   331                           
   332                           ; 1 bytes @ 0x0
   333  0070                     	ds	3
   334  0073                     ??_spiWrite:
   335  0073                     ?_spiInit:	
   336                           ; 1 bytes @ 0x3
   337                           
   338  0073                     spiInit@sDataSample:	
   339                           ; 1 bytes @ 0x3
   340                           
   341  0073                     spiWrite@dat:	
   342                           ; 1 bytes @ 0x3
   343                           
   344                           
   345                           ; 1 bytes @ 0x3
   346  0073                     	ds	1
   347  0074                     spiInit@sClockIdle:
   348                           
   349                           ; 1 bytes @ 0x4
   350  0074                     	ds	1
   351  0075                     spiInit@sTransmitEdge:
   352                           
   353                           ; 1 bytes @ 0x5
   354  0075                     	ds	1
   355  0076                     ??_spiInit:
   356  0076                     spiInit@sType:	
   357                           ; 1 bytes @ 0x6
   358                           
   359                           
   360                           ; 1 bytes @ 0x6
   361  0076                     	ds	1
   362  0077                     ??_setup:
   363  0077                     ??_main:	
   364                           ; 1 bytes @ 0x7
   365                           
   366                           
   367                           	psect	maintext
   368  006A                     __pmaintext:	
   369                           ; 1 bytes @ 0x7
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 51 in file "mains2.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : B00/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels required when called:    3
   395 ;; This function calls:
   396 ;;		_setup
   397 ;;		_spiWrite
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _main
   405  006A                     _main:
   406  006A                     l776:	
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   409                           
   410                           
   411                           ;mains2.c: 52:     setup();
   412  006A  120A  118A  2013  120A  118A  	fcall	_setup
   413  006F                     l39:	
   414                           ;mains2.c: 53:     while (1) {
   415                           
   416                           
   417                           ;mains2.c: 54:         spiWrite(PORTD);
   418  006F  1283               	bcf	3,5	;RP0=0, select bank0
   419  0070  1303               	bcf	3,6	;RP1=0, select bank0
   420  0071  0808               	movf	8,w	;volatile
   421  0072  120A  118A  207B  120A  118A  	fcall	_spiWrite
   422  0077  286F               	goto	l39
   423  0078  120A  118A  280C   	ljmp	start
   424  007B                     __end_of_main:
   425                           
   426                           	psect	text1
   427  007B                     __ptext1:	
   428 ;; *************** function _spiWrite *****************
   429 ;; Defined at:
   430 ;;		line 34 in file "SPI.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;  dat             1    wreg     unsigned char 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  dat             1    3[COMMON] unsigned char 
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         1       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0
   447 ;;      Totals:         1       0       0       0       0
   448 ;;Total ram usage:        1 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; Hardware stack levels required when called:    1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           
   459                           ;psect for function _spiWrite
   460  007B                     _spiWrite:
   461                           
   462                           ;incstack = 0
   463                           ; Regs used in _spiWrite: [wreg]
   464                           ;spiWrite@dat stored from wreg
   465  007B  00F3               	movwf	spiWrite@dat
   466  007C                     l714:
   467                           
   468                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   469  007C  0873               	movf	spiWrite@dat,w
   470  007D  1283               	bcf	3,5	;RP0=0, select bank0
   471  007E  1303               	bcf	3,6	;RP1=0, select bank0
   472  007F  0093               	movwf	19	;volatile
   473  0080                     l80:
   474  0080  0008               	return
   475  0081                     __end_of_spiWrite:
   476                           
   477                           	psect	text2
   478  0013                     __ptext2:	
   479 ;; *************** function _setup *****************
   480 ;; Defined at:
   481 ;;		line 62 in file "mains2.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    2
   502 ;; This function calls:
   503 ;;		_spiInit
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           
   510                           ;psect for function _setup
   511  0013                     _setup:
   512  0013                     l752:	
   513                           ;incstack = 0
   514                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   515                           
   516                           
   517                           ;mains2.c: 64:     ANSEL = 0;
   518  0013  1683               	bsf	3,5	;RP0=1, select bank3
   519  0014  1703               	bsf	3,6	;RP1=1, select bank3
   520  0015  0188               	clrf	8	;volatile
   521                           
   522                           ;mains2.c: 65:     ANSELH = 0;
   523  0016  0189               	clrf	9	;volatile
   524  0017                     l754:
   525                           
   526                           ;mains2.c: 68:     INTCONbits.GIE = 1;
   527  0017  178B               	bsf	11,7	;volatile
   528                           
   529                           ;mains2.c: 69:     TRISA = 0;
   530  0018  1683               	bsf	3,5	;RP0=1, select bank1
   531  0019  1303               	bcf	3,6	;RP1=0, select bank1
   532  001A  0185               	clrf	5	;volatile
   533  001B                     l756:
   534                           
   535                           ;mains2.c: 71:     TRISAbits.TRISA5 = 1;
   536  001B  1685               	bsf	5,5	;volatile
   537                           
   538                           ;mains2.c: 72:     TRISC = 0;
   539  001C  0187               	clrf	7	;volatile
   540  001D                     l758:
   541                           
   542                           ;mains2.c: 73:     TRISCbits.TRISC4 = 1;
   543  001D  1607               	bsf	7,4	;volatile
   544                           
   545                           ;mains2.c: 74:     TRISD = 0;
   546  001E  0188               	clrf	8	;volatile
   547                           
   548                           ;mains2.c: 75:     TRISB = 0;
   549  001F  0186               	clrf	6	;volatile
   550                           
   551                           ;mains2.c: 76:     PORTC = 0;
   552  0020  1283               	bcf	3,5	;RP0=0, select bank0
   553  0021  1303               	bcf	3,6	;RP1=0, select bank0
   554  0022  0187               	clrf	7	;volatile
   555                           
   556                           ;mains2.c: 77:     PORTD = 0;
   557  0023  0188               	clrf	8	;volatile
   558  0024                     l760:
   559                           
   560                           ;mains2.c: 78:     TRISBbits.TRISB1 = 1;
   561  0024  1683               	bsf	3,5	;RP0=1, select bank1
   562  0025  1303               	bcf	3,6	;RP1=0, select bank1
   563  0026  1486               	bsf	6,1	;volatile
   564  0027                     l762:
   565                           
   566                           ;mains2.c: 79:     TRISBbits.TRISB0 = 1;
   567  0027  1406               	bsf	6,0	;volatile
   568  0028                     l764:
   569                           
   570                           ;mains2.c: 80:     INTCONbits.PEIE = 1;
   571  0028  170B               	bsf	11,6	;volatile
   572  0029                     l766:
   573                           
   574                           ;mains2.c: 81:     INTCONbits.RBIE = 1;
   575  0029  158B               	bsf	11,3	;volatile
   576  002A                     l768:
   577                           
   578                           ;mains2.c: 82:     IOCBbits.IOCB0 = 1;
   579  002A  1416               	bsf	22,0	;volatile
   580  002B                     l770:
   581                           
   582                           ;mains2.c: 83:     IOCBbits.IOCB1 = 1;
   583  002B  1496               	bsf	22,1	;volatile
   584  002C                     l772:
   585                           
   586                           ;mains2.c: 84:     INTCONbits.RBIF = 0;
   587  002C  100B               	bcf	11,0	;volatile
   588  002D                     l774:
   589                           
   590                           ;mains2.c: 90:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   591  002D  01F3               	clrf	spiInit@sDataSample
   592  002E  01F4               	clrf	spiInit@sClockIdle
   593  002F  01F5               	clrf	spiInit@sTransmitEdge
   594  0030  3024               	movlw	36
   595  0031  120A  118A  2054  120A  118A  	fcall	_spiInit
   596  0036                     l45:
   597  0036  0008               	return
   598  0037                     __end_of_setup:
   599                           
   600                           	psect	text3
   601  0054                     __ptext3:	
   602 ;; *************** function _spiInit *****************
   603 ;; Defined at:
   604 ;;		line 12 in file "SPI.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;  sType           1    wreg     enum E1264
   607 ;;  sDataSample     1    3[COMMON] enum E1272
   608 ;;  sClockIdle      1    4[COMMON] enum E1276
   609 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  sType           1    6[COMMON] enum E1264
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, status,2, status,0
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         3       0       0       0       0
   622 ;;      Locals:         1       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0
   624 ;;      Totals:         4       0       0       0       0
   625 ;;Total ram usage:        4 bytes
   626 ;; Hardware stack levels used:    1
   627 ;; Hardware stack levels required when called:    1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_setup
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _spiInit
   637  0054                     _spiInit:
   638                           
   639                           ;incstack = 0
   640                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   641                           ;spiInit@sType stored from wreg
   642  0054  00F6               	movwf	spiInit@sType
   643  0055                     l742:
   644                           
   645                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   646  0055  1683               	bsf	3,5	;RP0=1, select bank1
   647  0056  1303               	bcf	3,6	;RP1=0, select bank1
   648  0057  1287               	bcf	7,5	;volatile
   649                           
   650                           ;SPI.c: 15:     if(sType & 0b00000100)
   651  0058  1D76               	btfss	spiInit@sType,2
   652  0059  285B               	goto	u61
   653  005A  285C               	goto	u60
   654  005B                     u61:
   655  005B  2860               	goto	l748
   656  005C                     u60:
   657  005C                     l744:
   658                           
   659                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   660  005C  0875               	movf	spiInit@sTransmitEdge,w
   661  005D  0094               	movwf	20	;volatile
   662  005E                     l746:
   663                           
   664                           ;SPI.c: 18:         TRISC3 = 1;
   665  005E  1587               	bsf	7,3	;volatile
   666                           
   667                           ;SPI.c: 19:     }
   668  005F  2864               	goto	l70
   669  0060                     l748:
   670                           
   671                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   672  0060  0873               	movf	spiInit@sDataSample,w
   673  0061  0475               	iorwf	spiInit@sTransmitEdge,w
   674  0062  0094               	movwf	20	;volatile
   675  0063                     l750:
   676                           
   677                           ;SPI.c: 23:         TRISC3 = 0;
   678  0063  1187               	bcf	7,3	;volatile
   679  0064                     l70:	
   680                           ;SPI.c: 24:     }
   681                           
   682                           
   683                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   684  0064  0876               	movf	spiInit@sType,w
   685  0065  0474               	iorwf	spiInit@sClockIdle,w
   686  0066  1283               	bcf	3,5	;RP0=0, select bank0
   687  0067  1303               	bcf	3,6	;RP1=0, select bank0
   688  0068  0094               	movwf	20	;volatile
   689  0069                     l71:
   690  0069  0008               	return
   691  006A                     __end_of_spiInit:
   692                           
   693                           	psect	text4
   694  0037                     __ptext4:	
   695 ;; *************** function _isr *****************
   696 ;; Defined at:
   697 ;;		line 101 in file "mains2.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0
   713 ;;      Temps:          3       0       0       0       0
   714 ;;      Totals:         3       0       0       0       0
   715 ;;Total ram usage:        3 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		Interrupt level 1
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _isr
   726  0037                     _isr:
   727  0037                     i1l720:
   728                           
   729                           ;mains2.c: 102:     if (INTCONbits.RBIF == 1) {
   730  0037  1C0B               	btfss	11,0	;volatile
   731  0038  283A               	goto	u3_21
   732  0039  283B               	goto	u3_20
   733  003A                     u3_21:
   734  003A  284D               	goto	i1l54
   735  003B                     u3_20:
   736  003B                     i1l722:
   737                           
   738                           ;mains2.c: 103:         if (PORTBbits.RB0 == 1) {
   739  003B  1283               	bcf	3,5	;RP0=0, select bank0
   740  003C  1303               	bcf	3,6	;RP1=0, select bank0
   741  003D  1C06               	btfss	6,0	;volatile
   742  003E  2840               	goto	u4_21
   743  003F  2841               	goto	u4_20
   744  0040                     u4_21:
   745  0040  2844               	goto	i1l51
   746  0041                     u4_20:
   747  0041                     i1l724:
   748                           
   749                           ;mains2.c: 104:             PORTD--;
   750  0041  3001               	movlw	1
   751  0042  0288               	subwf	8,f	;volatile
   752                           
   753                           ;mains2.c: 105:         } else if (PORTBbits.RB1 == 1) {
   754  0043  284C               	goto	i1l728
   755  0044                     i1l51:
   756  0044  1C86               	btfss	6,1	;volatile
   757  0045  2847               	goto	u5_21
   758  0046  2848               	goto	u5_20
   759  0047                     u5_21:
   760  0047  284C               	goto	i1l728
   761  0048                     u5_20:
   762  0048                     i1l726:
   763                           
   764                           ;mains2.c: 106:             PORTD++;
   765  0048  3001               	movlw	1
   766  0049  00F0               	movwf	??_isr
   767  004A  0870               	movf	??_isr,w
   768  004B  0788               	addwf	8,f	;volatile
   769  004C                     i1l728:
   770                           
   771                           ;mains2.c: 108:         INTCONbits.RBIF = 0;
   772  004C  100B               	bcf	11,0	;volatile
   773  004D                     i1l54:
   774  004D  0872               	movf	??_isr+2,w
   775  004E  008A               	movwf	10
   776  004F  0E71               	swapf	??_isr+1,w
   777  0050  0083               	movwf	3
   778  0051  0EFE               	swapf	btemp,f
   779  0052  0E7E               	swapf	btemp,w
   780  0053  0009               	retfie
   781  0054                     __end_of_isr:
   782  007E                     btemp	set	126	;btemp
   783  007E                     wtemp0	set	126
   784                           
   785                           	psect	intentry
   786  0004                     __pintentry:	
   787                           ;incstack = 0
   788                           ; Regs used in _isr: [wreg+status,2+status,0]
   789                           
   790  0004                     interrupt_function:
   791  007E                     saved_w	set	btemp
   792  0004  00FE               	movwf	btemp
   793  0005  0E03               	swapf	3,w
   794  0006  00F1               	movwf	??_isr+1
   795  0007  080A               	movf	10,w
   796  0008  00F2               	movwf	??_isr+2
   797  0009  120A  118A  2837   	ljmp	_isr
   798                           
   799                           	psect	config
   800                           
   801                           ;Config register CONFIG1 @ 0x2007
   802                           ;	Oscillator Selection bits
   803                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   804                           ;	Watchdog Timer Enable bit
   805                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   806                           ;	Power-up Timer Enable bit
   807                           ;	PWRTE = OFF, PWRT disabled
   808                           ;	RE3/MCLR pin function select bit
   809                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   810                           ;	Code Protection bit
   811                           ;	CP = OFF, Program memory code protection is disabled
   812                           ;	Data Code Protection bit
   813                           ;	CPD = OFF, Data memory code protection is disabled
   814                           ;	Brown Out Reset Selection bits
   815                           ;	BOREN = ON, BOR enabled
   816                           ;	Internal External Switchover bit
   817                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   818                           ;	Fail-Safe Clock Monitor Enabled bit
   819                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   820                           ;	Low Voltage Programming Enable bit
   821                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   822                           ;	In-Circuit Debugger Mode bit
   823                           ;	DEBUG = 0x1, unprogrammed default
   824  2007                     	org	8199
   825  2007  23F4               	dw	9204
   826                           
   827                           ;Config register CONFIG2 @ 0x2008
   828                           ;	Brown-out Reset Selection bit
   829                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   830                           ;	Flash Program Memory Self Write Enable bits
   831                           ;	WRT = OFF, Write protection off
   832  2008                     	org	8200
   833  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     375
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 20:29:31 2021

            _SSPSTATbits 0094                       l45 0036                       l70 0064  
                     l71 0069                       l39 006F                       l80 0080  
                     u60 005C                       u61 005B                      l714 007C  
                    l750 0063                      l742 0055                      l744 005C  
                    l760 0024                      l752 0013                      l746 005E  
                    l770 002B                      l762 0027                      l754 0017  
                    l748 0060                      l772 002C                      l764 0028  
                    l756 001B                      l774 002D                      l766 0029  
                    l758 001D                      l768 002A                      l776 006A  
                    _isr 0037                     ?_isr 0070                     i1l51 0044  
                   i1l54 004D                     u3_20 003B                     u3_21 003A  
                   u4_20 0041                     u4_21 0040                     u5_20 0048  
                   u5_21 0047                     _main 006A                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l720 0037                    i1l722 003B  
                  i1l724 0041                    i1l726 0048                    i1l728 004C  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _setup 0013                    pclath 000A          __end_of_spiInit 006A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 007B                   ??_main 0077                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 0081                ??_spiInit 0076  __end_of__initialization 000F  
         __pcstackCOMMON 0070            __end_of_setup 0037                  ??_setup 0077  
             __pmaintext 006A               __pintentry 0004                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 007B                  __ptext2 0013  
                __ptext3 0054                  __ptext4 0037             __size_of_isr 001D  
                _spiInit 0054     end_of_initialization 000F               ??_spiWrite 0073  
              _PORTBbits 0006                _TRISAbits 0085                _TRISBbits 0086  
              _TRISCbits 0087              spiWrite@dat 0073      start_initialization 000F  
            __end_of_isr 0054                ___latbits 0002        __size_of_spiWrite 0006  
               ?_spiInit 0073           __size_of_setup 0024     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _IOCBbits 0096       spiInit@sDataSample 0073  
       __size_of_spiInit 0016            __size_of_main 0011                 _spiWrite 007B  
           spiInit@sType 0076        spiInit@sClockIdle 0074               _INTCONbits 000B  
               intlevel1 0000  
