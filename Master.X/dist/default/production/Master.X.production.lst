

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 20:25:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0008                     _PORTD	set	8
   290  0006                     _PORTB	set	6
   291  0007                     _PORTCbits	set	7
   292  0094                     _SSPSTATbits	set	148
   293  0094                     _SSPSTAT	set	148
   294  0088                     _TRISD	set	136
   295  0086                     _TRISB	set	134
   296  0087                     _TRISCbits	set	135
   297  0087                     _TRISC	set	135
   298  043B                     _TRISC3	set	1083
   299  043D                     _TRISC5	set	1085
   300  0189                     _ANSELH	set	393
   301  0188                     _ANSEL	set	392
   302                           
   303                           	psect	cinit
   304  07F9                     start_initialization:	
   305                           ; #config settings
   306                           
   307  07F9                     __initialization:
   308                           
   309                           ; Clear objects allocated to COMMON
   310  07F9  01F4               	clrf	__pbssCOMMON& (0+127)
   311  07FA  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   312  07FB  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   313  07FC                     end_of_initialization:	
   314                           ;End of C runtime variable initialization code
   315                           
   316  07FC                     __end_of__initialization:
   317  07FC  0183               	clrf	3
   318  07FD  120A  118A  2F51   	ljmp	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMMON
   321  0074                     __pbssCOMMON:
   322  0074                     _THERM:
   323  0074                     	ds	1
   324  0075                     _CONT:
   325  0075                     	ds	1
   326  0076                     _POT:
   327  0076                     	ds	1
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_setup:
   332  0070                     ?_slave_1:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_slave_2:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_slave_3:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_spiWrite:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_spiWrite:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_spiRead:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ??_spiRead:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_spiInit:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_main:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_spiReceiveWait:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ??_spiReceiveWait:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     spiInit@sDataSample:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     spiWrite@dat:	
   369                           ; 1 bytes @ 0x0
   370                           
   371                           
   372                           ; 1 bytes @ 0x0
   373  0070                     	ds	1
   374  0071                     ??_slave_1:
   375  0071                     ??_slave_2:	
   376                           ; 1 bytes @ 0x1
   377                           
   378  0071                     ??_slave_3:	
   379                           ; 1 bytes @ 0x1
   380                           
   381  0071                     spiInit@sClockIdle:	
   382                           ; 1 bytes @ 0x1
   383                           
   384                           
   385                           ; 1 bytes @ 0x1
   386  0071                     	ds	1
   387  0072                     spiInit@sTransmitEdge:
   388                           
   389                           ; 1 bytes @ 0x2
   390  0072                     	ds	1
   391  0073                     ??_spiInit:
   392  0073                     spiInit@sType:	
   393                           ; 1 bytes @ 0x3
   394                           
   395                           
   396                           ; 1 bytes @ 0x3
   397  0073                     	ds	1
   398  0074                     ??_setup:
   399  0074                     ??_main:	
   400                           ; 1 bytes @ 0x4
   401                           
   402                           
   403                           	psect	maintext
   404  0751                     __pmaintext:	
   405                           ; 1 bytes @ 0x4
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 58 in file "mainm.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0, pclath, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : B00/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels required when called:    3
   431 ;; This function calls:
   432 ;;		_setup
   433 ;;		_slave_1
   434 ;;		_slave_2
   435 ;;		_slave_3
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           
   442                           ;psect for function _main
   443  0751                     _main:
   444  0751                     l778:	
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   447                           
   448                           
   449                           ;mainm.c: 59:     setup();
   450  0751  120A  118A  2769  120A  118A  	fcall	_setup
   451  0756                     l45:	
   452                           ;mainm.c: 60:     while (1){
   453                           
   454                           
   455                           ;mainm.c: 61:         slave_1();
   456  0756  120A  118A  2784  120A  118A  	fcall	_slave_1
   457                           
   458                           ;mainm.c: 62:         slave_2();
   459  075B  120A  118A  27AB  120A  118A  	fcall	_slave_2
   460                           
   461                           ;mainm.c: 63:         slave_3();
   462  0760  120A  118A  27D2  120A  118A  	fcall	_slave_3
   463  0765  2F56               	goto	l45
   464  0766  120A  118A  2800   	ljmp	start
   465  0769                     __end_of_main:
   466                           
   467                           	psect	text1
   468  07D2                     __ptext1:	
   469 ;; *************** function _slave_3 *****************
   470 ;; Defined at:
   471 ;;		line 95 in file "mainm.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          2       0       0       0       0
   488 ;;      Totals:         2       0       0       0       0
   489 ;;Total ram usage:        2 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    2
   492 ;; This function calls:
   493 ;;		_spiRead
   494 ;;		_spiWrite
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           
   501                           ;psect for function _slave_3
   502  07D2                     _slave_3:
   503  07D2                     l738:	
   504                           ;incstack = 0
   505                           ; Regs used in _slave_3: [wreg+status,2+status,0+pclath+cstack]
   506                           
   507                           
   508                           ;mainm.c: 96:     PORTCbits.RC2 = 0;
   509  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   510  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   511  07D4  1107               	bcf	7,2	;volatile
   512  07D5                     l740:
   513                           
   514                           ;mainm.c: 97:     _delay((unsigned long)((1)*((8000000)/4000.0)));
   515  07D5  3003               	movlw	3
   516  07D6  00F2               	movwf	??_slave_3+1
   517  07D7  3097               	movlw	151
   518  07D8  00F1               	movwf	??_slave_3
   519  07D9                     u47:
   520  07D9  0BF1               	decfsz	??_slave_3,f
   521  07DA  2FD9               	goto	u47
   522  07DB  0BF2               	decfsz	??_slave_3+1,f
   523  07DC  2FD9               	goto	u47
   524  07DD  2FDE               	nop2
   525  07DE                     l742:
   526                           
   527                           ;mainm.c: 99:     spiWrite(1);
   528  07DE  3001               	movlw	1
   529  07DF  120A  118A  2725  120A  118A  	fcall	_spiWrite
   530  07E4                     l744:
   531                           
   532                           ;mainm.c: 100:     THERM = spiRead();
   533  07E4  120A  118A  2732  120A  118A  	fcall	_spiRead
   534  07E9  00F1               	movwf	??_slave_3
   535  07EA  0871               	movf	??_slave_3,w
   536  07EB  00F4               	movwf	_THERM
   537                           
   538                           ;mainm.c: 102:     _delay((unsigned long)((1)*((8000000)/4000.0)));
   539  07EC  3003               	movlw	3
   540  07ED  00F2               	movwf	??_slave_3+1
   541  07EE  3097               	movlw	151
   542  07EF  00F1               	movwf	??_slave_3
   543  07F0                     u57:
   544  07F0  0BF1               	decfsz	??_slave_3,f
   545  07F1  2FF0               	goto	u57
   546  07F2  0BF2               	decfsz	??_slave_3+1,f
   547  07F3  2FF0               	goto	u57
   548  07F4  2FF5               	nop2
   549  07F5                     l746:
   550                           
   551                           ;mainm.c: 103:     PORTCbits.RC2 = 1;
   552  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   553  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   554  07F7  1507               	bsf	7,2	;volatile
   555  07F8                     l57:
   556  07F8  0008               	return
   557  07F9                     __end_of_slave_3:
   558                           
   559                           	psect	text2
   560  07AB                     __ptext2:	
   561 ;; *************** function _slave_2 *****************
   562 ;; Defined at:
   563 ;;		line 83 in file "mainm.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, pclath, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   577 ;;      Params:         0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0
   579 ;;      Temps:          2       0       0       0       0
   580 ;;      Totals:         2       0       0       0       0
   581 ;;Total ram usage:        2 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    2
   584 ;; This function calls:
   585 ;;		_spiRead
   586 ;;		_spiWrite
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _slave_2
   594  07AB                     _slave_2:
   595  07AB                     l728:	
   596                           ;incstack = 0
   597                           ; Regs used in _slave_2: [wreg+status,2+status,0+pclath+cstack]
   598                           
   599                           
   600                           ;mainm.c: 84:     PORTCbits.RC1 = 0;
   601  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   602  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   603  07AD  1087               	bcf	7,1	;volatile
   604  07AE                     l730:
   605                           
   606                           ;mainm.c: 85:     _delay((unsigned long)((1)*((8000000)/4000.0)));
   607  07AE  3003               	movlw	3
   608  07AF  00F2               	movwf	??_slave_2+1
   609  07B0  3097               	movlw	151
   610  07B1  00F1               	movwf	??_slave_2
   611  07B2                     u67:
   612  07B2  0BF1               	decfsz	??_slave_2,f
   613  07B3  2FB2               	goto	u67
   614  07B4  0BF2               	decfsz	??_slave_2+1,f
   615  07B5  2FB2               	goto	u67
   616  07B6  2FB7               	nop2
   617  07B7                     l732:
   618                           
   619                           ;mainm.c: 87:     spiWrite(1);
   620  07B7  3001               	movlw	1
   621  07B8  120A  118A  2725  120A  118A  	fcall	_spiWrite
   622  07BD                     l734:
   623                           
   624                           ;mainm.c: 88:     PORTB = spiRead();
   625  07BD  120A  118A  2732  120A  118A  	fcall	_spiRead
   626  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   627  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   628  07C4  0086               	movwf	6	;volatile
   629                           
   630                           ;mainm.c: 90:     _delay((unsigned long)((1)*((8000000)/4000.0)));
   631  07C5  3003               	movlw	3
   632  07C6  00F2               	movwf	??_slave_2+1
   633  07C7  3097               	movlw	151
   634  07C8  00F1               	movwf	??_slave_2
   635  07C9                     u77:
   636  07C9  0BF1               	decfsz	??_slave_2,f
   637  07CA  2FC9               	goto	u77
   638  07CB  0BF2               	decfsz	??_slave_2+1,f
   639  07CC  2FC9               	goto	u77
   640  07CD  2FCE               	nop2
   641  07CE                     l736:
   642                           
   643                           ;mainm.c: 91:     PORTCbits.RC1 = 1;
   644  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   645  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   646  07D0  1487               	bsf	7,1	;volatile
   647  07D1                     l54:
   648  07D1  0008               	return
   649  07D2                     __end_of_slave_2:
   650                           
   651                           	psect	text3
   652  0784                     __ptext3:	
   653 ;; *************** function _slave_1 *****************
   654 ;; Defined at:
   655 ;;		line 72 in file "mainm.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0, pclath, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0
   671 ;;      Temps:          2       0       0       0       0
   672 ;;      Totals:         2       0       0       0       0
   673 ;;Total ram usage:        2 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; Hardware stack levels required when called:    2
   676 ;; This function calls:
   677 ;;		_spiRead
   678 ;;		_spiWrite
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           
   685                           ;psect for function _slave_1
   686  0784                     _slave_1:
   687  0784                     l718:	
   688                           ;incstack = 0
   689                           ; Regs used in _slave_1: [wreg+status,2+status,0+pclath+cstack]
   690                           
   691                           
   692                           ;mainm.c: 73:     PORTCbits.RC0 = 0;
   693  0784  1283               	bcf	3,5	;RP0=0, select bank0
   694  0785  1303               	bcf	3,6	;RP1=0, select bank0
   695  0786  1007               	bcf	7,0	;volatile
   696  0787                     l720:
   697                           
   698                           ;mainm.c: 74:     _delay((unsigned long)((1)*((8000000)/4000.0)));
   699  0787  3003               	movlw	3
   700  0788  00F2               	movwf	??_slave_1+1
   701  0789  3097               	movlw	151
   702  078A  00F1               	movwf	??_slave_1
   703  078B                     u87:
   704  078B  0BF1               	decfsz	??_slave_1,f
   705  078C  2F8B               	goto	u87
   706  078D  0BF2               	decfsz	??_slave_1+1,f
   707  078E  2F8B               	goto	u87
   708  078F  2F90               	nop2
   709  0790                     l722:
   710                           
   711                           ;mainm.c: 76:     spiWrite(1);
   712  0790  3001               	movlw	1
   713  0791  120A  118A  2725  120A  118A  	fcall	_spiWrite
   714  0796                     l724:
   715                           
   716                           ;mainm.c: 77:     POT = spiRead();
   717  0796  120A  118A  2732  120A  118A  	fcall	_spiRead
   718  079B  00F1               	movwf	??_slave_1
   719  079C  0871               	movf	??_slave_1,w
   720  079D  00F6               	movwf	_POT
   721                           
   722                           ;mainm.c: 79:     _delay((unsigned long)((1)*((8000000)/4000.0)));
   723  079E  3003               	movlw	3
   724  079F  00F2               	movwf	??_slave_1+1
   725  07A0  3097               	movlw	151
   726  07A1  00F1               	movwf	??_slave_1
   727  07A2                     u97:
   728  07A2  0BF1               	decfsz	??_slave_1,f
   729  07A3  2FA2               	goto	u97
   730  07A4  0BF2               	decfsz	??_slave_1+1,f
   731  07A5  2FA2               	goto	u97
   732  07A6  2FA7               	nop2
   733  07A7                     l726:
   734                           
   735                           ;mainm.c: 80:     PORTCbits.RC0 = 1;
   736  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   737  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   738  07A9  1407               	bsf	7,0	;volatile
   739  07AA                     l51:
   740  07AA  0008               	return
   741  07AB                     __end_of_slave_1:
   742                           
   743                           	psect	text4
   744  0725                     __ptext4:	
   745 ;; *************** function _spiWrite *****************
   746 ;; Defined at:
   747 ;;		line 34 in file "SPI.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  dat             1    wreg     unsigned char 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  dat             1    0[COMMON] unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         1       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         1       0       0       0       0
   765 ;;Total ram usage:        1 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_slave_1
   771 ;;		_slave_2
   772 ;;		_slave_3
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _spiWrite
   778  0725                     _spiWrite:
   779                           
   780                           ;incstack = 0
   781                           ; Regs used in _spiWrite: [wreg]
   782                           ;spiWrite@dat stored from wreg
   783  0725  00F0               	movwf	spiWrite@dat
   784  0726                     l688:
   785                           
   786                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   787  0726  0870               	movf	spiWrite@dat,w
   788  0727  1283               	bcf	3,5	;RP0=0, select bank0
   789  0728  1303               	bcf	3,6	;RP1=0, select bank0
   790  0729  0093               	movwf	19	;volatile
   791  072A                     l86:
   792  072A  0008               	return
   793  072B                     __end_of_spiWrite:
   794                           
   795                           	psect	text5
   796  0732                     __ptext5:	
   797 ;; *************** function _spiRead *****************
   798 ;; Defined at:
   799 ;;		line 47 in file "SPI.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      unsigned char 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0, pclath, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       0       0       0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    1
   820 ;; This function calls:
   821 ;;		_spiReceiveWait
   822 ;; This function is called by:
   823 ;;		_slave_1
   824 ;;		_slave_2
   825 ;;		_slave_3
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _spiRead
   831  0732                     _spiRead:
   832  0732                     l690:	
   833                           ;incstack = 0
   834                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   835                           
   836                           
   837                           ;SPI.c: 49:     spiReceiveWait();
   838  0732  120A  118A  272B  120A  118A  	fcall	_spiReceiveWait
   839  0737                     l692:
   840                           
   841                           ;SPI.c: 50:     return(SSPBUF);
   842  0737  1283               	bcf	3,5	;RP0=0, select bank0
   843  0738  1303               	bcf	3,6	;RP1=0, select bank0
   844  0739  0813               	movf	19,w	;volatile
   845  073A                     l94:
   846  073A  0008               	return
   847  073B                     __end_of_spiRead:
   848                           
   849                           	psect	text6
   850  072B                     __ptext6:	
   851 ;; *************** function _spiReceiveWait *****************
   852 ;; Defined at:
   853 ;;		line 29 in file "SPI.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		None
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_spiRead
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           
   881                           ;psect for function _spiReceiveWait
   882  072B                     _spiReceiveWait:
   883  072B                     l686:	
   884                           ;incstack = 0
   885                           ; Regs used in _spiReceiveWait: []
   886                           
   887  072B                     l80:	
   888                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   889                           
   890  072B  1683               	bsf	3,5	;RP0=1, select bank1
   891  072C  1303               	bcf	3,6	;RP1=0, select bank1
   892  072D  1C14               	btfss	20,0	;volatile
   893  072E  2F30               	goto	u11
   894  072F  2F31               	goto	u10
   895  0730                     u11:
   896  0730  2F2B               	goto	l80
   897  0731                     u10:
   898  0731                     l83:
   899  0731  0008               	return
   900  0732                     __end_of_spiReceiveWait:
   901                           
   902                           	psect	text7
   903  0769                     __ptext7:	
   904 ;; *************** function _setup *****************
   905 ;; Defined at:
   906 ;;		line 111 in file "mainm.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, pclath, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    1
   927 ;; This function calls:
   928 ;;		_spiInit
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _setup
   936  0769                     _setup:
   937  0769                     l766:	
   938                           ;incstack = 0
   939                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   940                           
   941                           
   942                           ;mainm.c: 112:     ANSEL = 0;
   943  0769  1683               	bsf	3,5	;RP0=1, select bank3
   944  076A  1703               	bsf	3,6	;RP1=1, select bank3
   945  076B  0188               	clrf	8	;volatile
   946                           
   947                           ;mainm.c: 113:     ANSELH = 0;
   948  076C  0189               	clrf	9	;volatile
   949                           
   950                           ;mainm.c: 114:     TRISC = 0;
   951  076D  1683               	bsf	3,5	;RP0=1, select bank1
   952  076E  1303               	bcf	3,6	;RP1=0, select bank1
   953  076F  0187               	clrf	7	;volatile
   954  0770                     l768:
   955                           
   956                           ;mainm.c: 115:     TRISCbits.TRISC4 = 1;
   957  0770  1607               	bsf	7,4	;volatile
   958                           
   959                           ;mainm.c: 116:     TRISB = 0;
   960  0771  0186               	clrf	6	;volatile
   961                           
   962                           ;mainm.c: 117:     TRISD = 0;
   963  0772  0188               	clrf	8	;volatile
   964                           
   965                           ;mainm.c: 118:     PORTB = 0;
   966  0773  1283               	bcf	3,5	;RP0=0, select bank0
   967  0774  1303               	bcf	3,6	;RP1=0, select bank0
   968  0775  0186               	clrf	6	;volatile
   969                           
   970                           ;mainm.c: 119:     PORTD = 0;
   971  0776  0188               	clrf	8	;volatile
   972  0777                     l770:
   973                           
   974                           ;mainm.c: 120:     PORTCbits.RC0 = 1;
   975  0777  1407               	bsf	7,0	;volatile
   976  0778                     l772:
   977                           
   978                           ;mainm.c: 121:     PORTCbits.RC1 = 1;
   979  0778  1487               	bsf	7,1	;volatile
   980  0779                     l774:
   981                           
   982                           ;mainm.c: 122:     PORTCbits.RC2 = 1;
   983  0779  1507               	bsf	7,2	;volatile
   984  077A                     l776:
   985                           
   986                           ;mainm.c: 123:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   987  077A  01F0               	clrf	spiInit@sDataSample
   988  077B  01F1               	clrf	spiInit@sClockIdle
   989  077C  01F2               	clrf	spiInit@sTransmitEdge
   990  077D  3020               	movlw	32
   991  077E  120A  118A  273B  120A  118A  	fcall	_spiInit
   992  0783                     l60:
   993  0783  0008               	return
   994  0784                     __end_of_setup:
   995                           
   996                           	psect	text8
   997  073B                     __ptext8:	
   998 ;; *************** function _spiInit *****************
   999 ;; Defined at:
  1000 ;;		line 12 in file "SPI.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  sType           1    wreg     enum E1264
  1003 ;;  sDataSample     1    0[COMMON] enum E1272
  1004 ;;  sClockIdle      1    1[COMMON] enum E1276
  1005 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  sType           1    3[COMMON] enum E1264
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         3       0       0       0       0
  1018 ;;      Locals:         1       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         4       0       0       0       0
  1021 ;;Total ram usage:        4 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_setup
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _spiInit
  1032  073B                     _spiInit:
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1036                           ;spiInit@sType stored from wreg
  1037  073B  00F3               	movwf	spiInit@sType
  1038  073C                     l756:
  1039                           
  1040                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1041  073C  1683               	bsf	3,5	;RP0=1, select bank1
  1042  073D  1303               	bcf	3,6	;RP1=0, select bank1
  1043  073E  1287               	bcf	7,5	;volatile
  1044                           
  1045                           ;SPI.c: 15:     if(sType & 0b00000100)
  1046  073F  1D73               	btfss	spiInit@sType,2
  1047  0740  2F42               	goto	u31
  1048  0741  2F43               	goto	u30
  1049  0742                     u31:
  1050  0742  2F47               	goto	l762
  1051  0743                     u30:
  1052  0743                     l758:
  1053                           
  1054                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1055  0743  0872               	movf	spiInit@sTransmitEdge,w
  1056  0744  0094               	movwf	20	;volatile
  1057  0745                     l760:
  1058                           
  1059                           ;SPI.c: 18:         TRISC3 = 1;
  1060  0745  1587               	bsf	7,3	;volatile
  1061                           
  1062                           ;SPI.c: 19:     }
  1063  0746  2F4B               	goto	l76
  1064  0747                     l762:
  1065                           
  1066                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1067  0747  0870               	movf	spiInit@sDataSample,w
  1068  0748  0472               	iorwf	spiInit@sTransmitEdge,w
  1069  0749  0094               	movwf	20	;volatile
  1070  074A                     l764:
  1071                           
  1072                           ;SPI.c: 23:         TRISC3 = 0;
  1073  074A  1187               	bcf	7,3	;volatile
  1074  074B                     l76:	
  1075                           ;SPI.c: 24:     }
  1076                           
  1077                           
  1078                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1079  074B  0873               	movf	spiInit@sType,w
  1080  074C  0471               	iorwf	spiInit@sClockIdle,w
  1081  074D  1283               	bcf	3,5	;RP0=0, select bank0
  1082  074E  1303               	bcf	3,6	;RP1=0, select bank0
  1083  074F  0094               	movwf	20	;volatile
  1084  0750                     l77:
  1085  0750  0008               	return
  1086  0751                     __end_of_spiInit:
  1087  007E                     btemp	set	126	;btemp
  1088  007E                     wtemp0	set	126
  1089                           
  1090                           	psect	config
  1091                           
  1092                           ;Config register CONFIG1 @ 0x2007
  1093                           ;	Oscillator Selection bits
  1094                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1095                           ;	Watchdog Timer Enable bit
  1096                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1097                           ;	Power-up Timer Enable bit
  1098                           ;	PWRTE = OFF, PWRT disabled
  1099                           ;	RE3/MCLR pin function select bit
  1100                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1101                           ;	Code Protection bit
  1102                           ;	CP = OFF, Program memory code protection is disabled
  1103                           ;	Data Code Protection bit
  1104                           ;	CPD = OFF, Data memory code protection is disabled
  1105                           ;	Brown Out Reset Selection bits
  1106                           ;	BOREN = ON, BOR enabled
  1107                           ;	Internal External Switchover bit
  1108                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1109                           ;	Fail-Safe Clock Monitor Enabled bit
  1110                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1111                           ;	Low Voltage Programming Enable bit
  1112                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1113                           ;	In-Circuit Debugger Mode bit
  1114                           ;	DEBUG = 0x1, unprogrammed default
  1115  2007                     	org	8199
  1116  2007  23F4               	dw	9204
  1117                           
  1118                           ;Config register CONFIG2 @ 0x2008
  1119                           ;	Brown-out Reset Selection bit
  1120                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1121                           ;	Flash Program Memory Self Write Enable bits
  1122                           ;	WRT = OFF, Write protection off
  1123  2008                     	org	8200
  1124  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _slave_3->_spiWrite
    _slave_2->_spiWrite
    _slave_1->_spiWrite
    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     405
                              _setup
                            _slave_1
                            _slave_2
                            _slave_3
 ---------------------------------------------------------------------------------
 (1) _slave_3                                              2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _slave_2                                              2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _slave_1                                              2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _slave_1
     _spiRead
       _spiReceiveWait
     _spiWrite
   _slave_2
     _spiRead
       _spiReceiveWait
     _spiWrite
   _slave_3
     _spiRead
       _spiReceiveWait
     _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 20:25:27 2021

            _SSPSTATbits 0094                       l51 07AA                       l60 0783  
                     l45 0756                       l54 07D1                       l80 072B  
                     l57 07F8                       l83 0731                       l76 074B  
                     l77 0750                       l94 073A                       l86 072A  
                     u10 0731                       u11 0730                       u30 0743  
                     u31 0742                       u47 07D9                       u57 07F0  
                     u67 07B2                       u77 07C9                       u87 078B  
                     u97 07A2                      l720 0787                      l722 0790  
                    l730 07AE                      l724 0796                      l732 07B7  
                    l740 07D5                      l726 07A7                      l718 0784  
                    l734 07BD                      l742 07DE                      l760 0745  
                    l736 07CE                      l728 07AB                      l744 07E4  
                    l762 0747                      l770 0777                      l690 0732  
                    l746 07F5                      l738 07D2                      l764 074A  
                    l756 073C                      l772 0778                      l692 0737  
                    l758 0743                      l774 0779                      l766 0769  
                    l686 072B                      l776 077A                      l768 0770  
                    l688 0726                      l778 0751                      _POT 0076  
                   _CONT 0075                     _main 0751                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _THERM 0074                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _setup 0769          __end_of_slave_1 07AB          __end_of_slave_2 07D2  
        __end_of_slave_3 07F9          __end_of_spiInit 0751          __end_of_spiRead 073B  
                  status 0003                    wtemp0 007E          __initialization 07F9  
           __end_of_main 0769                   ??_main 0074                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_spiWrite 072B  
              ??_slave_1 0071                ??_slave_2 0071                ??_slave_3 0071  
              ??_spiInit 0073                ??_spiRead 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 0784                  ??_setup 0074  
             __pmaintext 0751  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 07D2                  __ptext2 07AB  
                __ptext3 0784                  __ptext4 0725                  __ptext5 0732  
                __ptext6 072B                  __ptext7 0769                  __ptext8 073B  
                _slave_1 0784                  _slave_2 07AB                  _slave_3 07D2  
                _spiInit 073B                  _spiRead 0732     end_of_initialization 07FC  
             ??_spiWrite 0070                _PORTCbits 0007                _TRISCbits 0087  
            spiWrite@dat 0070           _spiReceiveWait 072B      start_initialization 07F9  
 __end_of_spiReceiveWait 0732              __pbssCOMMON 0074                ___latbits 0002  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_slave_1 0070  
               ?_slave_2 0070                 ?_slave_3 0070                 ?_spiInit 0070  
               ?_spiRead 0070           __size_of_setup 001B     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070         __size_of_slave_1 0027         __size_of_slave_2 0027  
       __size_of_slave_3 0027         __size_of_spiInit 0016         __size_of_spiRead 0009  
          __size_of_main 0018                 _spiWrite 0725             spiInit@sType 0073  
      spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
