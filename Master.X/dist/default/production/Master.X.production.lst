

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 22:28:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0013                     _SSPBUF	set	19
   380  0014                     _SSPCON	set	20
   381  0008                     _PORTD	set	8
   382  0006                     _PORTB	set	6
   383  0007                     _PORTCbits	set	7
   384  0049                     _RE1	set	73
   385  0048                     _RE0	set	72
   386  0094                     _SSPSTATbits	set	148
   387  0094                     _SSPSTAT	set	148
   388  0089                     _TRISE	set	137
   389  0088                     _TRISD	set	136
   390  0086                     _TRISB	set	134
   391  0087                     _TRISCbits	set	135
   392  0087                     _TRISC	set	135
   393  043B                     _TRISC3	set	1083
   394  043D                     _TRISC5	set	1085
   395  0189                     _ANSELH	set	393
   396  0188                     _ANSEL	set	392
   397                           
   398                           	psect	strings
   399  0003                     __pstrings:
   400  0003                     stringtab:
   401  0003                     __stringtab:
   402  0003                     stringcode:	
   403                           ;	String table - string pointers are 1 byte each
   404                           
   405  0003                     stringdir:
   406  0003  3000               	movlw	high stringdir
   407  0004  008A               	movwf	10
   408  0005  0804               	movf	4,w
   409  0006  0A84               	incf	4,f
   410  0007  0782               	addwf	2,f
   411  0008                     __stringbase:
   412  0008  3400               	retlw	0
   413  0009                     __end_of__stringtab:
   414  0009                     STR_1:
   415  0009  3453               	retlw	83	;'S'
   416  000A  3431               	retlw	49	;'1'
   417  000B  343A               	retlw	58	;':'
   418  000C  3420               	retlw	32	;' '
   419  000D  3400               	retlw	0
   420  000E                     STR_2:
   421  000E  3453               	retlw	83	;'S'
   422  000F  3432               	retlw	50	;'2'
   423  0010  343A               	retlw	58	;':'
   424  0011  3420               	retlw	32	;' '
   425  0012  3400               	retlw	0
   426  0013                     STR_3:
   427  0013  3453               	retlw	83	;'S'
   428  0014  3433               	retlw	51	;'3'
   429  0015  343A               	retlw	58	;':'
   430  0016  3420               	retlw	32	;' '
   431  0017  3400               	retlw	0
   432                           
   433                           	psect	cinit
   434  07ED                     start_initialization:	
   435                           ; #config settings
   436                           
   437  07ED                     __initialization:
   438                           
   439                           ; Clear objects allocated to COMMON
   440  07ED  01FA               	clrf	__pbssCOMMON& (0+127)
   441  07EE  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   442  07EF  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   443  07F0  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   444                           
   445                           ; Clear objects allocated to BANK0
   446  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   447  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   448  07F3  01A0               	clrf	__pbssBANK0& (0+127)
   449  07F4  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   450  07F5  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   451  07F6  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   452  07F7  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   453  07F8  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   454  07F9  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   455  07FA  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   456  07FB  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   457  07FC                     end_of_initialization:	
   458                           ;End of C runtime variable initialization code
   459                           
   460  07FC                     __end_of__initialization:
   461  07FC  0183               	clrf	3
   462  07FD  120A  118A  2DD5   	ljmp	_main	;jump to C main() function
   463                           
   464                           	psect	bssCOMMON
   465  007A                     __pbssCOMMON:
   466  007A                     _decC:
   467  007A                     	ds	1
   468  007B                     _unitC:
   469  007B                     	ds	1
   470  007C                     _decV:
   471  007C                     	ds	1
   472  007D                     _unitV:
   473  007D                     	ds	1
   474                           
   475                           	psect	bssBANK0
   476  0020                     __pbssBANK0:
   477  0020                     _cont_temp:
   478  0020                     	ds	2
   479  0022                     _adc_temp:
   480  0022                     	ds	2
   481  0024                     _hunC:
   482  0024                     	ds	1
   483  0025                     _hunV:
   484  0025                     	ds	1
   485  0026                     _THERM:
   486  0026                     	ds	1
   487  0027                     _CONT:
   488  0027                     	ds	1
   489  0028                     _POT:
   490  0028                     	ds	1
   491                           
   492                           	psect	cstackCOMMON
   493  0070                     __pcstackCOMMON:
   494  0070                     ?_setup:
   495  0070                     ?_Lcd_Init:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_Lcd_Clear:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_screen:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_slave_1:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_slave_2:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_slave_3:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_ss1_screen:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_ss2_screen:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_spiWrite:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_spiWrite:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_spiRead:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ??_spiRead:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_Lcd_Write_String:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_Lcd_Write_Char:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_spiInit:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_main:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_spiReceiveWait:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ??_spiReceiveWait:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_Lcd_Port:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ??_Lcd_Port:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_Lcd_Cmd:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?___wmul:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?___lwdiv:	
   562                           ; 2 bytes @ 0x0
   563                           
   564  0070                     spiInit@sDataSample:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0070                     spiWrite@dat:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     Lcd_Port@a:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ___wmul@multiplier:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ___lwdiv@divisor:	
   577                           ; 2 bytes @ 0x0
   578                           
   579                           
   580                           ; 2 bytes @ 0x0
   581  0070                     	ds	1
   582  0071                     ??_slave_1:
   583  0071                     ??_slave_2:	
   584                           ; 1 bytes @ 0x1
   585                           
   586  0071                     ??_slave_3:	
   587                           ; 1 bytes @ 0x1
   588                           
   589  0071                     ??_Lcd_Write_Char:	
   590                           ; 1 bytes @ 0x1
   591                           
   592  0071                     ??_Lcd_Cmd:	
   593                           ; 1 bytes @ 0x1
   594                           
   595  0071                     spiInit@sClockIdle:	
   596                           ; 1 bytes @ 0x1
   597                           
   598                           
   599                           ; 1 bytes @ 0x1
   600  0071                     	ds	1
   601  0072                     spiInit@sTransmitEdge:
   602  0072                     Lcd_Write_Char@a:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  0072                     ___wmul@multiplicand:	
   606                           ; 1 bytes @ 0x2
   607                           
   608  0072                     ___lwdiv@dividend:	
   609                           ; 2 bytes @ 0x2
   610                           
   611                           
   612                           ; 2 bytes @ 0x2
   613  0072                     	ds	1
   614  0073                     ??_Lcd_Write_String:
   615  0073                     ??_spiInit:	
   616                           ; 1 bytes @ 0x3
   617                           
   618  0073                     spiInit@sType:	
   619                           ; 1 bytes @ 0x3
   620                           
   621  0073                     Lcd_Cmd@a:	
   622                           ; 1 bytes @ 0x3
   623                           
   624  0073                     Lcd_Write_String@i:	
   625                           ; 1 bytes @ 0x3
   626                           
   627                           
   628                           ; 2 bytes @ 0x3
   629  0073                     	ds	1
   630  0074                     ??_setup:
   631  0074                     ??_Lcd_Init:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     ??_Lcd_Clear:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ?_Lcd_Set_Cursor:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     ??___wmul:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     ??___lwdiv:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     Lcd_Set_Cursor@b:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0074                     ___wmul@product:	
   650                           ; 1 bytes @ 0x4
   651                           
   652                           
   653                           ; 2 bytes @ 0x4
   654  0074                     	ds	1
   655  0075                     ??_Lcd_Set_Cursor:
   656  0075                     Lcd_Write_String@a:	
   657                           ; 1 bytes @ 0x5
   658                           
   659  0075                     ___lwdiv@quotient:	
   660                           ; 1 bytes @ 0x5
   661                           
   662                           
   663                           ; 2 bytes @ 0x5
   664  0075                     	ds	1
   665  0076                     Lcd_Set_Cursor@a:
   666                           
   667                           ; 1 bytes @ 0x6
   668  0076                     	ds	1
   669  0077                     Lcd_Set_Cursor@temp:
   670  0077                     ___lwdiv@counter:	
   671                           ; 1 bytes @ 0x7
   672                           
   673                           
   674                           ; 1 bytes @ 0x7
   675  0077                     	ds	1
   676  0078                     ??_screen:
   677  0078                     ??_ss1_screen:	
   678                           ; 1 bytes @ 0x8
   679                           
   680  0078                     ??_ss2_screen:	
   681                           ; 1 bytes @ 0x8
   682                           
   683                           
   684                           ; 1 bytes @ 0x8
   685  0078                     	ds	2
   686  007A                     ??_main:
   687                           
   688                           	psect	maintext
   689  05D5                     __pmaintext:	
   690                           ; 1 bytes @ 0xA
   691 ;;
   692 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   693 ;;
   694 ;; *************** function _main *****************
   695 ;; Defined at:
   696 ;;		line 74 in file "mainm.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : B00/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0
   713 ;;      Totals:         0       0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels required when called:    4
   716 ;; This function calls:
   717 ;;		_Lcd_Clear
   718 ;;		_Lcd_Init
   719 ;;		_screen
   720 ;;		_setup
   721 ;;		_slave_1
   722 ;;		_slave_2
   723 ;;		_slave_3
   724 ;;		_ss1_screen
   725 ;;		_ss2_screen
   726 ;; This function is called by:
   727 ;;		Startup code after reset
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           
   732                           ;psect for function _main
   733  05D5                     _main:
   734  05D5                     l1262:	
   735                           ;incstack = 0
   736                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   737                           
   738                           
   739                           ;mainm.c: 75:     setup();
   740  05D5  120A  118A  24A3  120A  118A  	fcall	_setup
   741                           
   742                           ;mainm.c: 76:     Lcd_Init();
   743  05DA  120A  118A  264A  120A  118A  	fcall	_Lcd_Init
   744                           
   745                           ;mainm.c: 77:     Lcd_Clear();
   746  05DF  120A  118A  2450  120A  118A  	fcall	_Lcd_Clear
   747  05E4                     l1264:
   748                           
   749                           ;mainm.c: 79:         screen();
   750  05E4  120A  118A  25A6  120A  118A  	fcall	_screen
   751  05E9                     l1266:
   752                           
   753                           ;mainm.c: 80:         slave_1();
   754  05E9  120A  118A  2554  120A  118A  	fcall	_slave_1
   755  05EE                     l1268:
   756                           
   757                           ;mainm.c: 81:         slave_2();
   758  05EE  120A  118A  257D  120A  118A  	fcall	_slave_2
   759  05F3                     l1270:
   760                           
   761                           ;mainm.c: 82:         slave_3();
   762  05F3  120A  118A  252D  120A  118A  	fcall	_slave_3
   763  05F8                     l1272:
   764                           
   765                           ;mainm.c: 83:         ss1_screen();
   766  05F8  120A  118A  26A4  120A  118A  	fcall	_ss1_screen
   767  05FD                     l1274:
   768                           
   769                           ;mainm.c: 84:         ss2_screen();
   770  05FD  120A  118A  2748  120A  118A  	fcall	_ss2_screen
   771  0602  2DE4               	goto	l1264
   772  0603  120A  118A  2800   	ljmp	start
   773  0606                     __end_of_main:
   774                           
   775                           	psect	text1
   776  0748                     __ptext1:	
   777 ;; *************** function _ss2_screen *****************
   778 ;; Defined at:
   779 ;;		line 158 in file "mainm.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          2       0       0       0       0
   796 ;;      Totals:         2       0       0       0       0
   797 ;;Total ram usage:        2 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    3
   800 ;; This function calls:
   801 ;;		_Lcd_Set_Cursor
   802 ;;		_Lcd_Write_Char
   803 ;;		___lwdiv
   804 ;;		___wmul
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           
   811                           ;psect for function _ss2_screen
   812  0748                     _ss2_screen:
   813  0748                     l1234:	
   814                           ;incstack = 0
   815                           ; Regs used in _ss2_screen: [wreg+status,2+status,0+pclath+cstack]
   816                           
   817                           
   818                           ;mainm.c: 159:     cont_temp = CONT;
   819  0748  1283               	bcf	3,5	;RP0=0, select bank0
   820  0749  1303               	bcf	3,6	;RP1=0, select bank0
   821  074A  0827               	movf	_CONT,w
   822  074B  00F8               	movwf	??_ss2_screen
   823  074C  01F9               	clrf	??_ss2_screen+1
   824  074D  0878               	movf	??_ss2_screen,w
   825  074E  00A0               	movwf	_cont_temp
   826  074F  0879               	movf	??_ss2_screen+1,w
   827  0750  00A1               	movwf	_cont_temp+1
   828  0751                     l1236:
   829                           
   830                           ;mainm.c: 160:     unitC = cont_temp/100;
   831  0751  3064               	movlw	100
   832  0752  00F0               	movwf	___lwdiv@divisor
   833  0753  3000               	movlw	0
   834  0754  00F1               	movwf	___lwdiv@divisor+1
   835  0755  0821               	movf	_cont_temp+1,w
   836  0756  00F3               	movwf	___lwdiv@dividend+1
   837  0757  0820               	movf	_cont_temp,w
   838  0758  00F2               	movwf	___lwdiv@dividend
   839  0759  120A  118A  2606  120A  118A  	fcall	___lwdiv
   840  075E  0870               	movf	?___lwdiv,w
   841  075F  00F8               	movwf	??_ss2_screen
   842  0760  0878               	movf	??_ss2_screen,w
   843  0761  00FB               	movwf	_unitC
   844  0762                     l1238:
   845                           
   846                           ;mainm.c: 161:     cont_temp = cont_temp - unitC*100;
   847  0762  087B               	movf	_unitC,w
   848  0763  00F8               	movwf	??_ss2_screen
   849  0764  01F9               	clrf	??_ss2_screen+1
   850  0765  0878               	movf	??_ss2_screen,w
   851  0766  00F0               	movwf	___wmul@multiplier
   852  0767  0879               	movf	??_ss2_screen+1,w
   853  0768  00F1               	movwf	___wmul@multiplier+1
   854  0769  309C               	movlw	156
   855  076A  00F2               	movwf	___wmul@multiplicand
   856  076B  30FF               	movlw	255
   857  076C  00F3               	movwf	___wmul@multiplicand+1
   858  076D  120A  118A  2508  120A  118A  	fcall	___wmul
   859  0772  1283               	bcf	3,5	;RP0=0, select bank0
   860  0773  1303               	bcf	3,6	;RP1=0, select bank0
   861  0774  0820               	movf	_cont_temp,w
   862  0775  0770               	addwf	?___wmul,w
   863  0776  00A0               	movwf	_cont_temp
   864  0777  0821               	movf	_cont_temp+1,w
   865  0778  1803               	skipnc
   866  0779  0A21               	incf	_cont_temp+1,w
   867  077A  0771               	addwf	?___wmul+1,w
   868  077B  00A1               	movwf	_cont_temp+1
   869  077C                     l1240:
   870                           
   871                           ;mainm.c: 162:     decC = cont_temp / 10;
   872  077C  300A               	movlw	10
   873  077D  00F0               	movwf	___lwdiv@divisor
   874  077E  3000               	movlw	0
   875  077F  00F1               	movwf	___lwdiv@divisor+1
   876  0780  0821               	movf	_cont_temp+1,w
   877  0781  00F3               	movwf	___lwdiv@dividend+1
   878  0782  0820               	movf	_cont_temp,w
   879  0783  00F2               	movwf	___lwdiv@dividend
   880  0784  120A  118A  2606  120A  118A  	fcall	___lwdiv
   881  0789  0870               	movf	?___lwdiv,w
   882  078A  00F8               	movwf	??_ss2_screen
   883  078B  0878               	movf	??_ss2_screen,w
   884  078C  00FA               	movwf	_decC
   885  078D                     l1242:
   886                           
   887                           ;mainm.c: 163:     cont_temp = cont_temp - decC*10;
   888  078D  087A               	movf	_decC,w
   889  078E  00F8               	movwf	??_ss2_screen
   890  078F  01F9               	clrf	??_ss2_screen+1
   891  0790  0878               	movf	??_ss2_screen,w
   892  0791  00F0               	movwf	___wmul@multiplier
   893  0792  0879               	movf	??_ss2_screen+1,w
   894  0793  00F1               	movwf	___wmul@multiplier+1
   895  0794  30F6               	movlw	246
   896  0795  00F2               	movwf	___wmul@multiplicand
   897  0796  30FF               	movlw	255
   898  0797  00F3               	movwf	___wmul@multiplicand+1
   899  0798  120A  118A  2508  120A  118A  	fcall	___wmul
   900  079D  1283               	bcf	3,5	;RP0=0, select bank0
   901  079E  1303               	bcf	3,6	;RP1=0, select bank0
   902  079F  0820               	movf	_cont_temp,w
   903  07A0  0770               	addwf	?___wmul,w
   904  07A1  00A0               	movwf	_cont_temp
   905  07A2  0821               	movf	_cont_temp+1,w
   906  07A3  1803               	skipnc
   907  07A4  0A21               	incf	_cont_temp+1,w
   908  07A5  0771               	addwf	?___wmul+1,w
   909  07A6  00A1               	movwf	_cont_temp+1
   910                           
   911                           ;mainm.c: 164:     hunC = cont_temp;
   912  07A7  0820               	movf	_cont_temp,w
   913  07A8  00F8               	movwf	??_ss2_screen
   914  07A9  0878               	movf	??_ss2_screen,w
   915  07AA  00A4               	movwf	_hunC
   916  07AB                     l1244:
   917                           
   918                           ;mainm.c: 166:     unitC = unitC + 48;
   919  07AB  087B               	movf	_unitC,w
   920  07AC  3E30               	addlw	48
   921  07AD  00F8               	movwf	??_ss2_screen
   922  07AE  0878               	movf	??_ss2_screen,w
   923  07AF  00FB               	movwf	_unitC
   924  07B0                     l1246:
   925                           
   926                           ;mainm.c: 167:     decC = decC + 48;
   927  07B0  087A               	movf	_decC,w
   928  07B1  3E30               	addlw	48
   929  07B2  00F8               	movwf	??_ss2_screen
   930  07B3  0878               	movf	??_ss2_screen,w
   931  07B4  00FA               	movwf	_decC
   932  07B5                     l1248:
   933                           
   934                           ;mainm.c: 168:     hunC = hunC + 48;
   935  07B5  0824               	movf	_hunC,w
   936  07B6  3E30               	addlw	48
   937  07B7  00F8               	movwf	??_ss2_screen
   938  07B8  0878               	movf	??_ss2_screen,w
   939  07B9  00A4               	movwf	_hunC
   940  07BA                     l1250:
   941                           
   942                           ;mainm.c: 170:     Lcd_Set_Cursor(2,7);
   943  07BA  3007               	movlw	7
   944  07BB  00F8               	movwf	??_ss2_screen
   945  07BC  0878               	movf	??_ss2_screen,w
   946  07BD  00F4               	movwf	Lcd_Set_Cursor@b
   947  07BE  3002               	movlw	2
   948  07BF  120A  118A  24BF  120A  118A  	fcall	_Lcd_Set_Cursor
   949  07C4                     l1252:
   950                           
   951                           ;mainm.c: 171:     Lcd_Write_Char (unitC);
   952  07C4  087B               	movf	_unitC,w
   953  07C5  120A  118A  245D  120A  118A  	fcall	_Lcd_Write_Char
   954  07CA                     l1254:
   955                           
   956                           ;mainm.c: 172:     Lcd_Set_Cursor(2,8);
   957  07CA  3008               	movlw	8
   958  07CB  00F8               	movwf	??_ss2_screen
   959  07CC  0878               	movf	??_ss2_screen,w
   960  07CD  00F4               	movwf	Lcd_Set_Cursor@b
   961  07CE  3002               	movlw	2
   962  07CF  120A  118A  24BF  120A  118A  	fcall	_Lcd_Set_Cursor
   963  07D4                     l1256:
   964                           
   965                           ;mainm.c: 173:     Lcd_Write_Char (decC);
   966  07D4  087A               	movf	_decC,w
   967  07D5  120A  118A  245D  120A  118A  	fcall	_Lcd_Write_Char
   968  07DA                     l1258:
   969                           
   970                           ;mainm.c: 174:     Lcd_Set_Cursor(2,9);
   971  07DA  3009               	movlw	9
   972  07DB  00F8               	movwf	??_ss2_screen
   973  07DC  0878               	movf	??_ss2_screen,w
   974  07DD  00F4               	movwf	Lcd_Set_Cursor@b
   975  07DE  3002               	movlw	2
   976  07DF  120A  118A  24BF  120A  118A  	fcall	_Lcd_Set_Cursor
   977  07E4                     l1260:
   978                           
   979                           ;mainm.c: 175:     Lcd_Write_Char (hunC);
   980  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   981  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   982  07E6  0824               	movf	_hunC,w
   983  07E7  120A  118A  245D  120A  118A  	fcall	_Lcd_Write_Char
   984  07EC                     l100:
   985  07EC  0008               	return
   986  07ED                     __end_of_ss2_screen:
   987                           
   988                           	psect	text2
   989  06A4                     __ptext2:	
   990 ;; *************** function _ss1_screen *****************
   991 ;; Defined at:
   992 ;;		line 137 in file "mainm.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, pclath, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0
  1008 ;;      Temps:          2       0       0       0       0
  1009 ;;      Totals:         2       0       0       0       0
  1010 ;;Total ram usage:        2 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    3
  1013 ;; This function calls:
  1014 ;;		_Lcd_Set_Cursor
  1015 ;;		_Lcd_Write_Char
  1016 ;;		___lwdiv
  1017 ;;		___wmul
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _ss1_screen
  1025  06A4                     _ss1_screen:
  1026  06A4                     l1206:	
  1027                           ;incstack = 0
  1028                           ; Regs used in _ss1_screen: [wreg+status,2+status,0+pclath+cstack]
  1029                           
  1030                           
  1031                           ;mainm.c: 139:     adc_temp = POT * 2;
  1032  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1033  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1034  06A6  0828               	movf	_POT,w
  1035  06A7  00F8               	movwf	??_ss1_screen
  1036  06A8  01F9               	clrf	??_ss1_screen+1
  1037  06A9  1003               	clrc
  1038  06AA  0D78               	rlf	??_ss1_screen,w
  1039  06AB  00A2               	movwf	_adc_temp
  1040  06AC  0D79               	rlf	??_ss1_screen+1,w
  1041  06AD  00A3               	movwf	_adc_temp+1
  1042  06AE                     l1208:
  1043                           
  1044                           ;mainm.c: 140:     unitV = adc_temp/100;
  1045  06AE  3064               	movlw	100
  1046  06AF  00F0               	movwf	___lwdiv@divisor
  1047  06B0  3000               	movlw	0
  1048  06B1  00F1               	movwf	___lwdiv@divisor+1
  1049  06B2  0823               	movf	_adc_temp+1,w
  1050  06B3  00F3               	movwf	___lwdiv@dividend+1
  1051  06B4  0822               	movf	_adc_temp,w
  1052  06B5  00F2               	movwf	___lwdiv@dividend
  1053  06B6  120A  118A  2606  120A  118A  	fcall	___lwdiv
  1054  06BB  0870               	movf	?___lwdiv,w
  1055  06BC  00F8               	movwf	??_ss1_screen
  1056  06BD  0878               	movf	??_ss1_screen,w
  1057  06BE  00FD               	movwf	_unitV
  1058  06BF                     l1210:
  1059                           
  1060                           ;mainm.c: 141:     adc_temp = adc_temp - unitV*100;
  1061  06BF  087D               	movf	_unitV,w
  1062  06C0  00F8               	movwf	??_ss1_screen
  1063  06C1  01F9               	clrf	??_ss1_screen+1
  1064  06C2  0878               	movf	??_ss1_screen,w
  1065  06C3  00F0               	movwf	___wmul@multiplier
  1066  06C4  0879               	movf	??_ss1_screen+1,w
  1067  06C5  00F1               	movwf	___wmul@multiplier+1
  1068  06C6  309C               	movlw	156
  1069  06C7  00F2               	movwf	___wmul@multiplicand
  1070  06C8  30FF               	movlw	255
  1071  06C9  00F3               	movwf	___wmul@multiplicand+1
  1072  06CA  120A  118A  2508  120A  118A  	fcall	___wmul
  1073  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1074  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1075  06D1  0822               	movf	_adc_temp,w
  1076  06D2  0770               	addwf	?___wmul,w
  1077  06D3  00A2               	movwf	_adc_temp
  1078  06D4  0823               	movf	_adc_temp+1,w
  1079  06D5  1803               	skipnc
  1080  06D6  0A23               	incf	_adc_temp+1,w
  1081  06D7  0771               	addwf	?___wmul+1,w
  1082  06D8  00A3               	movwf	_adc_temp+1
  1083  06D9                     l1212:
  1084                           
  1085                           ;mainm.c: 142:     decV = adc_temp / 10;
  1086  06D9  300A               	movlw	10
  1087  06DA  00F0               	movwf	___lwdiv@divisor
  1088  06DB  3000               	movlw	0
  1089  06DC  00F1               	movwf	___lwdiv@divisor+1
  1090  06DD  0823               	movf	_adc_temp+1,w
  1091  06DE  00F3               	movwf	___lwdiv@dividend+1
  1092  06DF  0822               	movf	_adc_temp,w
  1093  06E0  00F2               	movwf	___lwdiv@dividend
  1094  06E1  120A  118A  2606  120A  118A  	fcall	___lwdiv
  1095  06E6  0870               	movf	?___lwdiv,w
  1096  06E7  00F8               	movwf	??_ss1_screen
  1097  06E8  0878               	movf	??_ss1_screen,w
  1098  06E9  00FC               	movwf	_decV
  1099  06EA                     l1214:
  1100                           
  1101                           ;mainm.c: 143:     adc_temp = adc_temp - decV*10;
  1102  06EA  087C               	movf	_decV,w
  1103  06EB  00F8               	movwf	??_ss1_screen
  1104  06EC  01F9               	clrf	??_ss1_screen+1
  1105  06ED  0878               	movf	??_ss1_screen,w
  1106  06EE  00F0               	movwf	___wmul@multiplier
  1107  06EF  0879               	movf	??_ss1_screen+1,w
  1108  06F0  00F1               	movwf	___wmul@multiplier+1
  1109  06F1  30F6               	movlw	246
  1110  06F2  00F2               	movwf	___wmul@multiplicand
  1111  06F3  30FF               	movlw	255
  1112  06F4  00F3               	movwf	___wmul@multiplicand+1
  1113  06F5  120A  118A  2508  120A  118A  	fcall	___wmul
  1114  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1115  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1116  06FC  0822               	movf	_adc_temp,w
  1117  06FD  0770               	addwf	?___wmul,w
  1118  06FE  00A2               	movwf	_adc_temp
  1119  06FF  0823               	movf	_adc_temp+1,w
  1120  0700  1803               	skipnc
  1121  0701  0A23               	incf	_adc_temp+1,w
  1122  0702  0771               	addwf	?___wmul+1,w
  1123  0703  00A3               	movwf	_adc_temp+1
  1124                           
  1125                           ;mainm.c: 144:     hunV = adc_temp;
  1126  0704  0822               	movf	_adc_temp,w
  1127  0705  00F8               	movwf	??_ss1_screen
  1128  0706  0878               	movf	??_ss1_screen,w
  1129  0707  00A5               	movwf	_hunV
  1130  0708                     l1216:
  1131                           
  1132                           ;mainm.c: 146:     unitV = unitV + 48;
  1133  0708  087D               	movf	_unitV,w
  1134  0709  3E30               	addlw	48
  1135  070A  00F8               	movwf	??_ss1_screen
  1136  070B  0878               	movf	??_ss1_screen,w
  1137  070C  00FD               	movwf	_unitV
  1138  070D                     l1218:
  1139                           
  1140                           ;mainm.c: 147:     decV = decV + 48;
  1141  070D  087C               	movf	_decV,w
  1142  070E  3E30               	addlw	48
  1143  070F  00F8               	movwf	??_ss1_screen
  1144  0710  0878               	movf	??_ss1_screen,w
  1145  0711  00FC               	movwf	_decV
  1146  0712                     l1220:
  1147                           
  1148                           ;mainm.c: 148:     hunV = hunV + 48;
  1149  0712  0825               	movf	_hunV,w
  1150  0713  3E30               	addlw	48
  1151  0714  00F8               	movwf	??_ss1_screen
  1152  0715  0878               	movf	??_ss1_screen,w
  1153  0716  00A5               	movwf	_hunV
  1154  0717                     l1222:
  1155                           
  1156                           ;mainm.c: 150:     Lcd_Set_Cursor(2,1);
  1157  0717  01F4               	clrf	Lcd_Set_Cursor@b
  1158  0718  0AF4               	incf	Lcd_Set_Cursor@b,f
  1159  0719  3002               	movlw	2
  1160  071A  120A  118A  24BF  120A  118A  	fcall	_Lcd_Set_Cursor
  1161  071F                     l1224:
  1162                           
  1163                           ;mainm.c: 151:     Lcd_Write_Char (unitV);
  1164  071F  087D               	movf	_unitV,w
  1165  0720  120A  118A  245D  120A  118A  	fcall	_Lcd_Write_Char
  1166  0725                     l1226:
  1167                           
  1168                           ;mainm.c: 152:     Lcd_Set_Cursor(2,2);
  1169  0725  3002               	movlw	2
  1170  0726  00F8               	movwf	??_ss1_screen
  1171  0727  0878               	movf	??_ss1_screen,w
  1172  0728  00F4               	movwf	Lcd_Set_Cursor@b
  1173  0729  3002               	movlw	2
  1174  072A  120A  118A  24BF  120A  118A  	fcall	_Lcd_Set_Cursor
  1175  072F                     l1228:
  1176                           
  1177                           ;mainm.c: 153:     Lcd_Write_Char (decV);
  1178  072F  087C               	movf	_decV,w
  1179  0730  120A  118A  245D  120A  118A  	fcall	_Lcd_Write_Char
  1180  0735                     l1230:
  1181                           
  1182                           ;mainm.c: 154:     Lcd_Set_Cursor(2,3);
  1183  0735  3003               	movlw	3
  1184  0736  00F8               	movwf	??_ss1_screen
  1185  0737  0878               	movf	??_ss1_screen,w
  1186  0738  00F4               	movwf	Lcd_Set_Cursor@b
  1187  0739  3002               	movlw	2
  1188  073A  120A  118A  24BF  120A  118A  	fcall	_Lcd_Set_Cursor
  1189  073F                     l1232:
  1190                           
  1191                           ;mainm.c: 155:     Lcd_Write_Char (hunV);
  1192  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0741  0825               	movf	_hunV,w
  1195  0742  120A  118A  245D  120A  118A  	fcall	_Lcd_Write_Char
  1196  0747                     l97:
  1197  0747  0008               	return
  1198  0748                     __end_of_ss1_screen:
  1199                           
  1200                           	psect	text3
  1201  0508                     __ptext3:	
  1202 ;; *************** function ___wmul *****************
  1203 ;; Defined at:
  1204 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  multiplier      2    0[COMMON] unsigned int 
  1207 ;;  multiplicand    2    2[COMMON] unsigned int 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  product         2    4[COMMON] unsigned int 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  2    0[COMMON] unsigned int 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         4       0       0       0       0
  1220 ;;      Locals:         2       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0
  1222 ;;      Totals:         6       0       0       0       0
  1223 ;;Total ram usage:        6 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_ss1_screen
  1229 ;;		_ss2_screen
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function ___wmul
  1235  0508                     ___wmul:
  1236  0508                     l1090:	
  1237                           ;incstack = 0
  1238                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1239                           
  1240  0508  01F4               	clrf	___wmul@product
  1241  0509  01F5               	clrf	___wmul@product+1
  1242  050A                     l1092:
  1243  050A  1C70               	btfss	___wmul@multiplier,0
  1244  050B  2D0D               	goto	u221
  1245  050C  2D0E               	goto	u220
  1246  050D                     u221:
  1247  050D  2D14               	goto	l264
  1248  050E                     u220:
  1249  050E                     l1094:
  1250  050E  0872               	movf	___wmul@multiplicand,w
  1251  050F  07F4               	addwf	___wmul@product,f
  1252  0510  1803               	skipnc
  1253  0511  0AF5               	incf	___wmul@product+1,f
  1254  0512  0873               	movf	___wmul@multiplicand+1,w
  1255  0513  07F5               	addwf	___wmul@product+1,f
  1256  0514                     l264:
  1257  0514  3001               	movlw	1
  1258  0515                     u235:
  1259  0515  1003               	clrc
  1260  0516  0DF2               	rlf	___wmul@multiplicand,f
  1261  0517  0DF3               	rlf	___wmul@multiplicand+1,f
  1262  0518  3EFF               	addlw	-1
  1263  0519  1D03               	skipz
  1264  051A  2D15               	goto	u235
  1265  051B                     l1096:
  1266  051B  3001               	movlw	1
  1267  051C                     u245:
  1268  051C  1003               	clrc
  1269  051D  0CF1               	rrf	___wmul@multiplier+1,f
  1270  051E  0CF0               	rrf	___wmul@multiplier,f
  1271  051F  3EFF               	addlw	-1
  1272  0520  1D03               	skipz
  1273  0521  2D1C               	goto	u245
  1274  0522                     l1098:
  1275  0522  0870               	movf	___wmul@multiplier,w
  1276  0523  0471               	iorwf	___wmul@multiplier+1,w
  1277  0524  1D03               	btfss	3,2
  1278  0525  2D27               	goto	u251
  1279  0526  2D28               	goto	u250
  1280  0527                     u251:
  1281  0527  2D0A               	goto	l1092
  1282  0528                     u250:
  1283  0528                     l1100:
  1284  0528  0875               	movf	___wmul@product+1,w
  1285  0529  00F1               	movwf	?___wmul+1
  1286  052A  0874               	movf	___wmul@product,w
  1287  052B  00F0               	movwf	?___wmul
  1288  052C                     l266:
  1289  052C  0008               	return
  1290  052D                     __end_of___wmul:
  1291                           
  1292                           	psect	text4
  1293  0606                     __ptext4:	
  1294 ;; *************** function ___lwdiv *****************
  1295 ;; Defined at:
  1296 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  divisor         2    0[COMMON] unsigned int 
  1299 ;;  dividend        2    2[COMMON] unsigned int 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  quotient        2    5[COMMON] unsigned int 
  1302 ;;  counter         1    7[COMMON] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2    0[COMMON] unsigned int 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         4       0       0       0       0
  1313 ;;      Locals:         3       0       0       0       0
  1314 ;;      Temps:          1       0       0       0       0
  1315 ;;      Totals:         8       0       0       0       0
  1316 ;;Total ram usage:        8 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_ss1_screen
  1322 ;;		_ss2_screen
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           
  1327                           ;psect for function ___lwdiv
  1328  0606                     ___lwdiv:
  1329  0606                     l1104:	
  1330                           ;incstack = 0
  1331                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1332                           
  1333  0606  01F5               	clrf	___lwdiv@quotient
  1334  0607  01F6               	clrf	___lwdiv@quotient+1
  1335  0608                     l1106:
  1336  0608  0870               	movf	___lwdiv@divisor,w
  1337  0609  0471               	iorwf	___lwdiv@divisor+1,w
  1338  060A  1903               	btfsc	3,2
  1339  060B  2E0D               	goto	u261
  1340  060C  2E0E               	goto	u260
  1341  060D                     u261:
  1342  060D  2E45               	goto	l1126
  1343  060E                     u260:
  1344  060E                     l1108:
  1345  060E  01F7               	clrf	___lwdiv@counter
  1346  060F  0AF7               	incf	___lwdiv@counter,f
  1347  0610  2E1C               	goto	l1114
  1348  0611                     l1110:
  1349  0611  3001               	movlw	1
  1350  0612                     u275:
  1351  0612  1003               	clrc
  1352  0613  0DF0               	rlf	___lwdiv@divisor,f
  1353  0614  0DF1               	rlf	___lwdiv@divisor+1,f
  1354  0615  3EFF               	addlw	-1
  1355  0616  1D03               	skipz
  1356  0617  2E12               	goto	u275
  1357  0618                     l1112:
  1358  0618  3001               	movlw	1
  1359  0619  00F4               	movwf	??___lwdiv
  1360  061A  0874               	movf	??___lwdiv,w
  1361  061B  07F7               	addwf	___lwdiv@counter,f
  1362  061C                     l1114:
  1363  061C  1FF1               	btfss	___lwdiv@divisor+1,7
  1364  061D  2E1F               	goto	u281
  1365  061E  2E20               	goto	u280
  1366  061F                     u281:
  1367  061F  2E11               	goto	l1110
  1368  0620                     u280:
  1369  0620                     l1116:
  1370  0620  3001               	movlw	1
  1371  0621                     u295:
  1372  0621  1003               	clrc
  1373  0622  0DF5               	rlf	___lwdiv@quotient,f
  1374  0623  0DF6               	rlf	___lwdiv@quotient+1,f
  1375  0624  3EFF               	addlw	-1
  1376  0625  1D03               	skipz
  1377  0626  2E21               	goto	u295
  1378  0627  0871               	movf	___lwdiv@divisor+1,w
  1379  0628  0273               	subwf	___lwdiv@dividend+1,w
  1380  0629  1D03               	skipz
  1381  062A  2E2D               	goto	u305
  1382  062B  0870               	movf	___lwdiv@divisor,w
  1383  062C  0272               	subwf	___lwdiv@dividend,w
  1384  062D                     u305:
  1385  062D  1C03               	skipc
  1386  062E  2E30               	goto	u301
  1387  062F  2E31               	goto	u300
  1388  0630                     u301:
  1389  0630  2E38               	goto	l1122
  1390  0631                     u300:
  1391  0631                     l1118:
  1392  0631  0870               	movf	___lwdiv@divisor,w
  1393  0632  02F2               	subwf	___lwdiv@dividend,f
  1394  0633  0871               	movf	___lwdiv@divisor+1,w
  1395  0634  1C03               	skipc
  1396  0635  03F3               	decf	___lwdiv@dividend+1,f
  1397  0636  02F3               	subwf	___lwdiv@dividend+1,f
  1398  0637                     l1120:
  1399  0637  1475               	bsf	___lwdiv@quotient,0
  1400  0638                     l1122:
  1401  0638  3001               	movlw	1
  1402  0639                     u315:
  1403  0639  1003               	clrc
  1404  063A  0CF1               	rrf	___lwdiv@divisor+1,f
  1405  063B  0CF0               	rrf	___lwdiv@divisor,f
  1406  063C  3EFF               	addlw	-1
  1407  063D  1D03               	skipz
  1408  063E  2E39               	goto	u315
  1409  063F                     l1124:
  1410  063F  3001               	movlw	1
  1411  0640  02F7               	subwf	___lwdiv@counter,f
  1412  0641  1D03               	btfss	3,2
  1413  0642  2E44               	goto	u321
  1414  0643  2E45               	goto	u320
  1415  0644                     u321:
  1416  0644  2E20               	goto	l1116
  1417  0645                     u320:
  1418  0645                     l1126:
  1419  0645  0876               	movf	___lwdiv@quotient+1,w
  1420  0646  00F1               	movwf	?___lwdiv+1
  1421  0647  0875               	movf	___lwdiv@quotient,w
  1422  0648  00F0               	movwf	?___lwdiv
  1423  0649                     l536:
  1424  0649  0008               	return
  1425  064A                     __end_of___lwdiv:
  1426                           
  1427                           	psect	text5
  1428  052D                     __ptext5:	
  1429 ;; *************** function _slave_3 *****************
  1430 ;; Defined at:
  1431 ;;		line 116 in file "mainm.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          2       0       0       0       0
  1448 ;;      Totals:         2       0       0       0       0
  1449 ;;Total ram usage:        2 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    2
  1452 ;; This function calls:
  1453 ;;		_spiRead
  1454 ;;		_spiWrite
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _slave_3
  1462  052D                     _slave_3:
  1463  052D                     l1196:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _slave_3: [wreg+status,2+status,0+pclath+cstack]
  1466                           
  1467                           
  1468                           ;mainm.c: 117:     PORTCbits.RC2 = 0;
  1469  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1470  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1471  052F  1107               	bcf	7,2	;volatile
  1472  0530                     l1198:
  1473                           
  1474                           ;mainm.c: 118:     _delay((unsigned long)((1)*((8000000)/4000.0)));
  1475  0530  3003               	movlw	3
  1476  0531  00F2               	movwf	??_slave_3+1
  1477  0532  3097               	movlw	151
  1478  0533  00F1               	movwf	??_slave_3
  1479  0534                     u337:
  1480  0534  0BF1               	decfsz	??_slave_3,f
  1481  0535  2D34               	goto	u337
  1482  0536  0BF2               	decfsz	??_slave_3+1,f
  1483  0537  2D34               	goto	u337
  1484  0538  2D39               	nop2
  1485  0539                     l1200:
  1486                           
  1487                           ;mainm.c: 120:     spiWrite(1);
  1488  0539  3001               	movlw	1
  1489  053A  120A  118A  243A  120A  118A  	fcall	_spiWrite
  1490  053F                     l1202:
  1491                           
  1492                           ;mainm.c: 121:     PORTB = spiRead();
  1493  053F  120A  118A  2447  120A  118A  	fcall	_spiRead
  1494  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0546  0086               	movwf	6	;volatile
  1497                           
  1498                           ;mainm.c: 123:     _delay((unsigned long)((1)*((8000000)/4000.0)));
  1499  0547  3003               	movlw	3
  1500  0548  00F2               	movwf	??_slave_3+1
  1501  0549  3097               	movlw	151
  1502  054A  00F1               	movwf	??_slave_3
  1503  054B                     u347:
  1504  054B  0BF1               	decfsz	??_slave_3,f
  1505  054C  2D4B               	goto	u347
  1506  054D  0BF2               	decfsz	??_slave_3+1,f
  1507  054E  2D4B               	goto	u347
  1508  054F  2D50               	nop2
  1509  0550                     l1204:
  1510                           
  1511                           ;mainm.c: 124:     PORTCbits.RC2 = 1;
  1512  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1513  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0552  1507               	bsf	7,2	;volatile
  1515  0553                     l91:
  1516  0553  0008               	return
  1517  0554                     __end_of_slave_3:
  1518                           
  1519                           	psect	text6
  1520  057D                     __ptext6:	
  1521 ;; *************** function _slave_2 *****************
  1522 ;; Defined at:
  1523 ;;		line 104 in file "mainm.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0, pclath, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0
  1539 ;;      Temps:          2       0       0       0       0
  1540 ;;      Totals:         2       0       0       0       0
  1541 ;;Total ram usage:        2 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    2
  1544 ;; This function calls:
  1545 ;;		_spiRead
  1546 ;;		_spiWrite
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           
  1553                           ;psect for function _slave_2
  1554  057D                     _slave_2:
  1555  057D                     l1186:	
  1556                           ;incstack = 0
  1557                           ; Regs used in _slave_2: [wreg+status,2+status,0+pclath+cstack]
  1558                           
  1559                           
  1560                           ;mainm.c: 105:     PORTCbits.RC1 = 0;
  1561  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1562  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1563  057F  1087               	bcf	7,1	;volatile
  1564  0580                     l1188:
  1565                           
  1566                           ;mainm.c: 106:     _delay((unsigned long)((1)*((8000000)/4000.0)));
  1567  0580  3003               	movlw	3
  1568  0581  00F2               	movwf	??_slave_2+1
  1569  0582  3097               	movlw	151
  1570  0583  00F1               	movwf	??_slave_2
  1571  0584                     u357:
  1572  0584  0BF1               	decfsz	??_slave_2,f
  1573  0585  2D84               	goto	u357
  1574  0586  0BF2               	decfsz	??_slave_2+1,f
  1575  0587  2D84               	goto	u357
  1576  0588  2D89               	nop2
  1577  0589                     l1190:
  1578                           
  1579                           ;mainm.c: 108:     spiWrite(1);
  1580  0589  3001               	movlw	1
  1581  058A  120A  118A  243A  120A  118A  	fcall	_spiWrite
  1582  058F                     l1192:
  1583                           
  1584                           ;mainm.c: 109:     CONT = spiRead();
  1585  058F  120A  118A  2447  120A  118A  	fcall	_spiRead
  1586  0594  00F1               	movwf	??_slave_2
  1587  0595  0871               	movf	??_slave_2,w
  1588  0596  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0597  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0598  00A7               	movwf	_CONT
  1591                           
  1592                           ;mainm.c: 111:     _delay((unsigned long)((1)*((8000000)/4000.0)));
  1593  0599  3003               	movlw	3
  1594  059A  00F2               	movwf	??_slave_2+1
  1595  059B  3097               	movlw	151
  1596  059C  00F1               	movwf	??_slave_2
  1597  059D                     u367:
  1598  059D  0BF1               	decfsz	??_slave_2,f
  1599  059E  2D9D               	goto	u367
  1600  059F  0BF2               	decfsz	??_slave_2+1,f
  1601  05A0  2D9D               	goto	u367
  1602  05A1  2DA2               	nop2
  1603  05A2                     l1194:
  1604                           
  1605                           ;mainm.c: 112:     PORTCbits.RC1 = 1;
  1606  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1607  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1608  05A4  1487               	bsf	7,1	;volatile
  1609  05A5                     l88:
  1610  05A5  0008               	return
  1611  05A6                     __end_of_slave_2:
  1612                           
  1613                           	psect	text7
  1614  0554                     __ptext7:	
  1615 ;; *************** function _slave_1 *****************
  1616 ;; Defined at:
  1617 ;;		line 93 in file "mainm.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0, pclath, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0
  1633 ;;      Temps:          2       0       0       0       0
  1634 ;;      Totals:         2       0       0       0       0
  1635 ;;Total ram usage:        2 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    2
  1638 ;; This function calls:
  1639 ;;		_spiRead
  1640 ;;		_spiWrite
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function _slave_1
  1648  0554                     _slave_1:
  1649  0554                     l1176:	
  1650                           ;incstack = 0
  1651                           ; Regs used in _slave_1: [wreg+status,2+status,0+pclath+cstack]
  1652                           
  1653                           
  1654                           ;mainm.c: 94:     PORTCbits.RC0 = 0;
  1655  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0556  1007               	bcf	7,0	;volatile
  1658  0557                     l1178:
  1659                           
  1660                           ;mainm.c: 95:     _delay((unsigned long)((1)*((8000000)/4000.0)));
  1661  0557  3003               	movlw	3
  1662  0558  00F2               	movwf	??_slave_1+1
  1663  0559  3097               	movlw	151
  1664  055A  00F1               	movwf	??_slave_1
  1665  055B                     u377:
  1666  055B  0BF1               	decfsz	??_slave_1,f
  1667  055C  2D5B               	goto	u377
  1668  055D  0BF2               	decfsz	??_slave_1+1,f
  1669  055E  2D5B               	goto	u377
  1670  055F  2D60               	nop2
  1671  0560                     l1180:
  1672                           
  1673                           ;mainm.c: 97:     spiWrite(1);
  1674  0560  3001               	movlw	1
  1675  0561  120A  118A  243A  120A  118A  	fcall	_spiWrite
  1676  0566                     l1182:
  1677                           
  1678                           ;mainm.c: 98:     POT = spiRead();
  1679  0566  120A  118A  2447  120A  118A  	fcall	_spiRead
  1680  056B  00F1               	movwf	??_slave_1
  1681  056C  0871               	movf	??_slave_1,w
  1682  056D  1283               	bcf	3,5	;RP0=0, select bank0
  1683  056E  1303               	bcf	3,6	;RP1=0, select bank0
  1684  056F  00A8               	movwf	_POT
  1685                           
  1686                           ;mainm.c: 100:     _delay((unsigned long)((1)*((8000000)/4000.0)));
  1687  0570  3003               	movlw	3
  1688  0571  00F2               	movwf	??_slave_1+1
  1689  0572  3097               	movlw	151
  1690  0573  00F1               	movwf	??_slave_1
  1691  0574                     u387:
  1692  0574  0BF1               	decfsz	??_slave_1,f
  1693  0575  2D74               	goto	u387
  1694  0576  0BF2               	decfsz	??_slave_1+1,f
  1695  0577  2D74               	goto	u387
  1696  0578  2D79               	nop2
  1697  0579                     l1184:
  1698                           
  1699                           ;mainm.c: 101:     PORTCbits.RC0 = 1;
  1700  0579  1283               	bcf	3,5	;RP0=0, select bank0
  1701  057A  1303               	bcf	3,6	;RP1=0, select bank0
  1702  057B  1407               	bsf	7,0	;volatile
  1703  057C                     l85:
  1704  057C  0008               	return
  1705  057D                     __end_of_slave_1:
  1706                           
  1707                           	psect	text8
  1708  043A                     __ptext8:	
  1709 ;; *************** function _spiWrite *****************
  1710 ;; Defined at:
  1711 ;;		line 34 in file "SPI.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  dat             1    wreg     unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  dat             1    0[COMMON] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0
  1728 ;;      Totals:         1       0       0       0       0
  1729 ;;Total ram usage:        1 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_slave_1
  1735 ;;		_slave_2
  1736 ;;		_slave_3
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function _spiWrite
  1742  043A                     _spiWrite:
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in _spiWrite: [wreg]
  1746                           ;spiWrite@dat stored from wreg
  1747  043A  00F0               	movwf	spiWrite@dat
  1748  043B                     l1052:
  1749                           
  1750                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1751  043B  0870               	movf	spiWrite@dat,w
  1752  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1753  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1754  043E  0093               	movwf	19	;volatile
  1755  043F                     l129:
  1756  043F  0008               	return
  1757  0440                     __end_of_spiWrite:
  1758                           
  1759                           	psect	text9
  1760  0447                     __ptext9:	
  1761 ;; *************** function _spiRead *****************
  1762 ;; Defined at:
  1763 ;;		line 47 in file "SPI.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      unsigned char 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0, pclath, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0
  1780 ;;      Totals:         0       0       0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    1
  1784 ;; This function calls:
  1785 ;;		_spiReceiveWait
  1786 ;; This function is called by:
  1787 ;;		_slave_1
  1788 ;;		_slave_2
  1789 ;;		_slave_3
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function _spiRead
  1795  0447                     _spiRead:
  1796  0447                     l1054:	
  1797                           ;incstack = 0
  1798                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1799                           
  1800                           
  1801                           ;SPI.c: 49:     spiReceiveWait();
  1802  0447  120A  118A  2440  120A  118A  	fcall	_spiReceiveWait
  1803  044C                     l1056:
  1804                           
  1805                           ;SPI.c: 50:     return(SSPBUF);
  1806  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1807  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1808  044E  0813               	movf	19,w	;volatile
  1809  044F                     l137:
  1810  044F  0008               	return
  1811  0450                     __end_of_spiRead:
  1812                           
  1813                           	psect	text10
  1814  0440                     __ptext10:	
  1815 ;; *************** function _spiReceiveWait *****************
  1816 ;; Defined at:
  1817 ;;		line 29 in file "SPI.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		None
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_spiRead
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _spiReceiveWait
  1846  0440                     _spiReceiveWait:
  1847  0440                     l1040:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _spiReceiveWait: []
  1850                           
  1851  0440                     l123:	
  1852                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1853                           
  1854  0440  1683               	bsf	3,5	;RP0=1, select bank1
  1855  0441  1303               	bcf	3,6	;RP1=0, select bank1
  1856  0442  1C14               	btfss	20,0	;volatile
  1857  0443  2C45               	goto	u171
  1858  0444  2C46               	goto	u170
  1859  0445                     u171:
  1860  0445  2C40               	goto	l123
  1861  0446                     u170:
  1862  0446                     l126:
  1863  0446  0008               	return
  1864  0447                     __end_of_spiReceiveWait:
  1865                           
  1866                           	psect	text11
  1867  04A3                     __ptext11:	
  1868 ;; *************** function _setup *****************
  1869 ;; Defined at:
  1870 ;;		line 182 in file "mainm.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0, pclath, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1884 ;;      Params:         0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    1
  1891 ;; This function calls:
  1892 ;;		_spiInit
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _setup
  1900  04A3                     _setup:
  1901  04A3                     l1130:	
  1902                           ;incstack = 0
  1903                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1904                           
  1905                           
  1906                           ;mainm.c: 183:     ANSEL = 0;
  1907  04A3  1683               	bsf	3,5	;RP0=1, select bank3
  1908  04A4  1703               	bsf	3,6	;RP1=1, select bank3
  1909  04A5  0188               	clrf	8	;volatile
  1910                           
  1911                           ;mainm.c: 184:     ANSELH = 0;
  1912  04A6  0189               	clrf	9	;volatile
  1913                           
  1914                           ;mainm.c: 185:     TRISC = 0;
  1915  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  1916  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  1917  04A9  0187               	clrf	7	;volatile
  1918  04AA                     l1132:
  1919                           
  1920                           ;mainm.c: 186:     TRISCbits.TRISC4 = 1;
  1921  04AA  1607               	bsf	7,4	;volatile
  1922                           
  1923                           ;mainm.c: 187:     TRISB = 0;
  1924  04AB  0186               	clrf	6	;volatile
  1925                           
  1926                           ;mainm.c: 188:     TRISD = 0;
  1927  04AC  0188               	clrf	8	;volatile
  1928                           
  1929                           ;mainm.c: 189:     TRISE = 0;
  1930  04AD  0189               	clrf	9	;volatile
  1931                           
  1932                           ;mainm.c: 190:     PORTB = 0;
  1933  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1934  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1935  04B0  0186               	clrf	6	;volatile
  1936                           
  1937                           ;mainm.c: 191:     PORTD = 0;
  1938  04B1  0188               	clrf	8	;volatile
  1939  04B2                     l1134:
  1940                           
  1941                           ;mainm.c: 192:     PORTCbits.RC0 = 1;
  1942  04B2  1407               	bsf	7,0	;volatile
  1943  04B3                     l1136:
  1944                           
  1945                           ;mainm.c: 193:     PORTCbits.RC1 = 1;
  1946  04B3  1487               	bsf	7,1	;volatile
  1947  04B4                     l1138:
  1948                           
  1949                           ;mainm.c: 194:     PORTCbits.RC2 = 1;
  1950  04B4  1507               	bsf	7,2	;volatile
  1951  04B5                     l1140:
  1952                           
  1953                           ;mainm.c: 195:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
  1954  04B5  01F0               	clrf	spiInit@sDataSample
  1955  04B6  01F1               	clrf	spiInit@sClockIdle
  1956  04B7  01F2               	clrf	spiInit@sTransmitEdge
  1957  04B8  3020               	movlw	32
  1958  04B9  120A  118A  2473  120A  118A  	fcall	_spiInit
  1959  04BE                     l103:
  1960  04BE  0008               	return
  1961  04BF                     __end_of_setup:
  1962                           
  1963                           	psect	text12
  1964  0473                     __ptext12:	
  1965 ;; *************** function _spiInit *****************
  1966 ;; Defined at:
  1967 ;;		line 12 in file "SPI.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  sType           1    wreg     enum E1264
  1970 ;;  sDataSample     1    0[COMMON] enum E1272
  1971 ;;  sClockIdle      1    1[COMMON] enum E1276
  1972 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  sType           1    3[COMMON] enum E1264
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         3       0       0       0       0
  1985 ;;      Locals:         1       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0
  1987 ;;      Totals:         4       0       0       0       0
  1988 ;;Total ram usage:        4 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_setup
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _spiInit
  1999  0473                     _spiInit:
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2003                           ;spiInit@sType stored from wreg
  2004  0473  00F3               	movwf	spiInit@sType
  2005  0474                     l1080:
  2006                           
  2007                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2008  0474  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0475  1303               	bcf	3,6	;RP1=0, select bank1
  2010  0476  1287               	bcf	7,5	;volatile
  2011                           
  2012                           ;SPI.c: 15:     if(sType & 0b00000100)
  2013  0477  1D73               	btfss	spiInit@sType,2
  2014  0478  2C7A               	goto	u211
  2015  0479  2C7B               	goto	u210
  2016  047A                     u211:
  2017  047A  2C7F               	goto	l1086
  2018  047B                     u210:
  2019  047B                     l1082:
  2020                           
  2021                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2022  047B  0872               	movf	spiInit@sTransmitEdge,w
  2023  047C  0094               	movwf	20	;volatile
  2024  047D                     l1084:
  2025                           
  2026                           ;SPI.c: 18:         TRISC3 = 1;
  2027  047D  1587               	bsf	7,3	;volatile
  2028                           
  2029                           ;SPI.c: 19:     }
  2030  047E  2C83               	goto	l119
  2031  047F                     l1086:
  2032                           
  2033                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2034  047F  0870               	movf	spiInit@sDataSample,w
  2035  0480  0472               	iorwf	spiInit@sTransmitEdge,w
  2036  0481  0094               	movwf	20	;volatile
  2037  0482                     l1088:
  2038                           
  2039                           ;SPI.c: 23:         TRISC3 = 0;
  2040  0482  1187               	bcf	7,3	;volatile
  2041  0483                     l119:	
  2042                           ;SPI.c: 24:     }
  2043                           
  2044                           
  2045                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2046  0483  0873               	movf	spiInit@sType,w
  2047  0484  0471               	iorwf	spiInit@sClockIdle,w
  2048  0485  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0486  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0487  0094               	movwf	20	;volatile
  2051  0488                     l120:
  2052  0488  0008               	return
  2053  0489                     __end_of_spiInit:
  2054                           
  2055                           	psect	text13
  2056  05A6                     __ptext13:	
  2057 ;; *************** function _screen *****************
  2058 ;; Defined at:
  2059 ;;		line 128 in file "mainm.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0
  2075 ;;      Temps:          1       0       0       0       0
  2076 ;;      Totals:         1       0       0       0       0
  2077 ;;Total ram usage:        1 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		_Lcd_Set_Cursor
  2082 ;;		_Lcd_Write_String
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _screen
  2090  05A6                     _screen:
  2091  05A6                     l1166:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2094                           
  2095                           
  2096                           ;mainm.c: 129:         Lcd_Set_Cursor(1,1);
  2097  05A6  01F4               	clrf	Lcd_Set_Cursor@b
  2098  05A7  0AF4               	incf	Lcd_Set_Cursor@b,f
  2099  05A8  3001               	movlw	1
  2100  05A9  120A  118A  24BF  120A  118A  	fcall	_Lcd_Set_Cursor
  2101  05AE                     l1168:
  2102                           
  2103                           ;mainm.c: 130:         Lcd_Write_String ("S1: ");
  2104  05AE  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2105  05AF  120A  118A  24E3  120A  118A  	fcall	_Lcd_Write_String
  2106  05B4                     l1170:
  2107                           
  2108                           ;mainm.c: 131:         Lcd_Set_Cursor(1, 7);
  2109  05B4  3007               	movlw	7
  2110  05B5  00F8               	movwf	??_screen
  2111  05B6  0878               	movf	??_screen,w
  2112  05B7  00F4               	movwf	Lcd_Set_Cursor@b
  2113  05B8  3001               	movlw	1
  2114  05B9  120A  118A  24BF  120A  118A  	fcall	_Lcd_Set_Cursor
  2115                           
  2116                           ;mainm.c: 132:         Lcd_Write_String ("S2: ");
  2117  05BE  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2118  05BF  120A  118A  24E3  120A  118A  	fcall	_Lcd_Write_String
  2119  05C4                     l1172:
  2120                           
  2121                           ;mainm.c: 133:         Lcd_Set_Cursor(1, 14);
  2122  05C4  300E               	movlw	14
  2123  05C5  00F8               	movwf	??_screen
  2124  05C6  0878               	movf	??_screen,w
  2125  05C7  00F4               	movwf	Lcd_Set_Cursor@b
  2126  05C8  3001               	movlw	1
  2127  05C9  120A  118A  24BF  120A  118A  	fcall	_Lcd_Set_Cursor
  2128  05CE                     l1174:
  2129                           
  2130                           ;mainm.c: 134:         Lcd_Write_String ("S3: ");
  2131  05CE  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2132  05CF  120A  118A  24E3  120A  118A  	fcall	_Lcd_Write_String
  2133  05D4                     l94:
  2134  05D4  0008               	return
  2135  05D5                     __end_of_screen:
  2136                           
  2137                           	psect	text14
  2138  04E3                     __ptext14:	
  2139 ;; *************** function _Lcd_Write_String *****************
  2140 ;; Defined at:
  2141 ;;		line 71 in file "lcd.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  a               1    wreg     PTR unsigned char 
  2144 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  a               1    5[COMMON] PTR unsigned char 
  2147 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2148 ;;  i               2    3[COMMON] int 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2158 ;;      Params:         0       0       0       0       0
  2159 ;;      Locals:         3       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0
  2161 ;;      Totals:         3       0       0       0       0
  2162 ;;Total ram usage:        3 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    2
  2165 ;; This function calls:
  2166 ;;		_Lcd_Write_Char
  2167 ;; This function is called by:
  2168 ;;		_screen
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           
  2173                           ;psect for function _Lcd_Write_String
  2174  04E3                     _Lcd_Write_String:
  2175                           
  2176                           ;incstack = 0
  2177                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2178                           ;Lcd_Write_String@a stored from wreg
  2179  04E3  00F5               	movwf	Lcd_Write_String@a
  2180  04E4                     l1072:
  2181                           
  2182                           ;lcd.c: 71: void Lcd_Write_String(char *a);lcd.c: 72: {;lcd.c: 73:  int i;;lcd.c: 74:  f
      +                          or(i=0;a[i]!='\0';i++)
  2183  04E4  01F3               	clrf	Lcd_Write_String@i
  2184  04E5  01F4               	clrf	Lcd_Write_String@i+1
  2185  04E6  2CFA               	goto	l1078
  2186  04E7                     l1074:
  2187                           
  2188                           ;lcd.c: 75:     Lcd_Write_Char(a[i]);
  2189  04E7  0873               	movf	Lcd_Write_String@i,w
  2190  04E8  0775               	addwf	Lcd_Write_String@a,w
  2191  04E9  0084               	movwf	4
  2192  04EA  120A  118A  2003  120A  118A  	fcall	stringdir
  2193  04EF  120A  118A  245D  120A  118A  	fcall	_Lcd_Write_Char
  2194  04F4                     l1076:
  2195  04F4  3001               	movlw	1
  2196  04F5  07F3               	addwf	Lcd_Write_String@i,f
  2197  04F6  1803               	skipnc
  2198  04F7  0AF4               	incf	Lcd_Write_String@i+1,f
  2199  04F8  3000               	movlw	0
  2200  04F9  07F4               	addwf	Lcd_Write_String@i+1,f
  2201  04FA                     l1078:
  2202  04FA  0873               	movf	Lcd_Write_String@i,w
  2203  04FB  0775               	addwf	Lcd_Write_String@a,w
  2204  04FC  0084               	movwf	4
  2205  04FD  120A  118A  2003  120A  118A  	fcall	stringdir
  2206  0502  3A00               	xorlw	0
  2207  0503  1D03               	skipz
  2208  0504  2D06               	goto	u201
  2209  0505  2D07               	goto	u200
  2210  0506                     u201:
  2211  0506  2CE7               	goto	l1074
  2212  0507                     u200:
  2213  0507                     l172:
  2214  0507  0008               	return
  2215  0508                     __end_of_Lcd_Write_String:
  2216                           
  2217                           	psect	text15
  2218  045D                     __ptext15:	
  2219 ;; *************** function _Lcd_Write_Char *****************
  2220 ;; Defined at:
  2221 ;;		line 62 in file "lcd.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  a               1    wreg     unsigned char 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  a               1    2[COMMON] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         0       0       0       0       0
  2236 ;;      Locals:         1       0       0       0       0
  2237 ;;      Temps:          1       0       0       0       0
  2238 ;;      Totals:         2       0       0       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    1
  2242 ;; This function calls:
  2243 ;;		_Lcd_Port
  2244 ;; This function is called by:
  2245 ;;		_ss1_screen
  2246 ;;		_ss2_screen
  2247 ;;		_Lcd_Write_String
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _Lcd_Write_Char
  2253  045D                     _Lcd_Write_Char:
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2257                           ;Lcd_Write_Char@a stored from wreg
  2258  045D  00F2               	movwf	Lcd_Write_Char@a
  2259  045E                     l1030:
  2260                           
  2261                           ;lcd.c: 62: void Lcd_Write_Char(char a);lcd.c: 63: {;lcd.c: 64:    RE0 = 1;
  2262  045E  1283               	bcf	3,5	;RP0=0, select bank0
  2263  045F  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0460  1409               	bsf	9,0	;volatile
  2265  0461                     l1032:
  2266                           
  2267                           ;lcd.c: 65:    Lcd_Port(a);
  2268  0461  0872               	movf	Lcd_Write_Char@a,w
  2269  0462  120A  118A  2434  120A  118A  	fcall	_Lcd_Port
  2270  0467                     l1034:
  2271                           
  2272                           ;lcd.c: 66:    RE1 = 1;
  2273  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0468  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0469  1489               	bsf	9,1	;volatile
  2276  046A                     l1036:
  2277                           
  2278                           ;lcd.c: 67:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2279  046A  301A               	movlw	26
  2280  046B  00F1               	movwf	??_Lcd_Write_Char
  2281  046C                     u397:
  2282  046C  0BF1               	decfsz	??_Lcd_Write_Char,f
  2283  046D  2C6C               	goto	u397
  2284  046E  0000               	nop
  2285  046F                     l1038:
  2286                           
  2287                           ;lcd.c: 68:    RE1 = 0;
  2288  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0471  1089               	bcf	9,1	;volatile
  2291  0472                     l166:
  2292  0472  0008               	return
  2293  0473                     __end_of_Lcd_Write_Char:
  2294                           
  2295                           	psect	text16
  2296  04BF                     __ptext16:	
  2297 ;; *************** function _Lcd_Set_Cursor *****************
  2298 ;; Defined at:
  2299 ;;		line 30 in file "lcd.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  a               1    wreg     unsigned char 
  2302 ;;  b               1    4[COMMON] unsigned char 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  a               1    6[COMMON] unsigned char 
  2305 ;;  temp            1    7[COMMON] unsigned char 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2315 ;;      Params:         1       0       0       0       0
  2316 ;;      Locals:         2       0       0       0       0
  2317 ;;      Temps:          1       0       0       0       0
  2318 ;;      Totals:         4       0       0       0       0
  2319 ;;Total ram usage:        4 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    2
  2322 ;; This function calls:
  2323 ;;		_Lcd_Cmd
  2324 ;; This function is called by:
  2325 ;;		_screen
  2326 ;;		_ss1_screen
  2327 ;;		_ss2_screen
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _Lcd_Set_Cursor
  2333  04BF                     _Lcd_Set_Cursor:
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2337                           ;Lcd_Set_Cursor@a stored from wreg
  2338  04BF  00F6               	movwf	Lcd_Set_Cursor@a
  2339  04C0                     l1060:
  2340                           
  2341                           ;lcd.c: 30: void Lcd_Set_Cursor(char a, char b);lcd.c: 31: {;lcd.c: 32:  char temp;;lcd.
      +                          c: 33:  if(a == 1)
  2342  04C0  0376               	decf	Lcd_Set_Cursor@a,w
  2343  04C1  1D03               	btfss	3,2
  2344  04C2  2CC4               	goto	u181
  2345  04C3  2CC5               	goto	u180
  2346  04C4                     u181:
  2347  04C4  2CD1               	goto	l1066
  2348  04C5                     u180:
  2349  04C5                     l1062:
  2350                           
  2351                           ;lcd.c: 34:  {;lcd.c: 35:    temp = 0x80 + b - 1;
  2352  04C5  0874               	movf	Lcd_Set_Cursor@b,w
  2353  04C6  3E7F               	addlw	127
  2354  04C7  00F5               	movwf	??_Lcd_Set_Cursor
  2355  04C8  0875               	movf	??_Lcd_Set_Cursor,w
  2356  04C9  00F7               	movwf	Lcd_Set_Cursor@temp
  2357  04CA                     l1064:
  2358                           
  2359                           ;lcd.c: 36:   Lcd_Cmd(temp);
  2360  04CA  0877               	movf	Lcd_Set_Cursor@temp,w
  2361  04CB  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2362                           
  2363                           ;lcd.c: 37:  }
  2364  04D0  2CE2               	goto	l160
  2365  04D1                     l1066:
  2366  04D1  3002               	movlw	2
  2367  04D2  0676               	xorwf	Lcd_Set_Cursor@a,w
  2368  04D3  1D03               	btfss	3,2
  2369  04D4  2CD6               	goto	u191
  2370  04D5  2CD7               	goto	u190
  2371  04D6                     u191:
  2372  04D6  2CE2               	goto	l160
  2373  04D7                     u190:
  2374  04D7                     l1068:
  2375                           
  2376                           ;lcd.c: 39:  {;lcd.c: 40:   temp = 0xC0 + b - 1;
  2377  04D7  0874               	movf	Lcd_Set_Cursor@b,w
  2378  04D8  3EBF               	addlw	191
  2379  04D9  00F5               	movwf	??_Lcd_Set_Cursor
  2380  04DA  0875               	movf	??_Lcd_Set_Cursor,w
  2381  04DB  00F7               	movwf	Lcd_Set_Cursor@temp
  2382  04DC                     l1070:
  2383                           
  2384                           ;lcd.c: 41:   Lcd_Cmd(temp);
  2385  04DC  0877               	movf	Lcd_Set_Cursor@temp,w
  2386  04DD  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2387  04E2                     l160:
  2388  04E2  0008               	return
  2389  04E3                     __end_of_Lcd_Set_Cursor:
  2390                           
  2391                           	psect	text17
  2392  064A                     __ptext17:	
  2393 ;; *************** function _Lcd_Init *****************
  2394 ;; Defined at:
  2395 ;;		line 45 in file "lcd.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2409 ;;      Params:         0       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0
  2411 ;;      Temps:          2       0       0       0       0
  2412 ;;      Totals:         2       0       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    2
  2416 ;; This function calls:
  2417 ;;		_Lcd_Cmd
  2418 ;;		_Lcd_Port
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _Lcd_Init
  2426  064A                     _Lcd_Init:
  2427  064A                     l1142:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2430                           
  2431                           
  2432                           ;lcd.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2433  064A  3034               	movlw	52
  2434  064B  00F5               	movwf	??_Lcd_Init+1
  2435  064C  30F1               	movlw	241
  2436  064D  00F4               	movwf	??_Lcd_Init
  2437  064E                     u407:
  2438  064E  0BF4               	decfsz	??_Lcd_Init,f
  2439  064F  2E4E               	goto	u407
  2440  0650  0BF5               	decfsz	??_Lcd_Init+1,f
  2441  0651  2E4E               	goto	u407
  2442  0652  2E53               	nop2
  2443  0653                     l1144:
  2444                           
  2445                           ;lcd.c: 47:     Lcd_Port(0x00);
  2446  0653  3000               	movlw	0
  2447  0654  120A  118A  2434  120A  118A  	fcall	_Lcd_Port
  2448  0659                     l1146:
  2449                           
  2450                           ;lcd.c: 48:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2451  0659  3034               	movlw	52
  2452  065A  00F5               	movwf	??_Lcd_Init+1
  2453  065B  30F1               	movlw	241
  2454  065C  00F4               	movwf	??_Lcd_Init
  2455  065D                     u417:
  2456  065D  0BF4               	decfsz	??_Lcd_Init,f
  2457  065E  2E5D               	goto	u417
  2458  065F  0BF5               	decfsz	??_Lcd_Init+1,f
  2459  0660  2E5D               	goto	u417
  2460  0661  2E62               	nop2
  2461                           
  2462                           ;lcd.c: 49:     Lcd_Cmd(0x30);
  2463  0662  3030               	movlw	48
  2464  0663  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2465  0668                     l1148:
  2466                           
  2467                           ;lcd.c: 50:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2468  0668  300D               	movlw	13
  2469  0669  00F5               	movwf	??_Lcd_Init+1
  2470  066A  30FB               	movlw	251
  2471  066B  00F4               	movwf	??_Lcd_Init
  2472  066C                     u427:
  2473  066C  0BF4               	decfsz	??_Lcd_Init,f
  2474  066D  2E6C               	goto	u427
  2475  066E  0BF5               	decfsz	??_Lcd_Init+1,f
  2476  066F  2E6C               	goto	u427
  2477  0670  2E71               	nop2
  2478  0671                     l1150:
  2479                           
  2480                           ;lcd.c: 51:     Lcd_Cmd(0x30);
  2481  0671  3030               	movlw	48
  2482  0672  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2483                           
  2484                           ;lcd.c: 52:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2485  0677  301D               	movlw	29
  2486  0678  00F5               	movwf	??_Lcd_Init+1
  2487  0679  3091               	movlw	145
  2488  067A  00F4               	movwf	??_Lcd_Init
  2489  067B                     u437:
  2490  067B  0BF4               	decfsz	??_Lcd_Init,f
  2491  067C  2E7B               	goto	u437
  2492  067D  0BF5               	decfsz	??_Lcd_Init+1,f
  2493  067E  2E7B               	goto	u437
  2494  067F                     l1152:
  2495                           
  2496                           ;lcd.c: 53:     Lcd_Cmd(0x30);
  2497  067F  3030               	movlw	48
  2498  0680  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2499  0685                     l1154:
  2500                           
  2501                           ;lcd.c: 55:     Lcd_Cmd(0x38);
  2502  0685  3038               	movlw	56
  2503  0686  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2504  068B                     l1156:
  2505                           
  2506                           ;lcd.c: 56:     Lcd_Cmd(0x08);
  2507  068B  3008               	movlw	8
  2508  068C  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2509  0691                     l1158:
  2510                           
  2511                           ;lcd.c: 57:     Lcd_Cmd(0x01);
  2512  0691  3001               	movlw	1
  2513  0692  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2514  0697                     l1160:
  2515                           
  2516                           ;lcd.c: 58:     Lcd_Cmd(0x06);
  2517  0697  3006               	movlw	6
  2518  0698  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2519  069D                     l1162:
  2520                           
  2521                           ;lcd.c: 59:     Lcd_Cmd(0x0C);
  2522  069D  300C               	movlw	12
  2523  069E  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2524  06A3                     l163:
  2525  06A3  0008               	return
  2526  06A4                     __end_of_Lcd_Init:
  2527                           
  2528                           	psect	text18
  2529  0450                     __ptext18:	
  2530 ;; *************** function _Lcd_Clear *****************
  2531 ;; Defined at:
  2532 ;;		line 24 in file "lcd.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    2
  2553 ;; This function calls:
  2554 ;;		_Lcd_Cmd
  2555 ;; This function is called by:
  2556 ;;		_main
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function _Lcd_Clear
  2562  0450                     _Lcd_Clear:
  2563  0450                     l1164:	
  2564                           ;incstack = 0
  2565                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2566                           
  2567                           
  2568                           ;lcd.c: 26:  Lcd_Cmd(0);
  2569  0450  3000               	movlw	0
  2570  0451  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2571                           
  2572                           ;lcd.c: 27:  Lcd_Cmd(1);
  2573  0456  3001               	movlw	1
  2574  0457  120A  118A  2489  120A  118A  	fcall	_Lcd_Cmd
  2575  045C                     l154:
  2576  045C  0008               	return
  2577  045D                     __end_of_Lcd_Clear:
  2578                           
  2579                           	psect	text19
  2580  0489                     __ptext19:	
  2581 ;; *************** function _Lcd_Cmd *****************
  2582 ;; Defined at:
  2583 ;;		line 16 in file "lcd.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  a               1    wreg     unsigned char 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  a               1    3[COMMON] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0, pclath, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2597 ;;      Params:         0       0       0       0       0
  2598 ;;      Locals:         1       0       0       0       0
  2599 ;;      Temps:          2       0       0       0       0
  2600 ;;      Totals:         3       0       0       0       0
  2601 ;;Total ram usage:        3 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    1
  2604 ;; This function calls:
  2605 ;;		_Lcd_Port
  2606 ;; This function is called by:
  2607 ;;		_Lcd_Clear
  2608 ;;		_Lcd_Set_Cursor
  2609 ;;		_Lcd_Init
  2610 ;;		_Lcd_Shift_Right
  2611 ;;		_Lcd_Shift_Left
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _Lcd_Cmd
  2617  0489                     _Lcd_Cmd:
  2618                           
  2619                           ;incstack = 0
  2620                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2621                           ;Lcd_Cmd@a stored from wreg
  2622  0489  00F3               	movwf	Lcd_Cmd@a
  2623  048A                     l1042:
  2624                           
  2625                           ;lcd.c: 17:     RE0 = 0;
  2626  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2627  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2628  048C  1009               	bcf	9,0	;volatile
  2629  048D                     l1044:
  2630                           
  2631                           ;lcd.c: 18:     Lcd_Port(a);
  2632  048D  0873               	movf	Lcd_Cmd@a,w
  2633  048E  120A  118A  2434  120A  118A  	fcall	_Lcd_Port
  2634  0493                     l1046:
  2635                           
  2636                           ;lcd.c: 19:     RE1 = 1;
  2637  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0495  1489               	bsf	9,1	;volatile
  2640  0496                     l1048:
  2641                           
  2642                           ;lcd.c: 20:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2643  0496  300B               	movlw	11
  2644  0497  00F2               	movwf	??_Lcd_Cmd+1
  2645  0498  3062               	movlw	98
  2646  0499  00F1               	movwf	??_Lcd_Cmd
  2647  049A                     u447:
  2648  049A  0BF1               	decfsz	??_Lcd_Cmd,f
  2649  049B  2C9A               	goto	u447
  2650  049C  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2651  049D  2C9A               	goto	u447
  2652  049E  0000               	nop
  2653  049F                     l1050:
  2654                           
  2655                           ;lcd.c: 21:     RE1 = 0;
  2656  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2657  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2658  04A1  1089               	bcf	9,1	;volatile
  2659  04A2                     l151:
  2660  04A2  0008               	return
  2661  04A3                     __end_of_Lcd_Cmd:
  2662                           
  2663                           	psect	text20
  2664  0434                     __ptext20:	
  2665 ;; *************** function _Lcd_Port *****************
  2666 ;; Defined at:
  2667 ;;		line 11 in file "lcd.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  a               1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  a               1    0[COMMON] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       0       0       0       0
  2682 ;;      Locals:         1       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0
  2684 ;;      Totals:         1       0       0       0       0
  2685 ;;Total ram usage:        1 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_Lcd_Cmd
  2691 ;;		_Lcd_Init
  2692 ;;		_Lcd_Write_Char
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           
  2697                           ;psect for function _Lcd_Port
  2698  0434                     _Lcd_Port:
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in _Lcd_Port: [wreg]
  2702                           ;Lcd_Port@a stored from wreg
  2703  0434  00F0               	movwf	Lcd_Port@a
  2704  0435                     l1028:
  2705                           
  2706                           ;lcd.c: 11: void Lcd_Port(char a);lcd.c: 12: {;lcd.c: 13:  PORTD = a;
  2707  0435  0870               	movf	Lcd_Port@a,w
  2708  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0438  0088               	movwf	8	;volatile
  2711  0439                     l148:
  2712  0439  0008               	return
  2713  043A                     __end_of_Lcd_Port:
  2714  007E                     btemp	set	126	;btemp
  2715  007E                     wtemp0	set	126
  2716                           
  2717                           	psect	config
  2718                           
  2719                           ;Config register CONFIG1 @ 0x2007
  2720                           ;	Oscillator Selection bits
  2721                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2722                           ;	Watchdog Timer Enable bit
  2723                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2724                           ;	Power-up Timer Enable bit
  2725                           ;	PWRTE = OFF, PWRT disabled
  2726                           ;	RE3/MCLR pin function select bit
  2727                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2728                           ;	Code Protection bit
  2729                           ;	CP = OFF, Program memory code protection is disabled
  2730                           ;	Data Code Protection bit
  2731                           ;	CPD = OFF, Data memory code protection is disabled
  2732                           ;	Brown Out Reset Selection bits
  2733                           ;	BOREN = ON, BOR enabled
  2734                           ;	Internal External Switchover bit
  2735                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2736                           ;	Fail-Safe Clock Monitor Enabled bit
  2737                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2738                           ;	Low Voltage Programming Enable bit
  2739                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2740                           ;	In-Circuit Debugger Mode bit
  2741                           ;	DEBUG = 0x1, unprogrammed default
  2742  2007                     	org	8199
  2743  2007  23F4               	dw	9204
  2744                           
  2745                           ;Config register CONFIG2 @ 0x2008
  2746                           ;	Brown-out Reset Selection bit
  2747                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2748                           ;	Flash Program Memory Self Write Enable bits
  2749                           ;	WRT = OFF, Write protection off
  2750  2008                     	org	8200
  2751  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_ss1_screen
    _main->_ss2_screen
    _ss2_screen->_Lcd_Set_Cursor
    _ss2_screen->___lwdiv
    _ss1_screen->_Lcd_Set_Cursor
    _ss1_screen->___lwdiv
    _slave_3->_spiWrite
    _slave_2->_spiWrite
    _slave_1->_spiWrite
    _setup->_spiInit
    _screen->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6383
                          _Lcd_Clear
                           _Lcd_Init
                             _screen
                              _setup
                            _slave_1
                            _slave_2
                            _slave_3
                         _ss1_screen
                         _ss2_screen
 ---------------------------------------------------------------------------------
 (1) _ss2_screen                                           2     2      0    2376
                                              8 COMMON     2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _ss1_screen                                           2     2      0    2376
                                              8 COMMON     2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     770
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _slave_3                                              2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _slave_2                                              2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _slave_1                                              2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _screen                                               1     1      0    1095
                                              8 COMMON     1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     233
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     862
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _screen
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _setup
     _spiInit
   _slave_1
     _spiRead
       _spiReceiveWait
     _spiWrite
   _slave_2
     _spiRead
       _spiReceiveWait
     _spiWrite
   _slave_3
     _spiRead
       _spiReceiveWait
     _spiWrite
   _ss1_screen
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     ___lwdiv
     ___wmul
   _ss2_screen
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     ___lwdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 22:28:32 2021

                        pc 0002                _SSPSTATbits 0094                         l91 0553  
                       l85 057C                         l94 05D4                         l88 05A5  
                       l97 0747                         fsr 0004        ___wmul@multiplicand 0072  
                      l100 07EC                        l103 04BE                        l120 0488  
                      l123 0440                        l126 0446                        l151 04A2  
                      l119 0483                        l160 04E2                        l137 044F  
                      l129 043F                        l154 045C                        l163 06A3  
                      l148 0439                        l172 0507                        l166 0472  
                      l264 0514                        l266 052C                        l536 0649  
                      _RE0 0048                        _RE1 0049                        u200 0507  
                      u201 0506                        u210 047B                        u211 047A  
                      u300 0631                        u220 050E                        u301 0630  
                      u221 050D                        u320 0645                        u321 0644  
                      u305 062D                        u170 0446                        u250 0528  
                      u171 0445                        u315 0639                        u251 0527  
                      u235 0515                        u180 04C5                        u260 060E  
                      u181 04C4                        u261 060D                        u245 051C  
                      u190 04D7                        u407 064E                        u191 04D6  
                      u280 0620                        u417 065D                        u337 0534  
                      u281 061F                        u427 066C                        u347 054B  
                      u275 0612                        u437 067B                        u357 0584  
                      u447 049A                        u367 059D                        u295 0621  
                      u377 055B                        u387 0574                        u397 046C  
                      _POT 0028                        fsr0 0004                       l1100 0528  
                     l1030 045E                       l1110 0611                       l1032 0461  
                     l1040 0440                       l1200 0539                       l1120 0637  
                     l1112 0618                       l1104 0606                       l1050 049F  
                     l1042 048A                       l1034 0467                       l1130 04A3  
                     l1202 053F                       l1122 0638                       l1114 061C  
                     l1106 0608                       l1210 06BF                       l1028 0435  
                     l1044 048D                       l1060 04C0                       l1036 046A  
                     l1140 04B5                       l1132 04AA                       l1052 043B  
                     l1204 0550                       l1124 063F                       l1116 0620  
                     l1108 060E                       l1220 0712                       l1212 06D9  
                     l1046 0493                       l1150 0671                       l1142 064A  
                     l1070 04DC                       l1062 04C5                       l1038 046F  
                     l1134 04B2                       l1054 0447                       l1118 0631  
                     l1126 0645                       l1230 0735                       l1222 0717  
                     l1214 06EA                       l1206 06A4                       l1048 0496  
                     l1160 0697                       l1152 067F                       l1144 0653  
                     l1064 04CA                       l1072 04E4                       l1080 0474  
                     l1136 04B3                       l1056 044C                       l1232 073F  
                     l1224 071F                       l1216 0708                       l1208 06AE  
                     l1240 077C                       l1162 069D                       l1154 0685  
                     l1146 0659                       l1066 04D1                       l1074 04E7  
                     l1170 05B4                       l1082 047B                       l1138 04B4  
                     l1090 0508                       l1226 0725                       l1218 070D  
                     l1250 07BA                       l1242 078D                       l1234 0748  
                     l1164 0450                       l1156 068B                       l1148 0668  
                     l1068 04D7                       l1076 04F4                       l1172 05C4  
                     l1084 047D                       l1180 0560                       l1092 050A  
                     l1228 072F                       l1260 07E4                       l1252 07C4  
                     l1244 07AB                       l1236 0751                       l1158 0691  
                     l1078 04FA                       l1174 05CE                       l1166 05A6  
                     l1086 047F                       l1182 0566                       l1190 0589  
                     l1094 050E                       l1254 07CA                       l1246 07B0  
                     l1238 0762                       l1270 05F3                       l1262 05D5  
                     l1168 05AE                       l1088 0482                       l1184 0579  
                     l1176 0554                       l1192 058F                       l1096 051B  
                     l1256 07D4                       l1248 07B5                       l1272 05F8  
                     l1264 05E4                       l1178 0557                       l1194 05A2  
                     l1186 057D                       l1098 0522                       l1258 07DA  
                     l1274 05FD                       l1266 05E9                       l1188 0580  
                     l1196 052D                       l1268 05EE                       l1198 0530  
                     STR_1 0009                       STR_2 000E                       STR_3 0013  
                     _CONT 0027                       _decC 007A                       _decV 007C  
        ?_Lcd_Write_String 0070                       _main 05D5                       _hunC 0024  
                     _hunV 0025                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0073            __end_of_Lcd_Cmd 04A3                      ?_main 0070  
                    _ANSEL 0188            __end_of___lwdiv 064A                      _THERM 0026  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _setup 04A3                      _unitC 007B  
                    _unitV 007D                      pclath 000A            __end_of_slave_1 057D  
          __end_of_slave_2 05A6            __end_of_slave_3 0554            __end_of_spiInit 0489  
          __end_of_spiRead 0450                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 06A4           __end_of_Lcd_Port 043A            __initialization 07ED  
             __end_of_main 0606                     ??_main 007A         __size_of_Lcd_Clear 000D  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0016                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPCON 0014                     _SSPBUF 0013                     ___wmul 0508  
                ??___lwdiv 0074                     _screen 05A6           __end_of_spiWrite 0440  
                ??_slave_1 0071                  ??_slave_2 0071                  ??_slave_3 0071  
                ??_spiInit 0073                  ??_spiRead 0070            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC          __end_of_Lcd_Clear 045D  
           __pcstackCOMMON 0070              __end_of_setup 04BF             _Lcd_Set_Cursor 04BF  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0074  
               __pbssBANK0 0020                 __pmaintext 05D5                    ?___wmul 0070  
  __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0025                    ?_screen 0070  
   __end_of_Lcd_Set_Cursor 04E3                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPSTAT 0094                 __stringtab 0003             _Lcd_Write_Char 045D  
                  _Lcd_Cmd 0489                 _ss1_screen 06A4                 _ss2_screen 0748  
                ?_spiWrite 0070            __size_of___wmul 0025                    ___lwdiv 0606  
          ?_Lcd_Set_Cursor 0074            __size_of_screen 002F                    __ptext1 0748  
                  __ptext2 06A4                    __ptext3 0508                    __ptext4 0606  
                  __ptext5 052D                    __ptext6 057D                    __ptext7 0554  
                  __ptext8 043A                    __ptext9 0447                    _slave_1 0554  
                  _slave_2 057D                    _slave_3 052D                    _spiInit 0473  
                  _spiRead 0447     __end_of_Lcd_Write_Char 0473       end_of_initialization 07FC  
               ??_spiWrite 0070                  Lcd_Port@a 0070                  _PORTCbits 0007  
                _TRISCbits 0087                spiWrite@dat 0070            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0073                ?_ss1_screen 0070  
              ?_ss2_screen 0070                  _Lcd_Clear 0450             _spiReceiveWait 0440  
           __end_of___wmul 052D           _Lcd_Write_String 04E3             __end_of_screen 05D5  
      start_initialization 07ED          __size_of_Lcd_Init 005A          __size_of_Lcd_Port 0006  
   __end_of_spiReceiveWait 0447                 ?_Lcd_Clear 0070                   ??___wmul 0074  
          Lcd_Write_Char@a 0072                   ??_screen 0078        __size_of_ss1_screen 00A4  
      __size_of_ss2_screen 00A5                __pbssCOMMON 007A                  ___latbits 0002  
                 ?_Lcd_Cmd 0070           ___lwdiv@dividend 0072            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0075                   ?___lwdiv 0070          __size_of_spiWrite 0006  
                __pstrings 0003                  _cont_temp 0020                   ?_slave_1 0070  
                 ?_slave_2 0070                   ?_slave_3 0070                   ?_spiInit 0070  
                 ?_spiRead 0070           ___lwdiv@quotient 0075             __size_of_setup 001C  
     spiInit@sTransmitEdge 0072             ___wmul@product 0074         spiInit@sDataSample 0070  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                __stringbase 0008  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                   _Lcd_Init 064A  
                 _Lcd_Port 0434   __end_of_Lcd_Write_String 0508               ??_ss1_screen 0078  
             ??_ss2_screen 0078           __size_of_Lcd_Cmd 001A           __size_of___lwdiv 0044  
       __end_of__stringtab 0009                   _adc_temp 0022         __end_of_ss1_screen 0748  
       __end_of_ss2_screen 07ED            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0440                   __ptext11 04A3                   __ptext20 0434  
                 __ptext12 0473                   __ptext13 05A6                   __ptext14 04E3  
                 __ptext15 045D                   __ptext16 04BF                   __ptext17 064A  
                 __ptext18 0450                   __ptext19 0489           __size_of_slave_1 0029  
         __size_of_slave_2 0029           __size_of_slave_3 0027           __size_of_spiInit 0016  
         __size_of_spiRead 0009              __size_of_main 0031                   _spiWrite 043A  
             spiInit@sType 0073          spiInit@sClockIdle 0071           ??_spiReceiveWait 0070  
                stringcode 0003         Lcd_Set_Cursor@temp 0077                   stringdir 0003  
                 stringtab 0003  
